diff -Naur libdrm-2.4.22-old/include/drm/nouveau_drm.h libdrm-2.4.22-new/include/drm/nouveau_drm.h
--- libdrm-2.4.22-old/include/drm/nouveau_drm.h	2010-08-12 16:50:47.000000000 -0700
+++ libdrm-2.4.22-new/include/drm/nouveau_drm.h	2010-11-01 19:12:06.000000000 -0700
@@ -80,6 +80,8 @@
 #define NOUVEAU_GETPARAM_VM_VRAM_BASE    12
 #define NOUVEAU_GETPARAM_GRAPH_UNITS     13
 #define NOUVEAU_GETPARAM_PTIMER_TIME     14
+#define NOUVEAU_GETPARAM_HAS_BO_USAGE    15
+#define NOUVEAU_GETPARAM_HAS_PAGEFLIP    16
 struct drm_nouveau_getparam {
 	uint64_t param;
 	uint64_t value;
@@ -95,6 +97,12 @@
 #define NOUVEAU_GEM_DOMAIN_GART      (1 << 2)
 #define NOUVEAU_GEM_DOMAIN_MAPPABLE  (1 << 3)
 
+#define NOUVEAU_GEM_TILE_LAYOUT_MASK 0x0000ff00
+#define NOUVEAU_GEM_TILE_16BPP       0x00000001
+#define NOUVEAU_GEM_TILE_32BPP       0x00000002
+#define NOUVEAU_GEM_TILE_ZETA        0x00000004
+#define NOUVEAU_GEM_TILE_NONCONTIG   0x00000008
+
 struct drm_nouveau_gem_info {
 	uint32_t handle;
 	uint32_t domain;
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_bo.c libdrm-2.4.22-new/nouveau/nouveau_bo.c
--- libdrm-2.4.22-old/nouveau/nouveau_bo.c	2010-06-10 15:20:09.000000000 -0700
+++ libdrm-2.4.22-new/nouveau/nouveau_bo.c	2010-11-01 19:12:06.000000000 -0700
@@ -52,7 +52,8 @@
 	nvbo->offset = arg->offset;
 	nvbo->map_handle = arg->map_handle;
 	nvbo->base.tile_mode = arg->tile_mode;
-	nvbo->base.tile_flags = arg->tile_flags;
+	/* XXX - flag inverted for backwards compatibility */
+	nvbo->base.tile_flags = arg->tile_flags ^ NOUVEAU_GEM_TILE_NONCONTIG;
 	return 0;
 }
 
@@ -140,6 +141,10 @@
 
 	info->tile_mode = nvbo->base.tile_mode;
 	info->tile_flags = nvbo->base.tile_flags;
+	/* XXX - flag inverted for backwards compatibility */
+	info->tile_flags ^= NOUVEAU_GEM_TILE_NONCONTIG;
+	if (!nvdev->has_bo_usage)
+		info->tile_flags &= NOUVEAU_GEM_TILE_LAYOUT_MASK;
 
 	ret = drmCommandWriteRead(nvdev->fd, DRM_NOUVEAU_GEM_NEW,
 				  &req, sizeof(req));
@@ -429,6 +434,8 @@
 					      (flags & NOUVEAU_BO_NOWAIT), 0);
 			if (ret)
 				return ret;
+
+			nvbo->map_refcnt++;
 		}
 
 		bo->map = (char *)nvbo->map + delta;
@@ -453,13 +460,14 @@
 {
 	struct nouveau_bo_priv *nvbo = nouveau_bo(bo);
 
-	if (bo->map && !nvbo->sysmem) {
+	if (bo->map && !nvbo->sysmem && nvbo->map_refcnt) {
 		struct nouveau_device_priv *nvdev = nouveau_device(bo->device);
 		struct drm_nouveau_gem_cpu_fini req;
 
 		req.handle = nvbo->handle;
 		drmCommandWrite(nvdev->fd, DRM_NOUVEAU_GEM_CPU_FINI,
 				&req, sizeof(req));
+		nvbo->map_refcnt--;
 	}
 
 	bo->map = NULL;
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_bo.h libdrm-2.4.22-new/nouveau/nouveau_bo.h
--- libdrm-2.4.22-old/nouveau/nouveau_bo.h	2010-02-16 11:16:27.000000000 -0800
+++ libdrm-2.4.22-new/nouveau/nouveau_bo.h	2010-11-01 19:12:06.000000000 -0700
@@ -39,6 +39,12 @@
 #define NOUVEAU_BO_IFLUSH (1 << 15)
 #define NOUVEAU_BO_DUMMY  (1 << 31)
 
+#define NOUVEAU_BO_TILE_LAYOUT_MASK 0x0000ff00
+#define NOUVEAU_BO_TILE_16BPP       0x00000001
+#define NOUVEAU_BO_TILE_32BPP       0x00000002
+#define NOUVEAU_BO_TILE_ZETA        0x00000004
+#define NOUVEAU_BO_TILE_SCANOUT     0x00000008
+
 struct nouveau_bo {
 	struct nouveau_device *device;
 	uint32_t handle;
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_channel.c libdrm-2.4.22-new/nouveau/nouveau_channel.c
--- libdrm-2.4.22-old/nouveau/nouveau_channel.c	2010-06-10 15:20:09.000000000 -0700
+++ libdrm-2.4.22-new/nouveau/nouveau_channel.c	2010-11-01 19:12:06.000000000 -0700
@@ -28,7 +28,8 @@
 
 int
 nouveau_channel_alloc(struct nouveau_device *dev, uint32_t fb_ctxdma,
-		      uint32_t tt_ctxdma, struct nouveau_channel **chan)
+		      uint32_t tt_ctxdma, int pushbuf_size,
+		      struct nouveau_channel **chan)
 {
 	struct nouveau_device_priv *nvdev = nouveau_device(dev);
 	struct nouveau_channel_priv *nvchan;
@@ -90,7 +91,7 @@
 		return ret;
 	}
 
-	ret = nouveau_pushbuf_init(&nvchan->base);
+	ret = nouveau_pushbuf_init(&nvchan->base, pushbuf_size);
 	if (ret) {
 		nouveau_channel_free((void *)&nvchan);
 		return ret;
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_channel.h libdrm-2.4.22-new/nouveau/nouveau_channel.h
--- libdrm-2.4.22-old/nouveau/nouveau_channel.h	2010-02-16 11:16:27.000000000 -0800
+++ libdrm-2.4.22-new/nouveau/nouveau_channel.h	2010-11-01 19:12:06.000000000 -0700
@@ -49,7 +49,7 @@
 
 int
 nouveau_channel_alloc(struct nouveau_device *, uint32_t fb, uint32_t tt,
-		      struct nouveau_channel **);
+		      int pushbuf_size, struct nouveau_channel **);
 
 void
 nouveau_channel_free(struct nouveau_channel **);
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_device.c libdrm-2.4.22-new/nouveau/nouveau_device.c
--- libdrm-2.4.22-old/nouveau/nouveau_device.c	2010-09-28 20:37:17.000000000 -0700
+++ libdrm-2.4.22-new/nouveau/nouveau_device.c	2010-11-01 19:12:06.000000000 -0700
@@ -95,6 +95,11 @@
 	}
 	nvdev->base.chipset = value;
 
+	ret = nouveau_device_get_param(&nvdev->base,
+				       NOUVEAU_GETPARAM_HAS_BO_USAGE, &value);
+	if (!ret)
+		nvdev->has_bo_usage = value;
+
 	*dev = &nvdev->base;
 	return 0;
 }
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_drmif.h libdrm-2.4.22-new/nouveau/nouveau_drmif.h
--- libdrm-2.4.22-old/nouveau/nouveau_drmif.h	2010-01-21 10:45:40.000000000 -0800
+++ libdrm-2.4.22-new/nouveau/nouveau_drmif.h	2010-11-01 19:12:06.000000000 -0700
@@ -35,6 +35,7 @@
 	drm_context_t ctx;
 	drmLock *lock;
 	int needs_close;
+	int has_bo_usage;
 };
 #define nouveau_device(n) ((struct nouveau_device_priv *)(n))
 
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_private.h libdrm-2.4.22-new/nouveau/nouveau_private.h
--- libdrm-2.4.22-old/nouveau/nouveau_private.h	2010-06-10 15:20:09.000000000 -0700
+++ libdrm-2.4.22-new/nouveau/nouveau_private.h	2010-11-01 19:12:06.000000000 -0700
@@ -37,8 +37,8 @@
 #include "nouveau_pushbuf.h"
 #include "nouveau_reloc.h"
 
-#define CALPB_BUFFERS 4
-#define CALPB_BUFSZ   16384
+#define CALPB_BUFFERS 3
+
 struct nouveau_pushbuf_priv {
 	uint32_t cal_suffix0;
 	uint32_t cal_suffix1;
@@ -64,7 +64,7 @@
 #define nouveau_pushbuf(n) ((struct nouveau_pushbuf_priv *)(n))
 
 int
-nouveau_pushbuf_init(struct nouveau_channel *);
+nouveau_pushbuf_init(struct nouveau_channel *, int buf_size);
 void
 nouveau_pushbuf_fini(struct nouveau_channel *);
 
@@ -115,6 +115,7 @@
 	uint32_t global_handle;
 	drm_handle_t handle;
 	uint64_t map_handle;
+	int map_refcnt;
 	void *map;
 
 	/* Last known information from kernel on buffer status */
diff -Naur libdrm-2.4.22-old/nouveau/nouveau_pushbuf.c libdrm-2.4.22-new/nouveau/nouveau_pushbuf.c
--- libdrm-2.4.22-old/nouveau/nouveau_pushbuf.c	2010-02-16 11:16:27.000000000 -0800
+++ libdrm-2.4.22-new/nouveau/nouveau_pushbuf.c	2010-11-01 19:12:06.000000000 -0700
@@ -78,7 +78,7 @@
 }
 
 static int
-nouveau_pushbuf_init_call(struct nouveau_channel *chan)
+nouveau_pushbuf_init_call(struct nouveau_channel *chan, int buf_size)
 {
 	struct drm_nouveau_gem_pushbuf req;
 	struct nouveau_channel_priv *nvchan = nouveau_channel(chan);
@@ -101,7 +101,7 @@
 
 	for (i = 0; i < CALPB_BUFFERS; i++) {
 		ret = nouveau_bo_new(dev, flags | NOUVEAU_BO_MAP,
-				     0, CALPB_BUFSZ, &nvpb->buffer[i]);
+				     0, buf_size, &nvpb->buffer[i]);
 		if (ret) {
 			nouveau_pushbuf_fini_call(chan);
 			return ret;
@@ -114,13 +114,13 @@
 }
 
 int
-nouveau_pushbuf_init(struct nouveau_channel *chan)
+nouveau_pushbuf_init(struct nouveau_channel *chan, int buf_size)
 {
 	struct nouveau_channel_priv *nvchan = nouveau_channel(chan);
 	struct nouveau_pushbuf_priv *nvpb = &nvchan->pb;
 	int ret;
 
-	ret = nouveau_pushbuf_init_call(chan);
+	ret = nouveau_pushbuf_init_call(chan, buf_size);
 	if (ret)
 		return ret;
 
