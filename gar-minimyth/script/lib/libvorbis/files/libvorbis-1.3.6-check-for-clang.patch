diff -Naur libvorbis-1.3.6-old/configure.ac libvorbis-1.3.6-new/configure.ac
--- libvorbis-1.3.6-old/configure.ac	2018-03-16 09:19:52.000000000 -0700
+++ libvorbis-1.3.6-new/configure.ac	2020-04-01 16:39:17.467818932 -0700
@@ -98,6 +98,16 @@
 
 AM_CONDITIONAL(BUILD_EXAMPLES, [test "x$enable_examples" = xyes])
 
+AC_MSG_CHECKING([whether C compiler is clang])
+$CC -x c /dev/null -dM -E > conftest.txt 2>&1
+if grep "__clang__" conftest.txt >/dev/null 2>&1; then
+  AC_SUBST([CC_CLANG], [1])
+   AC_MSG_RESULT([yes])
+ else
+   AC_SUBST([CC_CLANG], [0])
+   AC_MSG_RESULT([no])
+fi
+
 dnl --------------------------------------------------
 dnl Set build flags based on environment
 dnl --------------------------------------------------
@@ -132,10 +142,15 @@
 	AC_MSG_RESULT([$GCC_VERSION])
 	case $host in
 	*86-*-linux*)
+		if test "$CC_CLANG" = "1"; then
+			ieeefp=""
+		else
+			ieefp="-mno-ieee-fp"
+		fi
 		DEBUG="-g -Wall -Wextra -D_REENTRANT -D__NO_MATH_INLINES -fsigned-char"
-		CFLAGS="-O3 -Wall -Wextra -ffast-math -mno-ieee-fp -D_REENTRANT -fsigned-char"
+		CFLAGS="-O3 -Wall -Wextra -ffast-math -D_REENTRANT -fsigned-char ${ieefp}"
 #              	PROFILE="-Wall -Wextra -pg -g -O3 -ffast-math -D_REENTRANT -fsigned-char -fno-inline -static"
-		PROFILE="-Wall -Wextra -pg -g -O3 -ffast-math -mno-ieee-fp -D_REENTRANT -fsigned-char -fno-inline"
+		PROFILE="-Wall -Wextra -pg -g -O3 -ffast-math ${ieefp} -D_REENTRANT -fsigned-char -fno-inline"
 
 		# glibc < 2.1.3 has a serious FP bug in the math inline header
 		# that will cripple Vorbis.  Look to see if the magic FP stack
