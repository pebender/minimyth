diff -Naur libcdio-0.78.2-old/configure.ac libcdio-0.78.2-new/configure.ac
--- libcdio-0.78.2-old/configure.ac	2006-10-30 05:02:37.000000000 -0800
+++ libcdio-0.78.2-new/configure.ac	2007-10-12 05:08:26.000000000 -0700
@@ -84,7 +84,7 @@
 AM_CONDITIONAL([ENABLE_CXX_BINDINGS], [test "x$enable_cxx" != "xno"])
 
 AC_ARG_ENABLE(cpp_progs,
-	[  --enable-cpp-progs      make C++ example programs (default enabled)])
+	AC_HELP_STRING([--disable-cpp-progs], [make C++ example programs (default enabled)]))
 AM_CONDITIONAL(ENABLE_CPP, test x"$enable_cpp_progs" = "xyes")
 
 dnl We use C 
@@ -525,13 +525,16 @@
    AC_MSG_RESULT($has_tzname)
 fi
 
-if test x$enable_joliet = x; then
 AC_ARG_ENABLE(joliet,
-	[  --enable-joliet         include Joliet extension support (default enabled)],
-		enable_joliet=yes,
-		enable_joliet=no)
-fi
-if test "${enable_jolet}" != "no" ; then
+	AC_HELP_STRING([--disable-joliet], [include Joliet extension support (default enabled)]),
+	[
+		AS_CASE(["$enableval"],
+			[yes], [enable_joliet="yes"],
+			[no],  [enable_joliet="no"],
+			       [AC_MSG_ERROR([bad value '${enableval}' for --enable-joliet])])
+	],
+	enable_joliet="yes")
+if test "x$enable_jolet" != "xno" ; then
   AM_ICONV
   AM_LANGINFO_CODESET
   if test "$am_cv_func_iconv" = yes ; then 
@@ -545,14 +548,17 @@
 fi
 AC_SUBST(HAVE_JOLIET)
 
-if test x$enable_rock = x; then
-  enable_rock=yes
-  AC_ARG_ENABLE(rock,
-	[  --enable-rock           include Rock-Ridge extension support (default enabled)],
-	enable_rock=yes, enable_rock=no)
-fi
+AC_ARG_ENABLE(rock,
+	AC_HELP_STRING([--disable-rock], [include Rock-Ridge extension support (default enabled)]),
+	[
+		AS_CASE(["$enableval"],
+			[yes], [enable_rock="yes"],
+			[no],  [enable_rock="no"],
+			       [AC_MSG_ERROR([bad value '${enableval}' for --enable-rock])])
+	],
+	enable_rock="yes")
 
-if test "${enable_rock}" != "no" ; then
+if test "x$enable_rock" != "xno" ; then
    AC_DEFINE(HAVE_ROCK, [1], 
    [Define 1 if you want ISO-9660 Rock-Ridge extension support.])
    HAVE_ROCK=1
@@ -560,13 +566,16 @@
 AC_SUBST(HAVE_ROCK)
 AM_CONDITIONAL(ENABLE_ROCK, test x"$enable_rock" = "xyes")
 
-if test x$enable_cddb = x; then
-  enable_cddb=yes
-  AC_ARG_ENABLE(cddb,
-	[  --enable-cddb           include CDDB lookups in cd_info (default enabled)],	
-	enable_cddb=yes, enable_cddb=no)
-fi
-if test x$enable_cddb != "no" ; then
+AC_ARG_ENABLE(cddb,
+	AC_HELP_STRING([--disable-cddb], [include CDDB lookups in cd_info (default enabled)]),
+	[
+		AS_CASE(["$enableval"],
+			[yes], [enable_cddb="yes"],
+			[no],  [enable_cddb="no"],
+			       [AC_MSG_ERROR([bad value '${enableval}' for --enable-cddb])])
+	],
+	enable_cddb="yes")
+if test "x$enable_cddb" != "xno" ; then
    PKG_CHECK_MODULES(CDDB, libcddb >= 1.0.1, [
     HAVE_CDDB=yes 
     AC_DEFINE(HAVE_CDDB, [], [Define this if you have libcddb installed])
@@ -596,13 +605,16 @@
 AM_CONDITIONAL(BUILD_CDDA_PLAYER, test "x$enable_cdda_player" = "xyes")
 AC_SUBST(CDDA_PLAYER_LIBS)
 
-if test x$enable_vcd_info = x; then
 AC_ARG_ENABLE(vcd_info,
-	[  --disable-vcd-info      don't include Video CD Info from libvcd],
-		enable_vcd_info=no,
-		enable_vcd_info=yes)
-fi
-if test x$enable_vcd_info = xyes; then
+	AC_HELP_STRING([--disable-vcd-info], [don't include Video CD Info from libvcd (default enabled)]),
+	[
+		AS_CASE(["$enableval"],
+			[yes], [enable_vcd_info="yes"],
+			[no],  [enable_vcd_info="no"],
+			       [AC_MSG_ERROR([bad value '${enableval}' for --enable-vcd-info])])
+	],
+	enable_vcd_info="yes")
+if test "x$enable_vcd_info" = "xyes" ; then
   PKG_CHECK_MODULES(VCDINFO, libvcdinfo >= 0.7.21, 
   [AC_DEFINE([HAVE_VCDINFO],1, 
   [Define this if you have libvcdinfo installed])], 
