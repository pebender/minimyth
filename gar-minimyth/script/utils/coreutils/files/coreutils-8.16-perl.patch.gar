diff -Naur coreutils-8.16-old/build-aux/cvsu coreutils-8.16-new/build-aux/cvsu
--- coreutils-8.16-old/build-aux/cvsu	2012-01-27 02:34:45.000000000 -0800
+++ coreutils-8.16-new/build-aux/cvsu	2012-03-27 09:41:19.000000000 -0700
@@ -1,4 +1,4 @@
-#! /usr/bin/perl -w
+#! @GAR_build_DESTDIR@@GAR_build_bindir@/perl -w
 
 # cvsu - do a quick check to see what files are out of date.
 #
diff -Naur coreutils-8.16-old/man/help2man coreutils-8.16-new/man/help2man
--- coreutils-8.16-old/man/help2man	2012-03-24 11:22:13.000000000 -0700
+++ coreutils-8.16-new/man/help2man	2012-03-27 09:41:19.000000000 -0700
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!@GAR_build_DESTDIR@@GAR_build_bindir@/perl -w
 
 # Generate a short man page from --help and --version output.
 # Copyright (C) 1997-2012 Free Software Foundation, Inc.
diff -Naur coreutils-8.16-old/src/dcgen coreutils-8.16-new/src/dcgen
--- coreutils-8.16-old/src/dcgen	2012-03-24 11:22:13.000000000 -0700
+++ coreutils-8.16-new/src/dcgen	2012-03-27 09:41:19.000000000 -0700
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!@GAR_build_DESTDIR@@GAR_build_bindir@/perl -w
 # dcgen -- convert dircolors.hin to dircolors.h.
 
 # Copyright (C) 1996-2012 Free Software Foundation, Inc.
diff -Naur coreutils-8.16-old/src/extract-magic coreutils-8.16-new/src/extract-magic
--- coreutils-8.16-old/src/extract-magic	2012-03-24 11:22:13.000000000 -0700
+++ coreutils-8.16-new/src/extract-magic	2012-03-27 09:41:58.000000000 -0700
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!@GAR_build_DESTDIR@@GAR_build_bindir@/perl -w
 # Derive #define directives from specially formatted 'case ...:' statements.
 
 # Copyright (C) 2003-2012 Free Software Foundation, Inc.
diff -Naur coreutils-8.16-old/src/wheel-gen.pl coreutils-8.16-new/src/wheel-gen.pl
--- coreutils-8.16-old/src/wheel-gen.pl	2012-03-24 11:22:13.000000000 -0700
+++ coreutils-8.16-new/src/wheel-gen.pl	2012-03-27 09:41:19.000000000 -0700
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!@GAR_build_DESTDIR@@GAR_build_bindir@/perl -w
 # Generate the spokes of a wheel, for wheel factorization.
 
 # Copyright (C) 2001-2012 Free Software Foundation, Inc.
@@ -16,7 +16,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-eval 'exec /usr/bin/perl -S $0 ${1+"$@"}'
+eval 'exec @GAR_build_DESTDIR@@GAR_build_bindir@/perl -S $0 ${1+"$@"}'
   if 0;
 
 use strict;
diff -Naur coreutils-8.16-old/src/wheel-gen.pl.orig coreutils-8.16-new/src/wheel-gen.pl.orig
--- coreutils-8.16-old/src/wheel-gen.pl.orig	1969-12-31 16:00:00.000000000 -0800
+++ coreutils-8.16-new/src/wheel-gen.pl.orig	2012-03-27 09:41:10.000000000 -0700
@@ -0,0 +1,114 @@
+#!/usr/bin/perl -w
+# Generate the spokes of a wheel, for wheel factorization.
+
+# Copyright (C) 2001-2012 Free Software Foundation, Inc.
+
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+eval 'exec /usr/bin/perl -S $0 ${1+"$@"}'
+  if 0;
+
+use strict;
+(my $ME = $0) =~ s|.*/||;
+
+# A global destructor to close standard output with error checking.
+sub END
+{
+  defined fileno STDOUT
+    or return;
+  close STDOUT
+    and return;
+  warn "$ME: closing standard output: $!\n";
+  $? ||= 1;
+}
+
+sub is_prime ($)
+{
+  my ($n) = @_;
+  use integer;
+
+  $n == 2
+    and return 1;
+
+  my $d = 2;
+  my $w = 1;
+  while (1)
+    {
+      my $q = $n / $d;
+      $n == $q * $d
+        and return 0;
+      $d += $w;
+      $q < $d
+        and last;
+      $w = 2;
+    }
+  return 1;
+}
+
+{
+  @ARGV == 1
+    or die "$ME: missing argument\n";
+
+  my $wheel_size = $ARGV[0];
+
+  my @primes = (2);
+  my $product = $primes[0];
+  my $n_primes = 1;
+  for (my $i = 3; ; $i += 2)
+    {
+      if (is_prime $i)
+        {
+          push @primes, $i;
+          $product *= $i;
+          ++$n_primes == $wheel_size
+            and last;
+        }
+    }
+
+  my $ws_m1 = $wheel_size - 1;
+  print <<EOF;
+/* The first $ws_m1 elements correspond to the incremental offsets of the
+   first $wheel_size primes (@primes).  The $wheel_size(th) element is the
+   difference between that last prime and the next largest integer
+   that is not a multiple of those primes.  The remaining numbers
+   define the wheel.  For more information, see
+   http://www.utm.edu/research/primes/glossary/WheelFactorization.html.  */
+EOF
+
+  my @increments;
+  my $prev = 2;
+  for (my $i = 3; ; $i += 2)
+    {
+      my $rel_prime = 1;
+      foreach my $divisor (@primes)
+        {
+          $i != $divisor && $i % $divisor == 0
+            and $rel_prime = 0;
+        }
+
+      if ($rel_prime)
+        {
+          #warn $i, ' ', $i - $prev, "\n";
+          push @increments, $i - $prev;
+          $prev = $i;
+
+          $product + 1 < $i
+            and last;
+        }
+    }
+
+  print join (",\n", @increments), "\n";
+
+  exit 0;
+}
