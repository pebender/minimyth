diff -Naur lm_sensors-3.0.1-old/CHANGES lm_sensors-3.0.1-new/CHANGES
--- lm_sensors-3.0.1-old/CHANGES	2008-01-28 09:47:23.000000000 -0800
+++ lm_sensors-3.0.1-new/CHANGES	2008-04-08 14:51:34.000000000 -0700
@@ -3,6 +3,7 @@
 
 3.0.1 (2008-01-28)
   documentation: Update the application writing guidelines
+              Parse the configuration file in C locale
   libsensors: No longer depend on libsysfs (#2262)
               Don't guess the bus type from the device ID format (#2240)
               Add support for attributes in the hwmon class device (#2260)
diff -Naur lm_sensors-3.0.1-old/lib/init.c lm_sensors-3.0.1-new/lib/init.c
--- lm_sensors-3.0.1-old/lib/init.c	2007-10-25 02:59:05.000000000 -0700
+++ lm_sensors-3.0.1-new/lib/init.c	2008-04-08 14:51:34.000000000 -0700
@@ -18,8 +18,10 @@
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
+#include <locale.h>
 #include <stdlib.h>
 #include <stdio.h>
+#include <string.h>
 #include <errno.h>
 #include "sensors.h"
 #include "data.h"
@@ -33,6 +35,31 @@
 #define DEFAULT_CONFIG_FILE	ETCDIR "/sensors3.conf"
 #define ALT_CONFIG_FILE		ETCDIR "/sensors.conf"
 
+/* Wrapper around sensors_yyparse(), which clears the locale so that
+   the decimal numbers are always parsed properly. */
+static int sensors_parse(void)
+{
+	int res;
+	char *locale;
+
+	/* Remember the current locale and clear it */
+	locale = setlocale(LC_ALL, NULL);
+	if (locale) {
+		locale = strdup(locale);
+		setlocale(LC_ALL, "C");
+	}
+
+	res = sensors_yyparse();
+
+	/* Restore the old locale */
+	if (locale) {
+		setlocale(LC_ALL, locale);
+		free(locale);
+	}
+
+	return res;
+}
+
 int sensors_init(FILE *input)
 {
 	int res;
@@ -46,7 +73,7 @@
 	res = -SENSORS_ERR_PARSE;
 	if (input) {
 		if (sensors_scanner_init(input) ||
-		    sensors_yyparse())
+		    sensors_parse())
 			goto exit_cleanup;
 	} else {
 		/* No configuration provided, use default */
@@ -55,7 +82,7 @@
 			input = fopen(ALT_CONFIG_FILE, "r");
 		if (input) {
 			if (sensors_scanner_init(input) ||
-			    sensors_yyparse()) {
+			    sensors_parse()) {
 				fclose(input);
 				goto exit_cleanup;
 			}
