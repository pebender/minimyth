diff -Naur lm_sensors-3.0.3-old/CHANGES lm_sensors-3.0.3-new/CHANGES
--- lm_sensors-3.0.3-old/CHANGES	2009-01-12 18:12:06.000000000 -0800
+++ lm_sensors-3.0.3-new/CHANGES	2009-01-12 18:14:32.000000000 -0800
@@ -6,6 +6,7 @@
   sensors-detect: Fix detection of ADT7463 and LM96000
   fancontrol: Don't use named pipes when we don't need them (#2319)
   sensord: Accept negative temperatures in RRD database
+           Don't bail out on transient errors (#2330)
                   Fix detection of Intel 5000 series FB-DIMM AMB
   pwmconfig: Tell the user about gnuplot if it isn't installed
              Fix MINSTOP and MINSTART test functions
diff -Naur lm_sensors-3.0.3-old/prog/sensord/sensord.c lm_sensors-3.0.3-new/prog/sensord/sensord.c
--- lm_sensors-3.0.3-old/prog/sensord/sensord.c	2009-01-12 18:10:42.000000000 -0800
+++ lm_sensors-3.0.3-new/prog/sensord/sensord.c	2009-01-12 18:14:32.000000000 -0800
@@ -90,29 +90,33 @@
 
   sensorLog (LOG_INFO, "sensord started");
 
-  while (!done && (ret == 0)) {
+  while (!done) {
     if (reload) {
       ret = reloadLib (sensorsCfgFile);
+      if (ret)
+        sensorLog (LOG_NOTICE, "config reload error (%d)", ret);
       reload = 0;
     }
-    if ((ret == 0) && scanTime) { /* should I scan on the read cycle? */
-      ret = scanChips ();
-      if (scanValue <= 0)
-        scanValue += scanTime;
+    if (scanTime && (scanValue <= 0)) {
+      if ((ret = scanChips ()))
+        sensorLog (LOG_NOTICE, "sensor scan error (%d)", ret);
+      scanValue += scanTime;
     }
-    if ((ret == 0) && logTime && (logValue <= 0)) {
-      ret = readChips ();
+    if (logTime && (logValue <= 0)) {
+      if ((ret = readChips ()))
+        sensorLog (LOG_NOTICE, "sensor read error (%d)", ret);
       logValue += logTime;
     }
-    if ((ret == 0) && rrdTime && rrdFile && (rrdValue <= 0)) {
-      ret = rrdUpdate ();
+    if (rrdTime && rrdFile && (rrdValue <= 0)) {
+      if ((ret = rrdUpdate ()))
+        sensorLog (LOG_NOTICE, "rrd update error (%d)", ret);
       /*
        * The amount of time to wait is computed using the same method as
        * in RRD instead of simply adding the interval.
        */
       rrdValue = rrdTime - time(NULL) % rrdTime;
     }
-    if (!done && (ret == 0)) {
+    if (!done) {
       int a = logTime ? logValue : INT_MAX;
       int b = scanTime ? scanValue : INT_MAX;
       int c = (rrdTime && rrdFile) ? rrdValue : INT_MAX;
@@ -124,10 +128,7 @@
     }
   }
 
-  if (ret)
-    sensorLog (LOG_INFO, "sensord failed (%d)", ret);
-  else
-    sensorLog (LOG_INFO, "sensord stopped");
+  sensorLog (LOG_INFO, "sensord stopped");
 
   return ret;
 }
