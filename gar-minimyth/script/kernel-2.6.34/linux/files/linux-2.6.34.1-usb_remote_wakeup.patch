diff -Naur linux-2.6.34.1-old/drivers/usb/core/driver.c linux-2.6.34.1-new/drivers/usb/core/driver.c
--- linux-2.6.34.1-old/drivers/usb/core/driver.c	2010-07-05 11:24:10.000000000 -0700
+++ linux-2.6.34.1-new/drivers/usb/core/driver.c	2010-08-01 08:58:35.000000000 -0700
@@ -1266,9 +1266,6 @@
 
 static void choose_wakeup(struct usb_device *udev, pm_message_t msg)
 {
-	int			w, i;
-	struct usb_interface	*intf;
-
 	/* Remote wakeup is needed only when we actually go to sleep.
 	 * For things like FREEZE and QUIESCE, if the device is already
 	 * autosuspended then its current wakeup setting is okay.
@@ -1279,23 +1276,11 @@
 		return;
 	}
 
-	/* If remote wakeup is permitted, see whether any interface drivers
+	/* Allow remote wakeup if it is enabled, even if no interface drivers
 	 * actually want it.
 	 */
-	w = 0;
-	if (device_may_wakeup(&udev->dev) && udev->actconfig) {
-		for (i = 0; i < udev->actconfig->desc.bNumInterfaces; i++) {
-			intf = udev->actconfig->interface[i];
-			w |= intf->needs_remote_wakeup;
-		}
-	}
 
-	/* If the device is autosuspended with the wrong wakeup setting,
-	 * autoresume now so the setting can be changed.
-	 */
-	if (udev->state == USB_STATE_SUSPENDED && w != udev->do_remote_wakeup)
-		pm_runtime_resume(&udev->dev);
-	udev->do_remote_wakeup = w;
+	udev->do_remote_wakeup = device_may_wakeup(&udev->dev);
 }
 
 /* The device lock is held by the PM core */
