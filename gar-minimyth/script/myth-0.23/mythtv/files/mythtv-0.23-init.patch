diff -Naur mythtv-0.23-26732-old/programs/mythfrontend/globalsettings.cpp mythtv-0.23-26732-new/programs/mythfrontend/globalsettings.cpp
--- mythtv-0.23-26732-old/programs/mythfrontend/globalsettings.cpp	2010-10-10 07:52:06.000000000 -0700
+++ mythtv-0.23-26732-new/programs/mythfrontend/globalsettings.cpp	2010-10-10 07:52:07.000000000 -0700
@@ -44,7 +44,7 @@
     gc->setLabel(QObject::tr("Audio output device"));
 
 #ifdef USING_ALSA
-    gc->addSelection("ALSA:default",       "ALSA:default");
+    gc->addSelection("ALSA:default",       "ALSA:default", true);
     gc->addSelection("ALSA:spdif",         "ALSA:spdif");
     gc->addSelection("ALSA:surround51",    "ALSA:surround51");
     gc->addSelection("ALSA:analog",        "ALSA:analog");
@@ -185,7 +185,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("MythControlsVolume");
     gc->setLabel(QObject::tr("Use internal volume controls"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("MythTV can control the PCM and master "
                     "mixer volume.  If you prefer to control the volume externally "
                     "(like your amplifier) or use an external mixer "
@@ -209,7 +209,7 @@
     }
 #endif
 #ifdef USING_ALSA
-    gc->addSelection("ALSA:default", "ALSA:default");
+    gc->addSelection("ALSA:default", "ALSA:default", true);
 #endif
 #ifdef USING_MINGW
     gc->addSelection("DirectX:", "DirectX:");
@@ -1539,7 +1539,7 @@
     gc->setLabel(QObject::tr("Sort Episodes"));
     gc->addSelection(QObject::tr("Record date"), "Date");
     gc->addSelection(QObject::tr("Original Air date"), "OrigAirDate");
-    gc->addSelection(QObject::tr("Program ID"), "Id");
+    gc->addSelection(QObject::tr("Program ID"), "Id", true);
     gc->setHelpText(QObject::tr("Selects how to sort a shows episodes"));
     return gc;
 }
@@ -2046,7 +2046,7 @@
     HostComboBox *gc = new HostComboBox("PlaybackExitPrompt");
     gc->setLabel(QObject::tr("Action on playback exit"));
     gc->addSelection(QObject::tr("Just exit"), "0");
-    gc->addSelection(QObject::tr("Save position and exit"), "2");
+    gc->addSelection(QObject::tr("Save position and exit"), "2", true);
     gc->addSelection(QObject::tr("Always prompt (excluding Live TV)"), "1");
     gc->addSelection(QObject::tr("Always prompt (including Live TV)"), "4");
     gc->addSelection(QObject::tr("Prompt for Live TV only"), "8");
@@ -2061,7 +2061,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("EndOfRecordingExitPrompt");
     gc->setLabel(QObject::tr("Prompt at end of recording"));
-    gc->setValue(false);
+    gc->setValue(true);
     gc->setHelpText(QObject::tr("If set, a menu will be displayed allowing "
                     "you to delete the recording when it has finished "
                     "playing."));
@@ -2136,7 +2136,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("PlaybackPreview");
     gc->setLabel(QObject::tr("Display live preview of recordings"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("When enabled, a preview of the recording "
                     "will play in a small window on the \"Watch a "
                     "Recording\" menu."));
@@ -2210,7 +2210,7 @@
     HostComboBox *gc = new HostComboBox("AllowQuitShutdown");
     gc->setLabel(QObject::tr("System Exit key"));
     gc->addSelection(QObject::tr("ESC"), "4");
-    gc->addSelection(QObject::tr("No exit key"), "0");
+    gc->addSelection(QObject::tr("No exit key"), "0", true);
     gc->addSelection(QObject::tr("Control-ESC"), "1");
     gc->addSelection(QObject::tr("Meta-ESC"), "2");
     gc->addSelection(QObject::tr("Alt-ESC"), "3");
@@ -2265,7 +2265,7 @@
 {
     HostLineEdit *ge = new HostLineEdit("HaltCommand");
     ge->setLabel(QObject::tr("Halt command"));
-    ge->setValue("halt");
+    ge->setValue("poweroff");
     ge->setHelpText(QObject::tr("Optional. Script to run if you select "
                     "the shutdown option from the exit menu, if the option "
                     "is displayed. You must configure an exit key to "
@@ -2965,7 +2965,7 @@
     GlobalCheckBox *bc = new GlobalCheckBox("LastFreeCard");
     bc->setLabel(QObject::tr("Avoid conflicts between live TV and "
                  "scheduled shows"));
-    bc->setValue(false);
+    bc->setValue(true);
     bc->setHelpText(QObject::tr("If enabled, live TV will choose a tuner card "
                     "that is less likely to have scheduled recordings "
                     "rather than the best card available."));
