diff -Naur bdremote-ng-0.5-old/src/bdrcfg.c bdremote-ng-0.5-new/src/bdrcfg.c
--- bdremote-ng-0.5-old/src/bdrcfg.c	2009-10-25 04:35:32.000000000 -0700
+++ bdremote-ng-0.5-new/src/bdrcfg.c	2009-11-19 15:00:04.000000000 -0800
@@ -53,6 +53,8 @@
   FREEVAL(_config->remote_addr);
   _config->remote_addr = NULL;
   _config->detach      = 1;
+  FREEVAL(_config->release);
+  _config->release     = NULL;
   FREEVAL(_config->user);
   _config->user        = NULL;
   FREEVAL(_config->group);
@@ -79,6 +81,14 @@
   _config->interface_addr_set = 1;
 }
 
+void setRelease(configuration* _config, const char* _release)
+{
+  assert(_config != NULL);
+  assert(_release != NULL);
+
+  SETVAL(_config->release, _release);
+}
+
 void setUser(configuration* _config, const char* _user)
 {
   assert(_config != NULL);
@@ -100,6 +110,7 @@
   assert(_config != NULL);
 
   FREEVAL(_config->remote_addr);
+  FREEVAL(_config->release);
   FREEVAL(_config->user);
   FREEVAL(_config->group);
   FREEVAL(_config->log_filename);
@@ -119,6 +130,14 @@
   fprintf(printStream, " - repeat rate : disabled.\n");
   fprintf(printStream, " - repeat delay: disabled.\n");
 #endif
+  if (_config->release == NULL)
+    {
+      fprintf(printStream, " - release     : not set.\n");
+    }
+  else
+    {
+      fprintf(printStream, " - release     : %s.\n", _config->release);
+    }
   fprintf(printStream, " - debug       : %d.\n", _config->debug);
   if (_config->debug)
     {
diff -Naur bdremote-ng-0.5-old/src/bdrcfg.h bdremote-ng-0.5-new/src/bdrcfg.h
--- bdremote-ng-0.5-old/src/bdrcfg.h	2009-10-25 04:35:32.000000000 -0700
+++ bdremote-ng-0.5-new/src/bdrcfg.h	2009-11-19 14:54:29.000000000 -0800
@@ -48,6 +48,8 @@
   /** Repeat delay - the amount of messages to ignore before
       repeating.*/
   int repeat_delay;
+  /** Generate key release appended with the following string */
+  char* release;
   /** Enable/disable printing of debug messages. */
   int debug;
   /** Indicates if the BT address of the interface to use was set. */
@@ -77,6 +79,9 @@
 /** Set the BD address of the interface to use. */
 void setInterfaceAddress(configuration* _config, const char* _address);
 
+/** Set release key append string. */
+void setRelease(configuration* _config, const char* _release);
+
 /** Set user to change to after opening sockets. */
 void setUser(configuration* _config, const char* _user);
 
diff -Naur bdremote-ng-0.5-old/src/bdremoteng.c bdremote-ng-0.5-new/src/bdremoteng.c
--- bdremote-ng-0.5-old/src/bdremoteng.c	2009-10-25 04:35:32.000000000 -0700
+++ bdremote-ng-0.5-new/src/bdremoteng.c	2009-11-19 14:54:29.000000000 -0800
@@ -96,7 +96,7 @@
   memset(&config, 0, sizeof(config));
   setDefaults(&config);
 
-  while ((opt=getopt(argc,argv,"+p:t:a:i:r:e:u:g:f:ndh"))!=-1)
+  while ((opt=getopt(argc,argv,"+p:t:a:i:r:e:R:u:g:f:ndh"))!=-1)
     {
       switch(opt)
         {
@@ -130,6 +130,9 @@
         case 'g':
           setGroup(&config, optarg);
           break;
+        case 'R':
+          setRelease(&config, optarg);
+          break;
         case 'f':
           setLogFilename(&config, optarg);
           break;
@@ -286,6 +289,7 @@
          "\t                     For example: -a 00:19:C1:5A:F1:3F. \n");
   printf("\t-r <rate>            Key repeat rate. Generate <rate> repeats per second.\n"
          "\t-e <num>             Wait <num> ms before repeating a key.\n"
+         "\t-R <suffix>          Auto-generate release events with appended <suffix>.\n"
          "\t-u <username>        Change UID to the UID of this user.\n"
          "\t-g <group>           Change GID to the GID of this group.\n"
          "\t-f <filename>        Write log to <filename>.\n"
diff -Naur bdremote-ng-0.5-old/src/lirc_thr.c bdremote-ng-0.5-new/src/lirc_thr.c
--- bdremote-ng-0.5-old/src/lirc_thr.c	2009-10-25 04:35:32.000000000 -0700
+++ bdremote-ng-0.5-new/src/lirc_thr.c	2009-11-19 15:04:08.000000000 -0800
@@ -42,6 +42,7 @@
 #include <keydef.h>
 #include <stdio.h>
 #include <assert.h>
+#include <string.h>
 
 #include <unistd.h>
 
@@ -284,6 +285,8 @@
                    uint32_t _mask,
                    keyState* _ks)
 {
+  char release_name[100];
+
   if (_code == ps3remote_keyup)
     {
       /* Key up. */
@@ -292,7 +295,14 @@
                    );
       if (_ks->lastKey != ps3remote_undef)
         {
-          /* broadcastToLirc(_ld, ps3remote_keys[_ks->lastKey].name, 0, _code); */
+          if (_ld->config->release != NULL)
+          {
+              if ((strlen(ps3remote_keys[_ks->lastKey].name) + strlen(_ld->config->release)) < 100)
+              {
+                  sprintf(release_name, "%s%s", ps3remote_keys[_ks->lastKey].name, _ld->config->release);
+                  broadcastToLirc(_ld, release_name, 0, _code);
+              }
+          }
 
           _ks->keyDown      = 0;
           _ks->lastKey      = ps3remote_undef;
