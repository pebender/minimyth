################################################################################
# An example udev rules file for lircudevd.
#
# This rules file does not start lircudevd. Many applications only check for the
# the lircd socket at application lauch. Therefore, it is better to start
# lircudevd in an init script so that lircudevd creates the lircd socket before
# any applications that use LIRC launch.
################################################################################

# lircudevd only does something for "add" and "remove" actions.
ACTION!="add|remove", GOTO="end"

# lircudevd only does something "input" subsystem devices.
SUBSYSTEM!="input", GOTO="end"

# lircudevd can only handle event devices.
KERNEL!="event[0-9]*", GOTO="end"

# lircudevd ignores devices created by lircudevd.
ATTRS{name}=="lircudevd", GOTO="end"

#-------------------------------------------------------------------------------
# Ask lircudevd to handle input event devices created by lircd. For this to
# work, lircd must be configured to output Linux input events and must be
# configured to output key names that conform to the LIRC namespace derived from
# the Linux key/button event names. This rule assumes that lircd performs all
# key mappings, so the rule does not provide a value for "lircudevd_keymap". For
# more information on lircd, see <http://www.lirc.org/>.
#-------------------------------------------------------------------------------
ATTRS{name}=="lircd", \
  ENV{lircudevd_enable}="true" \
  ENV{lircudevd_keymap}="default.keymap"

#-------------------------------------------------------------------------------
# Ask lircudevd to handle input event devices created by bdremoteng. For this to
# work, bdremoteng must be configured to output Linux input events and must
# be configured to output key names that conform to LIRC namespace derived
# from the Linux key/button event names. For more information on bdremoteng,
# see <http://code.google.com/p/bdremote-ng/>.
#-------------------------------------------------------------------------------
ATTRS{name}=="bdremoteng", \
  ENV{lircudevd_enable}="true", \
  ENV{lircudevd_keymap}="bdremoteng.keymap"

#-------------------------------------------------------------------------------
# Ask lircudevd to handle input event devices created by wminput. This rule
# assumes that wminput performs all key mappings, so the rule does not provide a
# value for "lircudevd_keymap" For more information on wminput, see
# <http://abstrakraft.org/cwiid/>.
#-------------------------------------------------------------------------------
ATTRS{name}=="bdremoteng", \
  ENV{lircudevd_enable}="true"

#-------------------------------------------------------------------------------
# Ask lircudevd to handle USB HID devices that show up as event devices and are
# known to be remote controls. For simplicity, the keymap file names have the
# format <BUSTYPE>_<VENDOR>_<PRODUCT>.keymap.
#-------------------------------------------------------------------------------
SUBSYSTEMS=="usb", GOTO="begin-usb"
GOTO="end-usb"
LABEL="begin-usb"

ENV{ID_USB_INTERFACES}=="", IMPORT{program}="usb_id --export %p"

ENV{ID_VENDOR}=="05a4", ENV{ID_MODEL}=="9881", \
  ENV{lircudevd_enable}="true", \
  ENV{lircudevd_keymap}="03_$env{ID_VENDOR}_$env{ID_MODEL}.keymap"

ENV{ID_VENDOR}=="0766", ENV{ID_MODEL}=="0204", \
  ENV{lircudevd_enable}="true", \
  ENV{lircudevd_keymap}="03_$env{ID_VENDOR}_$env{ID_MODEL}.keymap"

ENV{ID_VENDOR}=="147a", ENV{ID_MODEL}=="e02d", \
  ENV{lircudevd_enable}="true", \
  ENV{lircudevd_keymap}="03_$env{ID_VENDOR}_$env{ID_MODEL}.keymap"

# Enable wake-on-usb for the USB remotes.
ENV{lircudevd_enable}=="true", RUN+="wakeup_enable"

LABEL="end-usb"

LABEL="end"
