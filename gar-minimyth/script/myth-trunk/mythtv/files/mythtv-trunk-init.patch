diff -Naur mythtv-trunk-25233-old/programs/mythfrontend/globalsettings.cpp mythtv-trunk-25233-new/programs/mythfrontend/globalsettings.cpp
--- mythtv-trunk-25233-old/programs/mythfrontend/globalsettings.cpp	2010-06-30 19:22:28.000000000 -0700
+++ mythtv-trunk-25233-new/programs/mythfrontend/globalsettings.cpp	2010-06-30 19:22:28.000000000 -0700
@@ -504,7 +504,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("MythControlsVolume");
     gc->setLabel(QObject::tr("Use internal volume controls"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("MythTV can control the PCM and master "
                     "mixer volume. If you prefer to control the volume "
                     "externally (for example, using your amplifier) or to "
@@ -528,7 +528,7 @@
     }
 #endif
 #ifdef USING_ALSA
-    gc->addSelection("ALSA:default", "ALSA:default");
+    gc->addSelection("ALSA:default", "ALSA:default", true);
 #endif
 #ifdef USING_MINGW
     gc->addSelection("DirectX:", "DirectX:");
@@ -1825,7 +1825,7 @@
     gc->setLabel(QObject::tr("Sort episodes"));
     gc->addSelection(QObject::tr("Record date"), "Date");
     gc->addSelection(QObject::tr("Original air date"), "OrigAirDate");
-    gc->addSelection(QObject::tr("Program ID"), "Id");
+    gc->addSelection(QObject::tr("Program ID"), "Id", true);
     gc->setHelpText(QObject::tr("Selects how to sort a shows episodes"));
     return gc;
 }
@@ -2133,7 +2133,7 @@
     HostComboBox *gc = new HostComboBox("PlaybackExitPrompt");
     gc->setLabel(QObject::tr("Action on playback exit"));
     gc->addSelection(QObject::tr("Just exit"), "0");
-    gc->addSelection(QObject::tr("Save position and exit"), "2");
+    gc->addSelection(QObject::tr("Save position and exit"), "2", true);
     gc->addSelection(QObject::tr("Always prompt (excluding Live TV)"), "1");
     gc->addSelection(QObject::tr("Always prompt (including Live TV)"), "4");
     gc->addSelection(QObject::tr("Prompt for Live TV only"), "8");
@@ -2148,7 +2148,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("EndOfRecordingExitPrompt");
     gc->setLabel(QObject::tr("Prompt at end of recording"));
-    gc->setValue(false);
+    gc->setValue(true);
     gc->setHelpText(QObject::tr("If set, a menu will be displayed allowing "
                     "you to delete the recording when it has finished "
                     "playing."));
@@ -2211,7 +2211,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("PlaybackPreview");
     gc->setLabel(QObject::tr("Display live preview of recordings"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("When enabled, a preview of the recording "
                     "will play in a small window on the \"Watch a "
                     "Recording\" menu."));
@@ -2324,7 +2324,7 @@
 {
     HostLineEdit *ge = new HostLineEdit("HaltCommand");
     ge->setLabel(QObject::tr("Halt command"));
-    ge->setValue("halt");
+    ge->setValue("poweroff");
     ge->setHelpText(QObject::tr("Optional. Script to run if you select "
                     "the shutdown option from the exit menu, if the option "
                     "is displayed. You must configure an exit key to "
@@ -3017,7 +3017,7 @@
     GlobalCheckBox *bc = new GlobalCheckBox("LastFreeCard");
     bc->setLabel(QObject::tr("Avoid conflicts between Live TV and "
                  "scheduled shows"));
-    bc->setValue(false);
+    bc->setValue(true);
     bc->setHelpText(QObject::tr("If enabled, Live TV will choose a tuner card "
                     "that is less likely to have scheduled recordings "
                     "rather than the best card available."));
