#!/usr/bin/perl
################################################################################
# rc
################################################################################

use strict;
use warnings;
use feature "switch";

require Cwd;
require File::Basename;
require MiniMyth;

my @script_list_start =
(
    'ld',
    'loopback',
    'dhcp',
    'modules_automatic',
    'conf',
    'modules_manual',
    'log'
);
my @script_list_kill_halt =
(
    'shutdown',
    'halt'
);
my @script_list_kill_reboot =
(
    'shutdown',
    'reboot'
);

sub rc_script_list_run
{
    my $minimyth    = shift;
    my $phase       = shift;
    my $action      = shift;
    my $script_list = shift;

    my $dir = Cwd::abs_path(File::Basename::dirname(__FILE__));

    my $count;
    my $script;

    $count = $#{$script_list} + 1;
    given ($phase)
    {
        when (/^0$/) { $minimyth->splash_progress_set(0     , 2*$count); }
        when (/^1$/) { $minimyth->splash_progress_set($count, 2*$count); }
        when (/^2$/) { $minimyth->splash_progress_set(0     ,   $count); }
    }
    foreach (@{$script_list})
    {
        unshift(@INC, $dir);
        my $package = "init::$_";
        eval "require $package";
        # An error occured, so start a virtual console login and a telnet login.
        # This is a serious security hole, but users have difficulty debugging
        # when they cannot connect.
        my $result;
        given ($action)
        {
            when (/^start$/) { $result = $package->start($minimyth); }
            when (/^stop$/)  { $result = $package->stop($minimyth);  }
            default          { $result = 0; }
        }
        if (! $result )
        {
            if (! qx(/bin/pidof telnetd))
            {
                system('/usr/sbin/telnetd');
            }
            if (! qx(/bin/pidof agetty))
            {
                system('/sbin/agetty 9600 tty1 &');
            }
            return 0;
        }
        $minimyth->splash_progress_update();
    }
    return 1;
}

#if /usr/bin/test `/usr/bin/id -u` -eq 0 ; then
#    if /usr/bin/test -z "${USER}" ; then
#        USER=`/bin/cat /etc/passwd | /bin/grep -e '^[^:]*:[^:]*:0:' | /usr/bin/cut -d ':' -f 1`
#        export USER
#    fi
#    if /usr/bin/test -z "${HOME}" || /usr/bin/test "${HOME}" = "/" ; then
#        HOME=`/bin/cat /etc/passwd | /bin/grep -e '^[^:]*:[^:]*:0:' | /usr/bin/cut -d ':' -f 6`
#        export HOME
#    fi
#fi

sub rc_run
{
    my $runlevel = shift;

    my $minimyth = new MiniMyth;

    $minimyth->var_load();

    my $dir = Cwd::abs_path(File::Basename::dirname(__FILE__));

    given ($runlevel)
    {
        when (/^1|2|3|4|5$/)
        {
            $minimyth->splash_init('bootup');
    
            rc_script_list_run($minimyth, 0, 'start', \@script_list_start) || return 0;
    
            my @script_list = ();
            if (opendir(DIR, '/etc/rc.d/rc.d'))
            {
                @script_list = grep((/^S[0-9]+([^0-9].*)$/) && (-f "$dir/init/$1.pm"), (readdir(DIR)));
                close(DIR);
                @script_list = sort(@script_list);
                s/^S[0-9]+// foreach (@script_list);
            }
            rc_script_list_run($minimyth, 1, 'start', \@script_list) || return 0;
                
            $minimyth->splash_halt();
        }
        when (/^0$/)
        {
            $minimyth->splash_init('shutdown');
    
            my @script_list = ();
            if (opendir(DIR, '/etc/rc.d/rc.d'))
            {
                @script_list = grep((/^K[0-9]+([^0-9].*)$/) && (-f "$dir/init/$1.pm"), (readdir(DIR)));
                close(DIR);
                @script_list = sort(@script_list);
                s/^K[0-9]+// foreach (@script_list);
            }
            push(@script_list, @script_list_kill_halt);
            rc_script_list_run($minimyth, 2, 'stop', \@script_list) || return 0;
    
            $minimyth->splash_halt();
        }
        when (/^6$/)
        {
            $minimyth->splash_init('reboot');
    
            my @script_list = ();
            if (opendir(DIR, '/etc/rc.d/rc.d'))
            {
                @script_list = grep((/^K[0-9]+([^0-9].*)$/) && (-f "$dir/init/$1.pm"), (readdir(DIR)));
                close(DIR);
                @script_list = sort(@script_list);
                s/^K[0-9]+// foreach (@script_list);
            }
            push(@script_list, @script_list_kill_reboot);
            rc_script_list_run($minimyth, 2, 'stop', \@script_list) || return 0;
    
            $minimyth->splash_halt();
        }
    }

    return 1;
}

my $runlevel = shift;

my $result = rc_run($runlevel);

if ($result == 0) { exit 1; }
else              { exit 0; }

1;
