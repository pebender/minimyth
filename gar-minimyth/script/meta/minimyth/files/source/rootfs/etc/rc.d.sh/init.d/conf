#!/bin/sh
################################################################################
# conf
#
# This script retrieves and processes the MiniMyth configure file.
################################################################################
. /etc/rc.d.sh/functions

conf_variable_write() {
    /bin/echo -n ${2} >> ${1}
    /bin/echo -n "="  >> ${1}
    /bin/echo -n "'"  >> ${1}
    /bin/echo -n ${3} >> ${1}
    /bin/echo    "'"  >> ${1}

    return 0
}

start() {

    local file
    local file_list
    local variable

    mm_message_output info "warning: sh init scripts are deprecated."
    mm_message_output info "use perl init scripts rather than sh init scripts."

    # Unset variables set by the processed MiniMyth configuration file.
    # This is a hack for testing that should never get invoked during normal boot.
    if /usr/bin/test -e /etc/conf.d/dhcp.override ; then
        /bin/cat /etc/conf.d/dhcp.override | /bin/grep -e '^MM_[^=]*=' | /bin/sed -e 's%=.*$%%' | \
        while read variable ; do
            set ${variable}=''
        done
        /bin/rm -f '/etc/conf.d/dhcp.override'
    fi
    if /usr/bin/test -e /etc/conf.d/minimyth ; then
        /bin/cat /etc/conf.d/minimyth | /bin/grep -e '^MM_[^=]*=' | /bin/sed -e 's%=.*$%%' | \
        while read variable ; do
            set ${variable}=''
        done
        /bin/rm -f '/etc/conf.d/minimyth'
    fi

    # Read core and dhcp configuration files.
    /usr/bin/test -e /etc/conf.d/core && . /etc/conf.d/core
    /usr/bin/test -e /etc/conf.d/dhcp && . /etc/conf.d/dhcp

    mm_message_output info "downloading configuration ..."

    # Determine current boot directory location.
    MM_MINIMYTH_BOOT_URL=${MM_MINIMYTH_BOOT_URL:-${MM_TFTP_BOOT_URL}}
    MM_MINIMYTH_BOOT_URL=${MM_MINIMYTH_BOOT_URL:-'file:/minimyth/'}

    # Using local configuration files, so there should be a '/minimyth' directory.
    if /usr/bin/test "${MM_MINIMYTH_BOOT_URL}" = "file:/minimyth/" ; then
        while /usr/bin/test ! -e /minimyth ; do
            mm_message_output info "waiting for directory /minimyth to mount ..."
            sleep 1
         done
    fi

    # Get MiniMyth configuration file.
    mm_confro_get /minimyth.conf /etc/minimyth.d/minimyth.conf

    # Make sure that there is a MiniMyth configuration file.
    if /usr/bin/test ! -e /etc/minimyth.d/minimyth.conf ; then
        mm_message_output err "error: 'minimyth.conf' not found."
        exit 1
    fi
    if /usr/bin/test ! -r /etc/minimyth.d/minimyth.conf ; then
        mm_message_output err "error: 'minimyth.conf' not readable."
        exit 1
    fi

    # Read MiniMyth configuration file.
    . /etc/minimyth.d/minimyth.conf

    mm_message_output info "processing configuration ..."

    mm_message_output info "checking for obsolete variables ..."
    /bin/cat /etc/rc.d.sh/init.d/conf.d/obsolete | while read variable ; do
        if set | /bin/grep -q "^${variable}=" ; then
             mm_message_output err "error: 'minimyth.conf' is out of date. '${variable}' is obsolete."
        fi
    done

    # Process the DHCP override configuration variables
    # so that they are available to the DHCP client.
    /bin/rm -f '/etc/conf.d/dhcp.override~'
    /bin/touch '/etc/conf.d/dhcp.override~'
    /bin/chmod 644 '/etc/conf.d/dhcp.override~'
    . /etc/rc.d.sh/init.d/conf.d/MM_DHCP
    conf_clean_MM_DHCP
    conf_check_MM_DHCP
    conf_default_MM_DHCP
    conf_write_MM_DHCP '/etc/conf.d/dhcp.override~'
    /bin/rm -f '/etc/conf.d/dhcp.override~~'
    /bin/touch '/etc/conf.d/dhcp.override~~'
    /bin/chmod 644 '/etc/conf.d/dhcp.override~~'
    /usr/bin/sort '/etc/conf.d/dhcp.override~' > '/etc/conf.d/dhcp.override~~'
    /bin/mv -f '/etc/conf.d/dhcp.override~~' '/etc/conf.d/dhcp.override~'
    /bin/mv -f '/etc/conf.d/dhcp.override~' '/etc/conf.d/dhcp.override'

    # Fetch and run 'minimyth.script'.
    if /usr/bin/test "${MM_MINIMYTH_FETCH_MINIMYTH_SCRIPT}" = "yes" ; then
        /bin/rm -f /etc/minimyth.d/minimyth.script
        mm_confro_get /minimyth.script /etc/minimyth.d/minimyth.script
        if /usr/bin/test ! -e /etc/minimyth.d/minimyth.script ; then
            mm_message_output err "error: failed to fetch 'minimyth.script' file."
        fi
    fi
    if /usr/bin/test -f /etc/minimyth.d/minimyth.script ; then
        mm_message_output info "running minimyth.script ..."
        # Make unprocessed MiniMyth variables visable to 'minimyth.script'.
        /bin/rm -f '/etc/conf.d/minimyth.raw'
        /bin/touch '/etc/conf.d/minimyth.raw'
        /bin/chmod 644 '/etc/conf.d/minimyth.raw'
        set | grep '^MM_' >> '/etc/conf.d/minimyth.raw'
        # Run 'minimyth.script'
        /bin/sh /etc/minimyth.d/minimyth.script
        # Delete file with unprocessed MiniMyth variables.
        /bin/rm -f '/etc/conf.d/minimyth.raw'
    fi

    # Enable configuration auto-detection udev rules.
    file_list=`/bin/ls -1 /lib/udev/rules.d/05-minimyth-*.rules.disabled | /bin/sed -e 's%\.disabled%%'`
    for file in ${file_list} ; do
        /bin/mv -f ${file}.disabled ${file}
    done

    # Trigger udev with the additional udev rules that handle configuration auto-detection.
    /sbin/udevadm trigger
    /sbin/udevadm settle --timeout=60

    file_list=`cd /etc/rc.d.sh/init.d/conf.d ; /bin/ls -1 MM_*`

    # Read MiniMyth configuration processing files
    for file in ${file_list} ; do
        . /etc/rc.d.sh/init.d/conf.d/${file}
    done

    # Start the DHCP client now that we have created the DHCP override variables file.
    /etc/rc.d.sh/init.d/dhcp start

    # Clean configuration processing file state.
    for file in ${file_list} ; do
        conf_clean_${file}
    done

    # Check MiniMyth configuration variables.
    mm_message_output info "processing configuration: checking variables ..."
    for file in ${file_list} ; do
        /usr/bin/logger -s -t minimyth -p "local0.info" "processing configuration: checking variables '${file}'"
        conf_check_${file}
    done

    # Set default MiniMyth configuration variable values.
    mm_message_output info "processing configuration: defaulting variables ..."
    for file in ${file_list} ; do
        /usr/bin/logger -s -t minimyth -p "local0.info" "processing configuration: defaulting variables '${file}'"
        conf_default_${file}
    done

    # Write processed MiniMyth configuration file.
    mm_message_output info "processing configuration: writing variables ..."
    /bin/rm -f '/etc/conf.d/minimyth~'
    /bin/touch '/etc/conf.d/minimyth~'
    /bin/chmod 644 '/etc/conf.d/minimyth~'
    for file in ${file_list} ; do
        /usr/bin/logger -s -t minimyth -p "local0.info" "processing configuration: writing variables '${file}'"
        conf_write_${file} '/etc/conf.d/minimyth~'
    done
    /bin/rm -f '/etc/conf.d/minimyth~~'
    /bin/touch '/etc/conf.d/minimyth~~'
    /bin/chmod 644 '/etc/conf.d/minimyth~~'
    /usr/bin/sort '/etc/conf.d/minimyth~' > '/etc/conf.d/minimyth~~'
    /bin/mv -f '/etc/conf.d/minimyth~~' '/etc/conf.d/minimyth~' 
    /bin/mv -f '/etc/conf.d/minimyth~' '/etc/conf.d/minimyth' 

    # Fetch user files.
    mm_message_output info "processing configuration: fetching additional files ..."
    for file in ${file_list} ; do
        /usr/bin/logger -s -t minimyth -p "local0.info" "processing configuration: fetching additional files '${file}'"
        conf_fetch_${file}
    done

    # Clean configuration processing file state.
    for file in ${file_list} ; do
        conf_clean_${file}
    done

    # If there are any errors, then do not continue
    if /usr/bin/test -e /var/log/minimyth.err.log &&
       /usr/bin/test `/bin/cat /var/log/minimyth.err.log | /usr/bin/wc -l` -gt 0 ; then
        mm_message_output err "error: check '/var/log/minimyth.err.log' for further details."
        exit 1
    fi

    return 0
}

stop() {
    return 0
}

case $1 in
    start) start ;;
    stop)  stop  ;;
esac

exit 0
