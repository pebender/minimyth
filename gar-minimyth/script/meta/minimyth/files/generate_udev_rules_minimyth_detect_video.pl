#!/usr/bin/perl

my %entries = undef;

my $outfile_udev_rules = qq(05-minimyth-detect-video.rules.disabled);
die qq(error: output file $outfile_udev_rules already exists.\n) if (-e $outfile_udev_rules);

my $tmpfile_udev_rules = qq(/tmp/$$.05-minimyth-detect-video.rules.disabled);
die qq(error: temporary file $tmpfile_udev_rules already exists.\n) if (-e $tmpfile_udev_rules);

my $tmpfile_pciids_txt = qq(/tmp/$$.pciids.txt);
die qq(error: temporary file $tmpfile_pciids_txt already exists.\n) if (-e $tmpfile_pciids_txt);

system(qq(wget 'http://cgit.freedesktop.org/mesa/drm/plain/shared-core/drm_pciids.txt' -O $tmpfile_pciids_txt));
die qq(error: failed to download DRM PCI ids file.\n) if (! -e $tmpfile_pciids_txt);
if (open(FILE, '<', qq($tmpfile_pciids_txt)))
{
    my $driver = undef;
    while (<FILE>)
    {
        if    (/^\[i810\]$/)   { $driver = q(intel_810);  }
        elsif (/^\[i915\]$/)   { $driver = q(intel_915);  }
        elsif (/^\[viadrv\]$/) { $driver = q(openchrome); }
        elsif (/^\[radeon\]$/) { $driver = q(radeon);     }
        elsif (/^\[savage\]$/) { $driver = q(savage);     }
        elsif (/^\[sis\]$/)    { $driver = q(sis);        }
        elsif (/^\[.*\]$/)     { $driver = undef;         }
        if (defined($driver))
        {
            if (/^0x(....) 0x(....) /)
            {
                my $vendor  = lc($1);
                my $product = lc($2);
                $entries{qq($vendor.$product)} = $driver;
            }
        }
    }
    close(FILE);
}
unlink(qq($tmpfile_pciids_txt));

system(qq(wget 'http://cgit.freedesktop.org/xorg/driver/xf86-video-radeonhd/plain/src/rhd_id.c' -O $tmpfile_pciids_txt));
die qq(error: failed to download DRM PCI ids file.\n) if (! -e $tmpfile_pciids_txt);
if (open(FILE, '<', qq($tmpfile_pciids_txt)))
{
    my $driver = undef;
    while (<FILE>)
    {
        if (/^ *const *PCI_ID_LIST *= *{/)
        {
            $driver = 'radeonhd';
            last;
        }
    }
    while (<FILE>)
    {
        if (defined($driver))
        {
            if (/^ *RHD_DEVICE_MATCH\( *0x(....) *,/)
            {
                my $vendor  = lc(q(1002));
                my $product = lc($1);
                $entries{qq($vendor.$product)} = $driver;
            }
        }
        if (/^ *} *;/)
        {
            $driver = undef;
            last;
        }
    }
    close(FILE);
}
unlink(qq($tmpfile_pciids_txt));

if (open(FILE, '>', qq($outfile_udev_rules)))
{
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(# Detect video devices.\n);
    print FILE qq(#\n);
    print FILE qq(# An X device is assumed to\n);
    print FILE qq(#     be in the pci subsystem, and\n);
    print FILE qq(#     in the 0x0300 PCI class.\n);
    print FILE qq(#\n);
    print FILE qq(# mm_detect_id has the following format:\n);
    print FILE qq(#     pci:<class>:<class_prog>:<vendor>:<device>:<subsystem_vendor>:<subsystem_device>\n);
    print FILE qq(# mm_detect_state_video has the following format:\n);
    print FILE qq(#     <driver>\n);
    print FILE qq(# where\n);
    print FILE qq(#     <driver>: The X video driver. Actually, this is the 'Identifier' \(sans the\n);
    print FILE qq(#               'Device_' prefix\) of the 'Device' section in the\n);
    print FILE qq(#               '/etc/xorg.conf' file.\n);
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(ACTION!="add|change|remove", GOTO="end"\n);
    print FILE qq(SUBSYSTEM=="pci", ATTR{class}=="0x0300??", GOTO="begin"\n);
    print FILE qq(GOTO="end"\n);
    print FILE qq(LABEL="begin"\n);
    print FILE qq(\n);
    print FILE qq(# Import mm_detect_id.\n);
    print FILE qq(IMPORT{program}="/lib/udev/mm_detect_id"\n);
    print FILE qq(\n);
    print FILE qq(# Initialize state\n);
    print FILE qq(ENV{mm_detect_state_video}=""\n);
    print FILE qq(\n);
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(# autogenerated from:\n);
    print FILE qq(# http://cgit.freedesktop.org/mesa/drm/plain/shared-core/drm_pciids.txt\n);
    print FILE qq(# http://cgit.freedesktop.org/xorg/driver/xf86-video-radeonhd/plain/src/rhd_id.c\n);
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(\n);
    my $vendor_previous = undef;
    foreach my $key (sort(keys(%entries)))
    {
        if ($key)
        {
            my ($vendor, $product) = split(/\./, $key);
            my $driver = $entries{$key};
            if ((! defined($vendor_previous)) || ($vendor != $vendor_previous))
            {
                if (defined($vendor_previous))
                {
                    print FILE qq(  LABEL="end-$vendor_previous"\n);
                    print FILE qq(\n);
                }
                print FILE qq(  ENV{mm_detect_id}!="pci:0300:00:$vendor:????:????:????", GOTO="end-$vendor"\n);
                $vendor_previous = $vendor;
            }
            my $mm_detect_id = qq(pci:0300:00:$vendor:$product:????);
            print FILE qq(  ENV{mm_detect_id}=="pci:0300:00:$vendor:$product:????:????", ENV{mm_detect_state_video}="$driver"\n);
        }
    }
    if (defined($vendor_previous))
    {
        print FILE qq(  LABEL="end-$vendor_previous"\n);
        print FILE qq(\n);
    }
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(# NVIDIA\n);
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(\n);
    print FILE qq(  ENV{mm_detect_id}!="pci:0300:00:10de:????:????:????", GOTO="end-10de"\n);
    print FILE qq(  ENV{mm_detect_id}=="pci:0300:00:10de:????:????:????", ENV{mm_detect_state_video}="nvidia"\n);
    print FILE qq(  LABEL="end-10de"\n);
    print FILE qq(\n);
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(# VMware\n);
    print FILE qq(#-------------------------------------------------------------------------------\n);
    print FILE qq(\n);
    print FILE qq(  ENV{mm_detect_id}!="pci:0300:00:15ad:????:????:????", GOTO="end-15ad"\n);
    print FILE qq(  ENV{mm_detect_id}=="pci:0300:00:15ad:0405:????:????", ENV{mm_detect_state_video}="vmware"\n);
    print FILE qq(  LABEL="end-15ad"\n);
    print FILE qq(\n);
    print FILE qq(# The state has been set, so save it.\n);
    print FILE qq(ENV{mm_detect_state_video}=="?*", RUN+="/lib/udev/mm_detect video %k \$env{mm_detect_state_video}"\n);
    print FILE qq(\n);
    print FILE qq(LABEL="end"\n);
    close(FILE);
  }

1;
