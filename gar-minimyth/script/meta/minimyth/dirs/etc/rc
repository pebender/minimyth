#!/bin/sh

. /etc/minimyth.d/env.script

box() {
    return 0;
}

. /etc/bootsplash/themes/MythTV/config/bootsplash-800x600.cfg

rc_progress() {
    if [ -e /proc/splash ] ; then 
	if [ -n "`cat /proc/splash | grep ': on' | grep 'silent'`" ] ; then
            echo "show $(( 65535 * $progress / $progress_max ))" > /proc/splash
        fi
        progress=$((progress + 1))
    fi
}

rc_command_run() {
    COMMAND="$1"
    MESSAGE="$2"
    rc_progress
    mm_message_display "${MESSAGE}"
    mm_command_run     "${COMMAND}"
   if [ $? != 0 ] ; then
       exit $?
   fi
}

progress=0
progress_max=17
mm_command_run 'sh /etc/minimyth.d/fs.script'
mm_command_run 'sh /etc/minimyth.d/bootsplash.script'
rc_command_run 'sh /etc/minimyth.d/ld.script'         'configuring shared libraries ...'
rc_command_run 'sh /etc/minimyth.d/network.script'    'starting network ...'
rc_command_run 'sh /etc/minimyth.d/core.script'       'fetching user configuration ...'
rc_command_run 'sh /etc/minimyth.d/minimyth.script'   'running user script ...'
rc_command_run 'sh /etc/minimyth.d/log.script'        'starting system logging ...'
rc_command_run 'sh /etc/minimyth.d/modules.script'    'loading kernel modules ...'
rc_command_run 'sh /etc/minimyth.d/extras.script'     'installing extras ...'
rc_command_run 'sh /etc/minimyth.d/sensors.script'    'starting sensors ...'
rc_command_run 'sh /etc/minimyth.d/acpi.script'       'starting ACPI ...'
rc_command_run 'sh /etc/minimyth.d/time.script'       'starting NTP client ...'
rc_command_run 'sh /etc/minimyth.d/telnet.script'     'starting telnet server ...'
rc_command_run 'sh /etc/minimyth.d/web.script'        'starting web server ...'
rc_command_run 'sh /etc/minimyth.d/mount.script'      'mounting media shares ...'
rc_command_run 'sh /etc/minimyth.d/sound.script'      'configuring sound ...'
rc_command_run 'sh /etc/minimyth.d/lirc.script'       'configuring remote control ...'
rc_command_run 'sh /etc/minimyth.d/mythtv.script'     'configuring mythtv ...'
rc_command_run 'sh /etc/minimyth.d/x.script'          'configuring X ...'
rc_command_run ''                                     ''

# Start X (if not debugging)
if [ -z "`mm_var_get MM_DEBUG`" ] && [ "`mm_var_get MM_X_ENABLED`" = "yes" ] ; then
    xinit &
fi
