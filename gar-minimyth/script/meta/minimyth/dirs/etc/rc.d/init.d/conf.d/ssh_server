################################################################################
# SSH server configuration variables and files.
################################################################################
conf_clean_ssh_server() {
    /bin/rm -rf /tmp/init.conf.ssh_server

    return 0
}

conf_check_ssh_server() {
    # Check for obsolete variables.
    if /usr/bin/test ! -z "${MM_SSH_SERVER_FETCH_ID_RSA_SERVER}"    ; then
        mm_message_output err "error: 'minimyth.conf' is out of date. 'MM_SSH_SERVER_FETCH_ID_RSA_SERVER' is obsolete."
    fi
    if /usr/bin/test ! -z "${MM_SSH_SERVER_FETCH_SSH_HOST_RSA_KEY}" ; then
        mm_message_output err "error: 'minimyth.conf' is out of date. 'MM_SSH_SERVER_FETCH_SSH_HOST_RSA_KEY' is obsolete."
    fi
    if /usr/bin/test ! -z "${MM_SSH_SERVER_FETCH_AUTHORIZED_KEYS}"  ; then
        mm_message_output err "error: 'minimyth.conf' is out of date. 'MM_SSH_SERVER_FETCH_AUTHORIZED_KEYS' is obsolete."
    fi

    if /usr/bin/test ! -z "${MM_SSH_SERVER_ENABLED}"         && \
       /usr/bin/test !    "${MM_SSH_SERVER_ENABLED}" = "yes" && \
       /usr/bin/test !    "${MM_SSH_SERVER_ENABLED}" = "no"  ; then
        mm_message_output err "error: MM_SSH_SERVER_ENABLED='${MM_SSH_SERVER_ENABLED}' is not valid."
    fi

    return 0
}

conf_default_ssh_server() {

    # The routine relies on MM_SECURITY_ENABLED.
    conf_default_security

    if /usr/bin/test -z "${MM_SSH_SERVER_ENABLED}" ; then
        if /usr/bin/test ${MM_SECURITY_ENABLED} = "yes" ; then
            MM_SSH_SERVER_ENABLED='yes'
        else
            MM_SSH_SERVER_ENABLED='no'
        fi
    fi

    return 0
}

conf_write_ssh_server() {
    local conf_file=$1

    conf_variable_write "${conf_file}" MM_SSH_SERVER_ENABLED "${MM_SSH_SERVER_ENABLED}"

    return 0
}

conf_fetch_ssh_server() {
    if /usr/bin/test "${MM_SSH_SERVER_ENABLED}" = "yes" ; then
        /bin/rm -f /etc/ssh/ssh_host_rsa_key
        mm_confro_get /ssh_host_rsa_key /etc/ssh/ssh_host_rsa_key
        if /usr/bin/test ! -e /etc/ssh/ssh_host_rsa_key ; then
            mm_message_output err "error: failed to fetch 'ssh_host_rsa_key' file."
        else
            /bin/chmod 0600 /etc/ssh/ssh_host_rsa_key
        fi
        /bin/rm -f /etc/ssh/authorized_keys
        mm_confro_get /authorized_keys /etc/ssh/authorized_keys
        if /usr/bin/test ! -e /etc/ssh/authorized_keys ; then
            mm_message_output err "error: failed to fetch 'authorized_keys' file."
        else
            /bin/chmod 0600 /etc/ssh/authorized_keys
        fi
    fi

    return 0
}
