#!/bin/sh
################################################################################
# usb-boot
################################################################################
. /etc/rc.d/functions

start() {
    mm_message_output info 'mounting USB boot device ...'

    # If the boot type is usb, then load the drivers needed to read the usb drive.
    if [ "${MM_BOOT_TYPE}" = "usb" ] ; then
        lspci -mn | sed -e 's%"%%g' | while read pci ; do
            index=1            ; bus=`       echo "${pci}" | cut -d' ' -f${index}`
            index=$((index+1)) ; class=`     echo "${pci}" | cut -d' ' -f${index}`
            index=$((index+1)) ; vendor=`    echo "${pci}" | cut -d' ' -f${index}`
            index=$((index+1)) ; device=`    echo "${pci}" | cut -d' ' -f${index}`
            index=$((index+1)) ; revision=`  echo "${pci}" | cut -d' ' -f${index}`
            if [ `echo "${revision}"   | grep -c -e '^-r'` = "1" ] ; then
                revision=`  echo "${revision}"   | sed -e 's%^-r%%'`
            else
                index=$((index-1)) ; revision=
            fi
            index=$((index+1)) ; class_prog=`echo "${pci}" | cut -d' ' -f${index}`
            if [ `echo "${class_prog}" | grep -c -e '^-p'` = "1" ] ; then
                class_prog=`echo "${class_prog}" | sed -e 's%^-p%%'`
            else
                index=$((index-1)) ; class_prog=
            fi
            index=$((index+1)) ; sub_vendor=`echo "${pci}" | cut -d' ' -f${index}`
            index=$((index+1)) ; sub_device=`echo "${pci}" | cut -d' ' -f${index}`

            case "${class}" in
                # USB.
                0c03)
                    [ -z "${class_prog}" ] && class_prog="00"
                    case "${class_prog}" in
                        00) modprobe uhci-hcd ;;
                        10) modprobe ohci-hcd ;;
                        20) modprobe ehci-hcd ;;
                    esac
                    ;;
            esac
        done
        if [ `lsmod | grep -c -e '^ehci_hcd'` = "1" ] || \
           [ `lsmod | grep -c -e '^ohci_hcd'` = "1" ] || \
           [ `lsmod | grep -c -e '^uhci_hcd'` = "1" ] ; then
            modprobe usb-storage
        fi
        if [ `lsmod | grep -c -e '^usb_storage'` = "1" ] ; then
            modprobe sd_mod
        fi
        if [ `lsmod | grep -c -e '^sd_mod'` = "1" ] ; then
            modprobe msdos
        fi

        # Wait for USB boot device to mount.
        waiting_time=0
        while [ ! -e /media/minimyth ] ; do
            mm_message_output info "waiting for USB boot device to mount (${waiting_time}) ..."
            sleep 1
            waiting_time=$((waiting_time+1))
        done
    fi

    # Get MiniMyth DCHP defaults,
    # allowing USB booted MiniMyth to work with limited DHCP servers.
    mm_conf_get /minimyth.dhcp /etc/minimyth.d/minimyth.dhcp

    return 0
}

stop() {
    return 0
}

case $1 in
    start) start ;;
    stop)  stop  ;;
esac

exit 0
