#!/bin/sh
################################################################################
# usb-boot
################################################################################
. /etc/rc.d/functions

pci2usb_map() {
    class=$1
    vendor=$2
    device=$3
    revision=$4
    class_prog=$5
    subvendor=$6
    subdevice=$7

    # Only look for USB controllers.
    if [ "${class}" = "0c03" ] ; then
        echo `mm_hardware_pci2kernel_map ${class} ${vendor} ${device} ${revision} ${class_prog} ${subvendor} ${subdevice}`
    fi
}

start() {
    mm_message_output info 'mounting USB boot device ...'

    # If the boot type is usb, then load the drivers needed to read the usb drive.
    if [ "${MM_BOOT_TYPE}" = "usb" ] ; then
        kernel_modules=`mm_hardware_pci_process pci2usb_map`
        for kernel_module in ${kernel_modules} ; do
            modprobe ${kernel_module}
            if [ ! "$?" = "0" ] ; then
                mm_message_output err "error: failed to load kernel module: ${kernel_module}"
                exit 1
            fi
        done

        if [ `lsmod | grep -c -e '^ehci_hcd'` = "1" ] || \
           [ `lsmod | grep -c -e '^ohci_hcd'` = "1" ] || \
           [ `lsmod | grep -c -e '^uhci_hcd'` = "1" ] ; then
            modprobe usb-storage
        fi
        if [ `lsmod | grep -c -e '^usb_storage'` = "1" ] ; then
            modprobe sd_mod
        fi
        if [ `lsmod | grep -c -e '^sd_mod'` = "1" ] ; then
            modprobe msdos
        fi

        # Wait for USB boot device to mount.
        waiting_time=0
        while [ ! -e /media/minimyth ] ; do
            mm_message_output info "waiting for USB boot device to mount (${waiting_time}) ..."
            sleep 1
            waiting_time=$((waiting_time+1))
        done
    fi

    # Get MiniMyth DCHP defaults,
    # allowing USB booted MiniMyth to work with limited DHCP servers.
    mm_conf_get /minimyth.dhcp /etc/minimyth.d/minimyth.dhcp

    return 0
}

stop() {
    return 0
}

case $1 in
    start) start ;;
    stop)  stop  ;;
esac

exit 0
