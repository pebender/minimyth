################################################################################
# Hardware variables.
################################################################################
conf_clean_hardware() {
    /bin/rm -rf /tmp/init.conf.hardware
}

conf_check_hardware() {
    # Check for obsolete variables.
    if /usr/bin/test ! -z "${MM_HARDWARE_AUDIO}"       ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_AUDIO" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_CHIPSET}"     ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_CHIPSET" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_LAN}"         ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_LAN" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_MOTHERBOARD}" ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_MOTHERBOARD" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_NORTHBRIDGE}" ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_NORTHBRIDGE" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_SOUTHBRIDGE}" ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_SOUTHBRIDGE" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_SENSOR}"      ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_SENSOR" is obsolete.'
        exit 1
    fi
    if /usr/bin/test ! -z "${MM_HARDWARE_TV}"          ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_HARDWARE_TV" is obsolete.'
        exit 1
    fi

    # Reset the variables.
    conf_reset 'MM_HARDWARE_'

    return 0
}

conf_default_hardware() {
    # The routine relies on MM_X_* variables.
    conf_default_x

    # Reset the variables.
    conf_reset 'MM_HARDWARE_'

    if /usr/bin/test -z "${MM_HARDWARE_CPU}" ; then
        MM_HARDWARE_CPU="`mm_hardware_cpu_get`"
    fi

    MM_HARDWARE_KERNEL_MODULES="${MM_HARDWARE_KERNEL_MODULES} `mm_hardware_motherboard2kernel_map`"
    MM_HARDWARE_KERNEL_MODULES="${MM_HARDWARE_KERNEL_MODULES} `mm_hardware_x2kernel_map ${MM_X_DRIVER}`"

    MM_HARDWARE_KERNEL_MODULES=`/bin/echo ${MM_HARDWARE_KERNEL_MODULES} | /bin/sed -e 's%  *% %g' | /bin/sed -e 's%^  *%%' | /bin/sed -e 's%  *$%%'`

    return 0
}

conf_write_hardware() {
    local conf_file=$1

    conf_variable_write "${conf_file}" MM_HARDWARE_CPU            "${MM_HARDWARE_CPU}"
    conf_variable_write "${conf_file}" MM_HARDWARE_KERNEL_MODULES "${MM_HARDWARE_KERNEL_MODULES}"

    return 0
}
