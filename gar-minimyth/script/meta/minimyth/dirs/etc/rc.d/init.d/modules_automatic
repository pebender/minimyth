#!/bin/sh
################################################################################
# modules_automatic
################################################################################
. /etc/rc.d/functions

start() {

    local file
    local file_old
    local file_new

    mm_message_output info "loading kernel modules (automatic) ..."

    # Real time clock.
    /sbin/modprobe rtc

    # IO scheduler.
    /sbin/modprobe as-iosched

    # Load ACPI kernel modules.
    /sbin/modprobe button
    /sbin/modprobe fan
    /sbin/modprobe processor
    /sbin/modprobe thermal
    /sbin/modprobe video

    # Loopback device.
    /sbin/modprobe loop

    # Net.
    /sbin/modprobe af_packet

    # Parallel port.
    /sbin/modprobe parport
    /sbin/modprobe parport_pc
    /sbin/modprobe ppdev

    # Enable udev rules that handle detected hardware.
    for file in `cd /etc/udev/rules.d ; /bin/ls -1 *-minimyth-hardware.rules.disabled 2> /dev/null` ; do
        file_old=`/bin/echo ${file}`
        file_new=`/bin/echo ${file} | /bin/sed -e 's%\.disabled\$%%'`
	/bin/mv -f /etc/udev/rules.d/${file_old} /etc/udev/rules.d/${file_new}
    done

    # Enable udev rules to detect and mount local boot partition (/minimyth).
    if /usr/bin/test "${MM_BOOT_TYPE}" = "local" ; then
        for file in `cd /etc/udev/rules.d ; /bin/ls -1 *-minimyth-localboot.rules.disabled 2> /dev/null` ; do
            file_old=`/bin/echo ${file}`
            file_new=`/bin/echo ${file} | /bin/sed -e 's%\.disabled\$%%'`
	    /bin/mv -f /etc/udev/rules.d/${file_old} /etc/udev/rules.d/${file_new}
        done
    fi

    # Enable udev rules that handle detected disks.
    for file in `cd /etc/udev/rules.d ; /bin/ls -1 *-minimyth-disk.rules.disabled 2> /dev/null` ; do
        file_old=`/bin/echo ${file}`
        file_new=`/bin/echo ${file} | /bin/sed -e 's%\.disabled\$%%'`
	/bin/mv -f /etc/udev/rules.d/${file_old} /etc/udev/rules.d/${file_new}
    done

    # Trigger udev with the additional udev rules that handle detected hardware.
    /sbin/udevtrigger
    /sbin/udevsettle --timeout=60

    return 0
}

stop() {

    local module
    local modules

    mm_message_output info "unloading kernel modules (automatic) ..."

    modules=`/bin/lsmod | /bin/sed -e 's%  *% %g' | /usr/bin/cut -d ' ' -f 1 | /bin/grep -v Module`
    for module in ${modules} ; do
        /sbin/modprobe -r ${module}
    done

    return 0
}

case $1 in
    start) start ;;
    stop)  stop  ;;
esac

exit 0
