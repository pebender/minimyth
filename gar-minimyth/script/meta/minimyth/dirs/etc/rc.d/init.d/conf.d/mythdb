################################################################################
# Myth frontend configuration variables and files.
################################################################################
conf_clean_mythdb() {
    /bin/rm -rf /tmp/init.conf.mythdb

    return 0
}

conf_check_mythdb() {
    # Check for obsolete variables.
    if /usr/bin/test ! -z "${MM_MYTHDB_JUMPOINT}"    ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_JUMPPOINT" is obsolete.'
    fi
    if /usr/bin/test ! -z "${MM_MYTHDB_JUMPOINTS}"   ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_JUMPPOINTS" is obsolete.'
    fi
    if /usr/bin/test ! -z "${MM_MYTHDB_KEYBINDING}"  ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_KEYBINDING" is obsolete.'
    fi
    if /usr/bin/test ! -z "${MM_MYTHDB_KEYBINDINGS}" ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_KEYBINDINGS" is obsolete.'
    fi
    if /usr/bin/test ! -z "${MM_MYTHDB_SETTING}"     ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_SETTING" is obsolete.'
    fi
    if /usr/bin/test ! -z "${MM_MYTHDB_SETTINGS}"    ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_SETTINGS" is obsolete.'
    fi
    if set | /bin/grep -q '^MM_MYTHDB_SETTING_'      ; then
        mm_message_output err 'error: "minimyth.conf" is out of date. "MM_MYTHDB_SETTING_<setting>" is obsolete.'
    fi

    return 0
}

conf_default_mythdb() {
    return 0
}

conf_write_mythdb() {
    local conf_file=$1

    set | /bin/grep -e '^MM_MYTHDB_JUMPPOINTS_[^=]*=' | \
    while read variable ; do
        variable_name=`/bin/echo ${variable} | /bin/sed -e "s%\([^=]*\)='\(.*\)'$%\1%"`
        variable_value=`/bin/echo ${variable} | /bin/sed -e "s%\([^=]*\)='\(.*\)'$%\2%"`
        conf_variable_write "${conf_file}" "${variable_name}" "${variable_value}"
    done
    set | /bin/grep -e '^MM_MYTHDB_KEYBINDINGS_[^=]*=' | \
    while read variable ; do
        variable_name=`/bin/echo ${variable} | /bin/sed -e "s%\([^=]*\)='\(.*\)'$%\1%"`
        variable_value=`/bin/echo ${variable} | /bin/sed -e "s%\([^=]*\)='\(.*\)'$%\2%"`
        conf_variable_write "${conf_file}" "${variable_name}" "${variable_value}"
    done
    set | /bin/grep -e '^MM_MYTHDB_SETTINGS_[^=]*=' | \
    while read variable ; do
        variable_name=`/bin/echo ${variable} | /bin/sed -e "s%\([^=]*\)='\(.*\)'$%\1%"`
        variable_value=`/bin/echo ${variable} | /bin/sed -e "s%\([^=]*\)='\(.*\)'$%\2%"`
        conf_variable_write "${conf_file}" "${variable_name}" "${variable_value}"
    done

    return 0
}

conf_fetch_mythdb() {
    return 0
}
