#!/bin/sh
################################################################################
# modules
################################################################################
. /etc/rc.d/functions

start() {
    mm_message_output info 'loading kernel modules ...'

    # Real time clock.
    modprobe rtc

    # IO scheduler.
    modprobe as-iosched

    # Input.
    modprobe evdev
    modprobe psmouse

    # Loopback device.
    modprobe loop

    # Net.
    modprobe af_packet

    # Parallel port.
    modprobe parport
    modprobe parport_pc
    modprobe ppdev

    # Look for PCI devices and load associated drivers.
    lspci -mn | sed -e 's%"%%g' | while read pci ; do
        index=1            ; bus=`       echo "${pci}" | cut -d' ' -f${index}`
        index=$((index+1)) ; class=`     echo "${pci}" | cut -d' ' -f${index}`
        index=$((index+1)) ; vendor=`    echo "${pci}" | cut -d' ' -f${index}`
        index=$((index+1)) ; device=`    echo "${pci}" | cut -d' ' -f${index}`
        index=$((index+1)) ; revision=`  echo "${pci}" | cut -d' ' -f${index}`
        if [ `echo "${revision}"   | grep -c -e '^-r'` = "1" ] ; then
            revision=`  echo "${revision}"   | sed -e 's%^-r%%'`
        else
            index=$((index-1)) ; revision=
        fi
        index=$((index+1)) ; class_prog=`echo "${pci}" | cut -d' ' -f${index}`
        if [ `echo "${class_prog}" | grep -c -e '^-p'` = "1" ] ; then
            class_prog=`echo "${class_prog}" | sed -e 's%^-p%%'`
        else
            index=$((index-1)) ; class_prog=
        fi
        index=$((index+1)) ; sub_vendor=`echo "${pci}" | cut -d' ' -f${index}`
        index=$((index+1)) ; sub_device=`echo "${pci}" | cut -d' ' -f${index}`

        case "${class}" in
            # PCI bridge (assumed to imply AGP).
            0604)
                case "${vendor}" in
                    8086) modprobe intel-agp  ;; # Intel
                    10de) modprobe nvidia-agp ;; # NVIDIA
                    1106) modprobe via-agp    ;; # VIA
                esac
                ;;
            # IDE.
            0101)
                case "${vendor}" in
                    8086) modprobe piix      ;; # Intel
                    10de) modprobe amd74xx   ;; # NVIDIA
                    1106) modprobe via82cxxx ;; # VIA
                esac
                ;;
            # FireWire (IEEE1394).
            0c00)
                [ -z "${class_prog}" ] && class_prog="00"
                case "${class_prog}" in
                    00) modprobe ieee1394 ;;
                    10) modprobe ohci1394 ;;
                esac
                ;;
            # USB.
            0c03)
                [ -z "${class_prog}" ] && class_prog="00"
                case "${class_prog}" in
                    00) modprobe uhci-hcd ;;
                    10) modprobe ohci-hcd ;;
                    20) modprobe ehci-hcd ;;
                esac
                ;;
            # SMBus.
            0c05)
                ;;
        esac
    done

    # IDE.
    if [ `lsmod | grep -c -e '^ide_core'` = "1" ] ; then
        modprobe ide-cd
    fi

    # FireWire (IEEE1394).
    if [ `lsmod | grep -c -e '^ieee1394'` = "1" ] ; then
        modprobe sbp2
    fi
    if [ `lsmod | grep -c -e '^sbp2'` = "1" ] ; then
        modprobe sd_mod
        modprobe sr_mod
    fi

    # USB
    if [ `lsmod | grep -c -e '^ehci_hcd'` = "1" ] || \
       [ `lsmod | grep -c -e '^ohci_hcd'` = "1" ] || \
       [ `lsmod | grep -c -e '^uhci_hcd'` = "1" ] ; then
        modprobe usbhid
        modprobe usblcd
        modprobe usb-storage
        modprobe usbserial
        modprobe ftdi-sio
    fi
    if [ `lsmod | grep -c -e '^usb_storage'` = "1" ] ; then
        modprobe sd_mod
        modprobe sr_mod
    fi

    # File systems (hard disk).
    if [ `lsmod | grep -c -e '^sd_mod'` = "1" ] ; then
        modprobe fat
        modprobe msdos
        modprobe vfat
    fi

    # File systems (cdrom).
    if [ `lsmod | grep -c -e '^cdrom'` = "1" ] ; then
        modprobe isofs
        modprobe udf
    fi

    # File systems (network).
    modprobe cifs

    # File system character sets.
    if [ `lsmod | grep -c -e '^nls_base'` = "1" ] ; then
        modprobe nls_ascii
        modprobe nls_cp437
        modprobe nls_cp850
        modprobe nls_iso8859-1
        modprobe nls_iso8859-15
        modprobe nls_utf8
    fi

    return 0
}

stop() {
    return 0
}

case $1 in
    start) start ;;
    stop)  stop  ;;
esac

exit 0
