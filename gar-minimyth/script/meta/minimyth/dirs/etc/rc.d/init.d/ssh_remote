#!/bin/sh
################################################################################
# ssh_remote
#
# This script configures ssh remote command execution.
################################################################################
. /etc/rc.d/functions

__ssh_copy_to_remote() {
    local dir=$1

    local dir_local=/usr/share/mythtv/${dir}
    local dir_remote=tmp/minimyth/${MM_HOSTNAME}/${dir}
    local dir_remote_dir=`/usr/bin/dirname ${dir_remote}`

    mm_ssh_remote_run /dev/null "rm -fr ${dir_remote}"
    if /usr/bin/test $? -ne 0 ; then
        mm_message_output err "error: failed to delete remote directory '${dir_remote}'."
        exit 1
    fi
    if /usr/bin/test -e ${dir_local} ; then
        mm_ssh_remote_run /dev/null "mkdir -p ${dir_remote_dir}"
        if /usr/bin/test $? -ne 0 ; then
            mm_message_output err "error: failed to create remote directory '${dir_remote_dir}'."
            exit 1
        fi
        mm_ssh_remote_put /dev/null ${dir_local} ${dir_remote}
        if /usr/bin/test $? -ne 0 ; then
            mm_message_output err "error: failed to copy local directory '${dir_local}' to remote directory '${dir_remote}'."
            exit 1
        fi
    else
        mm_message_output warn "warning: local directory '${dir_local}' does not exist."
    fi
}

start() {
    mm_message_output info "configuring ssh remote command execution ..."

    if /usr/bin/test -e /etc/ssh/id_rsa ; then
        /bin/chmod 0600 /etc/ssh/id_rsa
        /bin/chown root:root /etc/ssh/id_rsa

        /bin/mkdir -p /root/.ssh
        /bin/cp /etc/ssh/id_rsa /root/.ssh/id_rsa
        /bin/chmod 0600 /root/.ssh/id_rsa
        /bin/chown root:root /root/.ssh/id_rsa

        /bin/mkdir -p /home/minimyth/.ssh
        /bin/cp /etc/ssh/id_rsa /home/minimyth/.ssh/id_rsa
        /bin/chmod 0600 /home/minimyth/.ssh/id_rsa
        /bin/chown root:root /home/minimyth/.ssh/id_rsa
    fi

    if /usr/bin/test "${MM_SSH_REMOTE_ENABLED}" = "yes" ; then
        if /usr/bin/test "${MM_MYTHSTREAM_ENABLED}" = "yes" ; then
            __ssh_copy_to_remote 'mythstream/parsers'
        fi
        if /usr/bin/test "${MM_MYTHVIDEO_ENABLED}" = "yes" ; then
            __ssh_copy_to_remote 'mythvideo/scripts'
        fi
    fi

    return 0
}

stop() {
    return 0
}

case $1 in
    start) start ;;
    stop)  stop  ;;
esac

exit 0
