#!/bin/sh

. /etc/rc.d/functions

# If MPlayer is running, then exit it.
mm_xmacroplay 'xine' 'KeyStr Escape\n'
if /usr/bin/test -n "`/bin/pidof mplayer`" ; then
    /bin/kill `/bin/pidof mplayer`
fi
while /usr/bin/test -n "`/bin/pidof mplayer`" ; do
    /bin/sleep 1
done

# If Xine is running, then exit it.
mm_xmacroplay 'xine' 'KeyStr Q\n'
if /usr/bin/test -n "`/bin/pidof xine`" ; then
    /bin/kill `/bin/pidof xine`
fi
while /usr/bin/test -n "`/bin/pidof xine`" ; do
    /bin/sleep 1
done

# If any game emulators are running, then exit them.
/usr/bin/mm_game_exit

# If mythfrontend is running, then return it to the main menu using the 'Main Menu' JumpPoint.
# If the Network Interface interface is enabled, then use it.
# Else, if the JumpPoint key sequence is set, then use it.
if /usr/bin/test -n "`/bin/pidof mythfrontend`" ; then
    NetworkControlEnabled=`mm_mythdb_settings_get NetworkControlEnabled`
    NetworkControlPort=`mm_mythdb_settings_get NetworkControlPort`
    MainMenuJumpPoint=`mm_mythdb_jumppoints_get "Main Menu"`

    if /usr/bin/test ${NetworkControlEnabled} -eq 1 ; then
        /usr/bin/nc localhost ${NetworkControlPort} << EOF
jump mainmenu
EOF
    elif /usr/bin/test ! -z "${MainMenuJumpPoint}" && /usr/bin/test ! "x${MainMenuJumpPoint}" = "xNULL" ; then
        # Convert MythTV JumpPoint key sequence to an XMacroPlay command sequence.
        key_count=`/bin/echo ${MainMenuJumpPoint} | /bin/sed -e 's%[^+][^+]*%%g' | /usr/bin/wc -c`
        key_index=1
        key_press=""
        key_release=""
        while /usr/bin/test ${key_index} -le ${key_count} ; do
            key=`/bin/echo ${MainMenuJumpPoint} | /usr/bin/cut -d '+' -f ${key_index}`
            case  "${key}" in
                ALT|Alt)     key="Alt_L"     ;;
                CTRL|Ctrl)   key="Control_L" ;;
                META|Meta)   key="Meta_L"    ;;
                SHIFT|Shift) key="Shift_L"   ;;
            esac
            key_press="${key_press}KeyStrPress ${key}\n "
            key_release="KyeStrRelease ${key}\n ${key_release}"
            key_index=$((${key_index} + 1))
        done
        # Send command sequence to mythfrontend using XMacroPlay.
        mm_xmacroplay 'mythfrontend' "${key_press}${key_release}"
    fi
fi

/bin/echo 3 > /proc/acpi/sleep

# Restart X
# Ideally, we would stop X before sleeping and start X after waking.
# However, it does not appear to work.
if /usr/bin/test "x${MM_LIRC_SLEEP_X_RESTART_ENABLED}" = "xyes" ; then
    # Stop X
    # Stop all known programs that could be keeping X running.
    # Stop mythfrontend first because it may have been started by mythwelcome.
    if /usr/bin/test -n "`/bin/pidof mythfrontend`" ; then
        /bin/kill `/bin/pidof mythfrontend`
    fi
    if /usr/bin/test -n "`/bin/pidof mythwelcome`" ; then
        /bin/kill `/bin/pidof mythwelcome`
    fi
    if /usr/bin/test ! -n "`/bin/pidof ${MM_X_MYTH_PROGRAM}`" ; then
        /bin/kill `/bin/pidof ${MM_X_MYTH_PROGRAM}`
    fi
    # Make sure that X and has stopped by waiting for all the known X programs to die
    # Clearly, this is overkill, but we want to be certain.
    while /usr/bin/test -n "`/bin/pidof rxvt`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof xterm`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof xine`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof mythfrontend`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof mythwelcome`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof ${MM_X_MYTH_PROGRAM}`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof x11vnc`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof ratpoison`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof X`" ; do
        /bin/sleep 1
    done
    while /usr/bin/test -n "`/bin/pidof xinit`" ; do
        /bin/sleep 1
    done
    # Start X
    /usr/bin/su -c /usr/bin/xinit - minimyth &
fi
