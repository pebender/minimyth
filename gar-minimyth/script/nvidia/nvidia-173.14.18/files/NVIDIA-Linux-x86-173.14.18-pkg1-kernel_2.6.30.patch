diff -Naur NVIDIA-Linux-x86-173.14.18-pkg1-old/usr/src/nv/nv.c NVIDIA-Linux-x86-173.14.18-pkg1-new/usr/src/nv/nv.c
--- NVIDIA-Linux-x86-173.14.18-pkg1-old/usr/src/nv/nv.c	2009-03-02 12:49:19.000000000 -0800
+++ NVIDIA-Linux-x86-173.14.18-pkg1-new/usr/src/nv/nv.c	2009-06-12 11:07:07.000000000 -0700
@@ -16,6 +16,7 @@
 #include "os-agp.h"
 #include "nv-vm.h"
 #include "nv-reg.h"
+#include <linux/version.h>
 
 #ifdef MODULE_ALIAS_CHARDEV_MAJOR
 MODULE_ALIAS_CHARDEV_MAJOR(NV_MAJOR_DEVICE_NUMBER);
@@ -607,10 +608,12 @@
      * Set the module owner to ensure that the reference
      * count reflects accesses to the proc files.
      */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
     proc_nvidia->owner = THIS_MODULE;
     proc_nvidia_cards->owner = THIS_MODULE;
     proc_nvidia_warnings->owner = THIS_MODULE;
 
+#endif
     for (j = 0; j < num_nv_devices; j++)
     {
         nvl = &nv_linux_devices[j];
@@ -629,7 +632,9 @@
 
         entry->data = nv;
         entry->read_proc = nv_kern_read_cardinfo;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
         entry->owner = THIS_MODULE;
+#endif
 
         if (nvos_find_agp_capability(dev)) {
             /*
@@ -642,7 +647,9 @@
                 goto failed;
             }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
             entry->owner = THIS_MODULE;
+#endif
             proc_nvidia_agp = entry;
 
             entry = create_proc_entry("status", flags, proc_nvidia_agp);
@@ -653,7 +660,9 @@
 
             entry->data = nv;
             entry->read_proc = nv_kern_read_status;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
             entry->owner = THIS_MODULE;
+#endif
 
             entry = create_proc_entry("host-bridge", flags, proc_nvidia_agp);
             if (!entry) {
@@ -663,8 +672,9 @@
 
             entry->data = NULL;
             entry->read_proc = nv_kern_read_agpinfo;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
             entry->owner = THIS_MODULE;
-
+#endif
             entry = create_proc_entry("card", flags, proc_nvidia_agp);
             if (!entry) {
                 NV_PCI_DEV_PUT(dev);
@@ -673,7 +683,9 @@
 
             entry->data = nv;
             entry->read_proc = nv_kern_read_agpinfo;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
             entry->owner = THIS_MODULE;
+#endif
         }
 
         NV_PCI_DEV_PUT(dev);
@@ -684,14 +696,18 @@
         goto failed;
 
     entry->read_proc = nv_kern_read_version;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
     entry->owner = THIS_MODULE;
+#endif
 
     entry = create_proc_entry("registry", flags, proc_nvidia);
     if (!entry)
         goto failed;
 
     entry->read_proc = nv_kern_read_registry;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
     entry->owner = THIS_MODULE;
+#endif
 
     return;
 
@@ -718,8 +734,10 @@
 
     entry->data = (void *)message;
     entry->read_proc = nv_kern_read_warning;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,30)
     entry->owner = THIS_MODULE;
 #endif
+#endif
 }
 
 #ifdef CONFIG_PROC_FS
