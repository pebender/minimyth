GARNAME = compiler-rt
GARVERSION = $(LLVM_VERSION)
CATEGORIES = llvm
MASTER_SITES = https://www.llvm.org/releases/$(GARVERSION)/
MASTER_SITES += https://github.com/llvm/llvm-project/releases/download/llvmorg-$(GARVERSION)/
DISTFILES = $(DISTNAME).src.tar.xz
LICENSE = $(GARNAME)
$(GARNAME)_LICENSE_TEXT = $(WORKSRC)/LICENSE.TXT

DESCRIPTION = 
define BLURB
endef

xDEPENDS = lang/c lang/cxx build-tool/cmake
BUILDEPS = \
	gcc-target/gcc-target

WORKSRC = $(WORKDIR)/$(DISTNAME).src

CONFIGURE_SCRIPTS = $(WORKSRC)/cmake
BUILD_SCRIPTS = $(WORKSRC)/cmake
INSTALL_SCRIPTS = $(WORKSRC)/cmake

CONFIGURE_ARGS = \
	-DCMAKE_VERBOSE_MAKEFILE=ON \
	-DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY \
	-DxCMAKE_SYSROOT="$(DESTDIR)$(bindir)" \
	-DCMAKE_PREFIX="$(clang_build_libdir)/clang/$(LLVM_VERSION)" \
	-DCMAKE_INSTALL_PREFIX="$(clang_build_DESTDIR)$(clang_build_libdir)/clang/$(LLVM_VERSION)" \
	-DCMAKE_INSTALL_LIBDIR="lib" \
	-DCMAKE_C_COMPILER="$(CC)" \
	-DCMAKE_CXX_COMPILER="$(CXX)" \
	-DCMAKE_ASM_COMPILER="$(CC)" \
	-DCMAKE_LINKER="$(LD)" \
	-DCMAKE_C_COMPILER_TARGET="$(GARHOST)" \
	-DCMAKE_CXX_COMPILER_TARGET="$(GARHOST)" \
	-DCMAKE_ASM_COMPILER_TARGET="$(GARHOST)" \
	-DCMAKE_C_FLAGS="$(CPPFLAGS) $(CFLAGS)" \
	-DCMAKE_CXX_FLAGS="$(CPPFLAGS) $(CXXFLAGS)" \
	-DCMAKE_EXE_LINKER_FLAGS="$(LDFLAGS)" \
	-DCMAKE_SHARED_LINKER_FLAGS="$(LDFLAGS)" \
	-DCMAKE_AR="$(AR)" \
	-DCMAKE_AS="$(AS)" \
	-DCMAKE_NM="$(NM)" \
	-DCMAKE_OBJCOPY="$(OBJCOPY)" \
	-DCMAKE_OBJDUMP="$(OBJDUMP)" \
	-DCMAKE_RANLIB="$(RANLIB)" \
	-DCMAKE_STRIP="$(STRIP)" \
	$(if $(filter i386,$(GARCH_FAMILY)),-DCMAKE_SIZEOF_VOID_P=4) \
	$(if $(filter x86_64,$(GARCH_FAMILY)),-DCMAKE_SIZEOF_VOID_P=8) \
	-DPYTHON_EXECUTABLE="$(clang_build_DESTDIR)$(clang_build_bindir)/python" \
	-DCOMPILER_RT_DEFAULT_TARGET_TRIPLE="$(GARHOST)" \
	-DCOMPILER_RT_HAS_LIBC=ON \
	-DCOMPILER_RT_USE_LIBCXX=ON \
	-DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
	-DCOMPILER_RT_BUILD_CRT=ON \
	-DCOMPILER_RT_BUILD_BUILTINS=ON \
	-DCOMPILER_RT_BUILD_SANITIZERS=OFF \
	-DCOMPILER_RT_BUILD_XRAY=OFF \
	-DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
	-DCOMPILER_RT_BUILD_PROFILE=OFF \
	-DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=OFF \
	-DCOMPILER_RT_HAS_ATOMIC_KEYWORD=ON \
	-DCOMPILER_RT_HAS_ATOMIC_KEYWORD=ON \
	-DCOMPILER_RT_CAN_EXECUTE_TESTS=OFF

z = \
	-DLLVM_CONFIG_PATH="$(clang_build_DESTDIR)$(clang_build_bindir)/config/llvm-config" \

ifeq ($(DESTIMG),build)
else
CONFIGURE_ARGS += \
	-DCMAKE_CROSSCOMPILING=ON \
	-DCMAKE_SYSTEM_NAME="Linux"
endif

GAR_EXTRA_CONF += clang-target/clang-target/toolchain.mk
GAR_EXTRA_CONF += devel/cmake/package-api.mk
GAR_EXTRA_CONF += llvm/llvm/package-api.mk
include ../../gar.mk

LDFLAGS += -stdlib=libstdc++ -unwindlib=libgcc -rtlib=libgcc
