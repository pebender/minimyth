diff -Naur perl-5.10.0-old/installman perl-5.10.0-new/installman
--- perl-5.10.0-old/installman	2007-12-18 02:47:07.000000000 -0800
+++ perl-5.10.0-new/installman	2008-02-22 12:04:54.000000000 -0800
@@ -1,5 +1,5 @@
 #!./perl -w
-BEGIN { @INC = qw(lib) }
+#BEGIN { @INC = qw(lib) }
 use strict;
 
 BEGIN {
diff -Naur perl-5.10.0-old/installperl perl-5.10.0-new/installperl
--- perl-5.10.0-old/installperl	2007-12-18 02:47:07.000000000 -0800
+++ perl-5.10.0-new/installperl	2008-02-22 11:40:52.000000000 -0800
@@ -1,10 +1,10 @@
-#!./perl
+#!perl
 
 BEGIN {
     require 5.004;
     chdir '..' if !-d 'lib' and -d '../lib';
-    @INC = 'lib';
-    $ENV{PERL5LIB} = 'lib';
+#    @INC = 'lib';
+#    $ENV{PERL5LIB} = 'lib';
 }
 
 BEGIN {
@@ -945,7 +945,7 @@
 		print " " if (@opts);
 		print "$file\n";
 	    }
-	    system("strip", @opts, $file);
+	    system("@GAR_STRIP@", @opts, $file);
 	} else {
 	    print "# file '$file' skipped\n" if $verbose;
 	}
diff -Naur perl-5.10.0-old/Makefile.SH perl-5.10.0-new/Makefile.SH
--- perl-5.10.0-old/Makefile.SH	2008-02-22 11:40:26.000000000 -0800
+++ perl-5.10.0-new/Makefile.SH	2008-02-22 11:51:42.000000000 -0800
@@ -45,9 +45,9 @@
 	# $ldlibpth so that ./perl finds *this* shared libperl.
 	case "$LD_LIBRARY_PATH" in
 	'')
-		ldlibpth="LD_LIBRARY_PATH=`pwd`";;
+		ldlibpth="LD_LIBRARY_PATH=";;
 	*)
-		ldlibpth="LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}";;
+		ldlibpth="LD_LIBRARY_PATH=${LD_LIBRARY_PATH}";;
 	esac
 
 	pldlflags="$cccdlflags"
@@ -483,6 +483,7 @@
 
 generate_uudmap\$(EXE_EXT): generate_uudmap\$(OBJ_EXT)
 	\$(CC) -o generate_uudmap \$(LDFLAGS) generate_uudmap\$(OBJ_EXT) \$(libs)
+	cp `which perl-generate_uudmap` generate_uudmap
 
 !GROK!THIS!
 $spitshell >>Makefile <<'!NO!SUBS!'
@@ -634,6 +635,7 @@
 	$(CC) -o miniperl $(CLDFLAGS) \
 	    `echo $(obj) | sed 's/ op$(OBJ_EXT) / /'` \
 	    miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT) $(libs)
+	cp `which perl-miniperl` miniperl
 	$(LDLIBPTH) $(RUN) ./miniperl -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest
 !NO!SUBS!
 		;;
@@ -642,6 +644,7 @@
 miniperl: $& miniperlmain$(OBJ_EXT) $(obj) opmini$(OBJ_EXT)
 	$(CC) -o miniperl `echo $(obj) | sed 's/ op$(OBJ_EXT) / /'` \
 	    miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT) $(libs)
+	cp `which perl-miniperl` miniperl
 	$(LDLIBPTH) $(RUN) ./miniperl -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest
 !NO!SUBS!
 		;;
@@ -664,6 +667,7 @@
 	$(CC) $(CLDFLAGS) $(NAMESPACEFLAGS) -o miniperl \
 	    `echo $(obj) | sed 's/ op$(OBJ_EXT) / /'` \
 	    miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT) $(libs)
+	cp `which perl-miniperl` miniperl
 	$(LDLIBPTH) $(RUN) ./miniperl -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest
 !NO!SUBS!
 		;;
@@ -674,6 +678,7 @@
 	$(LDLIBPTH) $(CC) $(CLDFLAGS) -o miniperl \
 	    `echo $(obj) | sed 's/ op$(OBJ_EXT) / /'` \
 	    miniperlmain$(OBJ_EXT) opmini$(OBJ_EXT) $(libs)
+	cp `which perl-miniperl` miniperl
 	$(LDLIBPTH) $(RUN) ./miniperl -w -Ilib -MExporter -e '<?>' || $(MAKE) minitest
 !NO!SUBS!
 		;;
@@ -705,7 +710,7 @@
 	@grep "^usemymalloc="    config.sh
 	@grep "^usemymalloc='n'" config.sh >/dev/null || exit 1
 	@echo "And of course you have to have valgrind..."
-	$(VALGRIND) ./perl -e 1 2>/dev/null || exit 1
+	$(VALGRIND) perl -e 1 2>/dev/null || exit 1
 
 # Third Degree Perl (Tru64 only)
 
@@ -886,13 +891,13 @@
 	-@test -f pod/perl5100delta.pod && cd pod && $(LNS) perl5100delta.pod perldelta.pod && cd .. && echo "pod/perldelta.pod" >> extra.pods # See buildtoc
 
 extras.make: perl$(EXE_EXT)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(LDLIBPTH) $(RUN) ./perl -Ilib -MCPAN -e '@ARGV&&make(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(LDLIBPTH) $(RUN) perl -Ilib -MCPAN -e '@ARGV&&make(@ARGV)' `cat extras.lst`
 
 extras.test: perl$(EXE_EXT)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(LDLIBPTH) $(RUN) ./perl -Ilib -MCPAN -e '@ARGV&&test(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(LDLIBPTH) $(RUN) perl -Ilib -MCPAN -e '@ARGV&&test(@ARGV)' `cat extras.lst`
 
 extras.install: perl$(EXE_EXT)
-	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(LDLIBPTH) $(RUN) ./perl -Ilib -MCPAN -e '@ARGV&&install(@ARGV)' `cat extras.lst`
+	-@test ! -s extras.lst || PATH="`pwd`:${PATH}" PERL5LIB="`pwd`/lib:${PERL5LIB}" $(LDLIBPTH) $(RUN) perl -Ilib -MCPAN -e '@ARGV&&install(@ARGV)' `cat extras.lst`
 
 .PHONY: install install-strip install-all install-verbose install-silent \
 	no-install install.perl install.man install.html
@@ -919,17 +924,17 @@
 INSTALL_DEPENDENCE = all
 
 install.perl:	$(INSTALL_DEPENDENCE) installperl
-	$(LDLIBPTH) $(RUN) ./perl installperl --destdir=$(DESTDIR) $(INSTALLFLAGS) $(STRIPFLAGS)
+	$(LDLIBPTH) $(RUN) perl installperl --destdir=$(DESTDIR) $(INSTALLFLAGS) $(STRIPFLAGS)
 	-@test ! -s extras.lst || $(MAKE) extras.install
 
 install.man:	all installman
-	$(LDLIBPTH) $(RUN) ./perl installman --destdir=$(DESTDIR) $(INSTALLFLAGS)
+	$(LDLIBPTH) $(RUN) perl installman --destdir=$(DESTDIR) $(INSTALLFLAGS)
 
 # XXX Experimental. Hardwired values, but useful for testing.
 # Eventually Configure could ask for some of these values.
 install.html: all installhtml
 	-@test -f README.vms && cd vms && $(LNS) ../README.vms README_vms.pod && cd ..
-	$(LDLIBPTH) $(RUN) ./perl installhtml   \
+	$(LDLIBPTH) $(RUN) perl installhtml   \
       --podroot=. --podpath=. --recurse  \
       --htmldir=$(privlib)/html   \
       --htmlroot=$(privlib)/html  \
@@ -1043,7 +1048,7 @@
 
 .PHONY: printconfig
 printconfig:
-	@eval `$(LDLIBPTH) $(RUN) ./perl -Ilib -V:$(CONFIGVAR)`; echo $$$(CONFIGVAR)
+	@eval `$(LDLIBPTH) $(RUN) perl -Ilib -V:$(CONFIGVAR)`; echo $$$(CONFIGVAR)
 
 .PHONY: clean _tidy _mopup _cleaner1 _cleaner2 \
 	realclean _realcleaner clobber _clobber \
@@ -1195,7 +1200,7 @@
 test_prep_pre: preplibrary utilities $(nonxs_ext)
 
 test_prep: test_prep_pre miniperl$(EXE_EXT) $(unidatafiles) perl$(EXE_EXT) $(dynamic_ext) $(TEST_PERL_DLL)
-	PERL=./perl $(MAKE) _test_prep
+	PERL=perl $(MAKE) _test_prep
 
 _test_tty:
 	cd t && $(PERL_DEBUG) $(LDLIBPTH) $(PERL) $(TESTFILE) $(TEST_ARGS) $(TEST_FILES) </dev/tty
@@ -1220,19 +1225,19 @@
 	@echo "Ran tests" > t/rantests
 
 test check: test_prep
-	PERL=./perl $(MAKE) _test
+	PERL=perl $(MAKE) _test
 
 test_tty: test_prep
-	PERL=./perl $(MAKE) _test_tty
+	PERL=perl $(MAKE) _test_tty
 
 test_notty: test_prep
-	PERL=./perl $(MAKE) _test_notty
+	PERL=perl $(MAKE) _test_notty
 
 utest ucheck test.utf8 check.utf8: test_prep
-	PERL=./perl TEST_ARGS=-utf8 $(MAKE) _test
+	PERL=perl TEST_ARGS=-utf8 $(MAKE) _test
 
 coretest: test_prep
-	PERL=./perl TEST_ARGS=-core $(MAKE) _test
+	PERL=perl TEST_ARGS=-core $(MAKE) _test
 
 test-prep:	test_prep
 
@@ -1243,60 +1248,60 @@
 # Torture testing
 
 test.torture torturetest:	test_prep
-	PERL=./perl TEST_ARGS=-torture $(MAKE) _test
+	PERL=perl TEST_ARGS=-torture $(MAKE) _test
 
 # Targets for UTF16 testing:
 
 minitest.utf16: minitest.prep
 	- cd t && (rm -f perl$(EXE_EXT); $(LNS) ../miniperl$(EXE_EXT) perl$(EXE_EXT)) \
-		&& $(LDLIBPTH) $(RUN) ./perl TEST -minitest -utf16 base/*.t comp/*.t cmd/*.t run/*.t io/*.t op/*.t uni/*.t mro/*.t </dev/tty
+		&& $(LDLIBPTH) $(RUN) perl TEST -minitest -utf16 base/*.t comp/*.t cmd/*.t run/*.t io/*.t op/*.t uni/*.t mro/*.t </dev/tty
 
 test.utf16 check.utf16: test_prep
-	PERL=./perl $(MAKE) TEST_ARGS=-utf16 _test
+	PERL=perl $(MAKE) TEST_ARGS=-utf16 _test
 
 utest.utf16 ucheck.utf16: test_prep
-	PERL=./perl $(MAKE) TEST_ARGS="-utf8 -utf16" _test
+	PERL=perl $(MAKE) TEST_ARGS="-utf8 -utf16" _test
 
 # Targets for valgrind testing:
 
 test_prep.valgrind: test_prep perl.valgrind
-	PERL=./perl $(MAKE) _test_prep
+	PERL=perl $(MAKE) _test_prep
 
 test.valgrind check.valgrind:	test_prep perl.valgrind.config
-	PERL=./perl PERL_DEBUG=PERL_VALGRIND=1 VALGRIND='$(VALGRIND)' $(MAKE) _test
+	PERL=perl PERL_DEBUG=PERL_VALGRIND=1 VALGRIND='$(VALGRIND)' $(MAKE) _test
 
 utest.valgrind ucheck.valgrind: test_prep.valgrind perl.valgrind.config
-	PERL=./perl PERL_DEBUG=PERL_VALGRIND=1 TEST_ARGS=-utf8 $(MAKE) _test
+	PERL=perl PERL_DEBUG=PERL_VALGRIND=1 TEST_ARGS=-utf8 $(MAKE) _test
 
 test_notty.valgrind: test_prep.valgrind perl.valgrind.config
-	PERL=./perl $(MAKE) PERL_DEBUG=PERL_VALGRIND=1 _test_notty
+	PERL=perl $(MAKE) PERL_DEBUG=PERL_VALGRIND=1 _test_notty
 
 # Targets for Third Degree testing.
 
 test_prep.third: test_prep perl.third
-	PERL=./perl.third $(MAKE) _test_prep
+	PERL=perl.third $(MAKE) _test_prep
 
 test.third check.third:	test_prep.third perl.third
-	PERL=./perl.third PERL_DEBUG=PERL_3LOG=1 $(MAKE) _test
+	PERL=perl.third PERL_DEBUG=PERL_3LOG=1 $(MAKE) _test
 
 utest.third ucheck.third: test_prep.third perl.third
-	PERL=./perl.third PERL_DEBUG=PERL_3LOG=1 TEST_ARGS=-utf8 $(MAKE) _test
+	PERL=perl.third PERL_DEBUG=PERL_3LOG=1 TEST_ARGS=-utf8 $(MAKE) _test
 
 test_notty.third: test_prep.third perl.third
-	PERL=./perl.third $(MAKE) PERL_DEBUG=PERL_3LOG=1 _test_notty
+	PERL=perl.third $(MAKE) PERL_DEBUG=PERL_3LOG=1 _test_notty
 
 # Targets for Deparse testing.
 
 test.deparse:	test_prep
-	PERL=./perl TEST_ARGS=-deparse $(MAKE) _test
+	PERL=perl TEST_ARGS=-deparse $(MAKE) _test
 
 test_notty.deparse:	test_prep
-	PERL=./perl TEST_ARGS=-deparse $(MAKE) _test_notty
+	PERL=perl TEST_ARGS=-deparse $(MAKE) _test_notty
 
 # Targets to run the test suite with -t
 
 test.taintwarn:	test_prep
-	PERL=./perl TEST_ARGS=-taintwarn $(MAKE) _test
+	PERL=perl TEST_ARGS=-taintwarn $(MAKE) _test
 
 minitest.prep:
 	-@test -f lib/lib.pm && test -f lib/Config.pm || \
@@ -1310,15 +1315,15 @@
 # is crashing.
 minitest: miniperl$(EXE_EXT) lib/re.pm minitest.prep
 	- cd t && (rm -f perl$(EXE_EXT); $(LNS) ../miniperl$(EXE_EXT) perl$(EXE_EXT)) \
-		&& $(LDLIBPTH) $(RUN) ./perl TEST -minitest base/*.t comp/*.t cmd/*.t run/*.t io/*.t op/*.t uni/*.t mro/*.t </dev/tty
+		&& $(LDLIBPTH) $(RUN) perl TEST -minitest base/*.t comp/*.t cmd/*.t run/*.t io/*.t op/*.t uni/*.t mro/*.t </dev/tty
 
 # Test via harness
 
 test_harness: test_prep
-	PERL=./perl $(MAKE) TESTFILE=harness _test
+	PERL=perl $(MAKE) TESTFILE=harness _test
 
 test_harness_notty: test_prep
-	PERL=./perl HARNESS_NOTTY=1 $(MAKE) TESTFILE=harness _test
+	PERL=perl HARNESS_NOTTY=1 $(MAKE) TESTFILE=harness _test
 
 # Handy way to run perlbug -ok without having to install and run the
 # installed perlbug. We don't re-run the tests here - we trust the user.
@@ -1328,28 +1333,28 @@
 .PHONY: ok okfile oknack okfilenack nok nokfile noknack nokfilenack
 
 ok:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)'
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)'
 
 okfile:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)' -F perl.ok
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)' -F perl.ok
 
 oknack:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)' -A
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)' -A
 
 okfilenack:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)' -F perl.ok -A
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -ok -s '(UNINSTALLED)' -F perl.ok -A
 
 nok:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)'
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)'
 
 nokfile:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)' -F perl.nok
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)' -F perl.nok
 
 noknack:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)' -A
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)' -A
 
 nokfilenack:	utilities
-	$(LDLIBPTH) $(RUN) ./perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)' -F perl.nok -A
+	$(LDLIBPTH) $(RUN) perl -Ilib utils/perlbug -nok -s '(UNINSTALLED)' -F perl.nok -A
 
 .PHONY: clist hlist shlist pllist
 
