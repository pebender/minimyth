diff -Naur alsa-driver-1.0.11rc3-old/alsa-kernel/pci/hda/hda_codec.c alsa-driver-1.0.11rc3-new/alsa-kernel/pci/hda/hda_codec.c
--- alsa-driver-1.0.11rc3-old/alsa-kernel/pci/hda/hda_codec.c	2006-01-16 08:34:25.000000000 -0800
+++ alsa-driver-1.0.11rc3-new/alsa-kernel/pci/hda/hda_codec.c	2006-02-14 08:21:31.000000000 -0800
@@ -1891,6 +1891,7 @@
 	if (mout->hp_nid)
 		/* headphone out will just decode front left/right (stereo) */
 		snd_hda_codec_setup_stream(codec, mout->hp_nid, stream_tag, 0, format);
+#if 0
 	/* surrounds */
 	for (i = 1; i < mout->num_dacs; i++) {
 		if (chs >= (i + 1) * 2) /* independent out */
@@ -1900,6 +1901,7 @@
 			snd_hda_codec_setup_stream(codec, nids[i], stream_tag, 0,
 						   format);
 	}
+#endif
 	return 0;
 }
 
@@ -1911,10 +1913,14 @@
 	hda_nid_t *nids = mout->dac_nids;
 	int i;
 
+#if 0
 	for (i = 0; i < mout->num_dacs; i++)
 		snd_hda_codec_setup_stream(codec, nids[i], 0, 0, 0);
+#endif
 	if (mout->hp_nid)
 		snd_hda_codec_setup_stream(codec, mout->hp_nid, 0, 0, 0);
+	snd_hda_codec_setup_stream(codec, HDA_FRONT, 0, 0, 0);
+
 	mutex_lock(&codec->spdif_mutex);
 	if (mout->dig_out_nid && mout->dig_out_used == HDA_DIG_ANALOG_DUP) {
 		snd_hda_codec_setup_stream(codec, mout->dig_out_nid, 0, 0, 0);
