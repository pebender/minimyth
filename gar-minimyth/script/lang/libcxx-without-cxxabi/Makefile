GARNAME = libcxx
GARVERSION = $(LLVM_VERSION)
CATEGORIES = lang
SOURCEPKG = llvm/llvm
LICENSE = $(GARNAME)
$(GARNAME)_LICENSE_TEXT = $(WORKSRC)/LICENSE.TXT

DESCRIPTION = 
define BLURB
endef

ifneq ($(DESTIMG),build)
DEPENDS = lang/c \
	lang/libc \
	lang/libunwind
endif

WORKSRC = $(WORKDIR)/llvm-project-$(LLVM_VERSION)/$(GARNAME)

ifneq ($(DESTIMG),build)
CONFIGURE_SCRIPTS = $(WORKSRC)/cmake
BUILD_SCRIPTS = $(WORKSRC)/cmake
INSTALL_SCRIPTS = $(WORKSRC)/cmake
endif

CONFIGURE_ARGS = \
	-DCMAKE_SYSROOT="$(DESTDIR)" \
	-DCMAKE_INSTALL_PREFIX="$(DESTDIR)$(prefix)" \
	-DCMAKE_VERBOSE_MAKEFILE=ON \
	-DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY \
	-DCMAKE_C_COMPILER="$(CC)" \
	-DCMAKE_CXX_COMPILER="$(CXX)" \
	-DCMAKE_LINKER="$(LD)" \
	-DCMAKE_C_COMPILER_TARGET="$(GARHOST)" \
	-DCMAKE_CXX_COMPILER_TARGET="$(GARHOST)" \
	-DCMAKE_C_FLAGS="$(CFLAGS)" \
	-DCMAKE_CXX_FLAGS="$(CXXFLAGS)" \
	-DCMAKE_EXE_LINKER_FLAGS="$(LDFLAGS)" \
	-DCMAKE_SHARED_LINKER_FLAGS="$(LDFLAGS)" \
	-DCMAKE_AR="$(AR)" \
	-DCMAKE_NM="$(NM)" \
	-DCMAKE_OBJCOPY="$(OBJCOPY)" \
	-DCMAKE_OBJDUMP="$(OBJDUMP)" \
	-DCMAKE_RANLIB="$(RANLIB)" \
	-DCMAKE_STRIP="$(STRIP)" \
	-DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=OFF \
	-DLIBCXX_CXX_ABI="none" \
	-DLIBCXX_USE_COMPILER_RT=ON \
	-DLIBCXX_INCLUDE_BENCHMARKS=OFF
ifeq ($(DESTIMG),build)
CONFIGURE_ARGS += \
	-DPYTHON_EXECUTABLE="$(clang_build_DESTDIR)$(clang_build_bindir)/python"
else
CONFIGURE_ARGS += \
	-DCMAKE_CROSSCOMPILING=ON \
	-DCMAKE_SYSTEM_NAME="Linux" \
	-DPYTHON_EXECUTABLE="$(build_DESTDIR)$(build_bindir)/python" \
	-DxLIBCXX_HAS_MUSL_LIBC=ON
endif

build_CPPFLAGS = \
	-idirafter /usr/include
main_CPPFLAGS =

GAR_EXTRA_CONF += lang/lang/toolchain.mk
GAR_EXTRA_CONF += devel/cmake/package-api.mk
GAR_EXTRA_CONF += llvm/llvm/package-api.mk
include ../../gar.mk
