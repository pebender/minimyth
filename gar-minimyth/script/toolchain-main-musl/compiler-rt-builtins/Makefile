GARNAME = compiler-rt
GARVERSION = $(LLVM_VERSION)
CATEGORIES = toolchain-main-musl
SOURCEPKG = toolchain/llvm
LICENSE = $(GARNAME)
$(GARNAME)_LICENSE_TEXT = $(WORKSRC)/LICENSE.TXT

DESCRIPTION = 
define BLURB
endef

ifndef ($(DESTIMG),build)
xDEPENDS = \
	toolchain-main-musl/musl-static
BUILDEPS =
endif

ifndef ($(DESTIMG),build)
CONFIGURE_SCRIPTS = $(WORKSRC)/cmake
BUILD_SCRIPTS = $(WORKSRC)/cmake
INSTALL_SCRIPTS = $(WORKSRC)/cmake
endif

CONFIGURE_ARGS = $(LLVM_CONFIGURE_ARGS) \
	-DCMAKE_TRY_COMPILE_TARGET_TYPE=STATIC_LIBRARY \
	-DCMAKE_INSTALL_PREFIX="$(build_DESTDIR)$(build_libdir)/clang/$(LLVM_VERSION)" \
	$(if $(filter i386,$(GARCH_FAMILY)),-DCMAKE_SIZEOF_VOID_P=4) \
	$(if $(filter x86_64,$(GARCH_FAMILY)),-DCMAKE_SIZEOF_VOID_P=8) \
	-DCOMPILER_RT_DEFAULT_TARGET_TRIPLE="$(GARHOST)" \
	-DCOMPILER_RT_HAS_LIBC=ON \
	-DCOMPILER_RT_USE_LIBCXX=ON \
	-DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
	-DCOMPILER_RT_BUILD_CRT=ON \
	-DCOMPILER_RT_BUILD_BUILTINS=ON \
	-DCOMPILER_RT_BUILD_SANITIZERS=OFF \
	-DCOMPILER_RT_BUILD_XRAY=OFF \
	-DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
	-DCOMPILER_RT_BUILD_PROFILE=ON \
	-DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=OFF \
	-DCOMPILER_RT_HAS_ATOMIC_KEYWORD=ON \
	-DCOMPILER_RT_CAN_EXECUTE_TESTS=OFF

GAR_EXTRA_CONF += toolchain-main-musl/toolchain-main-musl/toolchain-clang.mk
GAR_EXTRA_CONF += devel/cmake/package-api.mk
GAR_EXTRA_CONF += toolchain/llvm/package-api.mk
include ../../gar.mk
