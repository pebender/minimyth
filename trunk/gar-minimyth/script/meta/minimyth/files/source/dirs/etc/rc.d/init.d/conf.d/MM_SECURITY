################################################################################
# MM_SECURITY configuration variables and files.
################################################################################
conf_clean_MM_SECURITY() {
    /bin/rm -rf /tmp/init.conf.security

    return 0
}

conf_check_MM_SECURITY() {

    if /usr/bin/test ! -z "${MM_SECURITY_ENABLED}"         && \
       /usr/bin/test !    "${MM_SECURITY_ENABLED}" = "yes" && \
       /usr/bin/test !    "${MM_SECURITY_ENABLED}" = "no"  ; then
        mm_message_output err "error: MM_SECURITY_ENABLED='${MM_SECURITY_ENABLED}' is not valid."
    fi
    if /usr/bin/test ! -z "${MM_SECRRITY_FETCH_CREDENTIALS_CIFS}"         && \
       /usr/bin/test !    "${MM_SECURITY_FETCH_CREDENTIALS_CIFS}" = "yes" && \
       /usr/bin/test !    "${MM_SECURITY_FETCH_CREDENTIALS_CIFS}" = "no" ; then
        mm_message_output err "error: MM_SECURITY_FETCH_CREDENTIALS_CIFS='${MM_SECURITY_FETCH_CREDENTIALS_CIFS}' is not valid."
    fi
    if /usr/bin/test ! -z "${MM_SECURITY_FETCH_CA_BUNDLE_CRT}"         && \
       /usr/bin/test !    "${MM_SECURITY_FETCH_CA_BUNDLE_CRT}" = "yes" && \
       /usr/bin/test !    "${MM_SECURITY_FETCH_CA_BUNDLE_CRT}" = "no"  ; then
        mm_message_output err "error: MM_SECURITY_FETCH_CA_BUNDLE_CRT='${MM_SECURITY_FETCH_CA_BUNDLE_CRT}' is not valid."
    fi

    return 0
}

conf_default_MM_SECURITY() {
    if /usr/bin/test -e '/tmp/init.conf.security/conf_default_MM_SECURITY' ; then
        return 0
    fi

    if /usr/bin/test -z "${MM_SECURITY_ENABLED}" ; then
        MM_SECURITY_ENABLED='no'
    fi
    if /usr/bin/test -z "${MM_SECURITY_USER_MINIMYTH_UID}" ; then
        MM_SECURITY_USER_MINIMYTH_UID='1000'
    fi
    if /usr/bin/test -z "${MM_SECURITY_USER_MINIMYTH_GID}" ; then
        MM_SECURITY_USER_MINIMYTH_GID='1000'
    fi
    if /usr/bin/test -z "${MM_SECURITY_FETCH_CREDENTIALS_CIFS}" ; then
        MM_SECURITY_FETCH_CREDENTIALS_CIFS='no'
    fi
    if /usr/bin/test -z "${MM_SECURITY_FETCH_CA_BUNDLE_CRT}" ; then
        MM_SECURITY_FETCH_CA_BUNDLE_CRT='no'
    fi

    /bin/mkdir -p '/tmp/init.conf.security'
    /bin/touch    '/tmp/init.conf.security/conf_default_MM_SECURITY'

    return 0
}

conf_write_MM_SECURITY() {
    local conf_file=$1

    conf_variable_write "${conf_file}" MM_SECURITY_ENABLED                "${MM_SECURITY_ENABLED}"
    conf_variable_write "${conf_file}" MM_SECURITY_USER_MINIMYTH_UID      "${MM_SECURITY_USER_MINIMYTH_UID}"
    conf_variable_write "${conf_file}" MM_SECURITY_USER_MINIMYTH_GID      "${MM_SECURITY_USER_MINIMYTH_GID}"
    conf_variable_write "${conf_file}" MM_SECURITY_FETCH_CREDENTIALS_CIFS "${MM_SECURITY_FETCH_CREDENTIALS_CIFS}"
    conf_variable_write "${conf_file}" MM_SECURITY_FETCH_CA_BUNDLE_CRT    "${MM_SECURITY_FETCH_CA_BUNDLE_CRT}"

    return 0
}

conf_fetch_MM_SECURITY() {

    if /usr/bin/test "${MM_SECURITY_FETCH_CA_BUNDLE_CRT}" = "yes" ; then
        /bin/mkdir -p /etc/ssl/certs
        /bin/rm -f /etc/ssl/certs/ca-bundle.crt
        mm_confro_get /ca-bundle.crt /etc/ssl/certs/ca-bundle.crt
        if /usr/bin/test ! -e /etc/ssl/certs/ca-bundle.crt ; then
            mm_message_output err "error: failed to fetch 'ca-bundle.crt' file."
        fi
    fi

    if /usr/bin/test "${MM_SECURITY_FETCH_CREDENTIALS_CIFS}" = "yes" ; then
        /bin/mkdir -p /etc/cifs
        /bin/rm -f /etc/cifs/credentials_cifs
        mm_confro_get /credentials_cifs /etc/cifs/credentials_cifs
        if /usr/bin/test ! -e /etc/cifs/credentials_cifs ; then
            mm_message_output err "error: failed to fetch 'credentials_cifs' file."
        fi
    fi

    return 0
}
