# For disks, create device symbolic links, create/delete mount points and mount/unmount devices.
SUBSYSTEM!="block"                                                            , GOTO="end"
KERNEL=="hd[a-z]*"                                                            , GOTO="begin"
KERNEL=="sd[a-z]*"                                                            , GOTO="begin"
KERNEL=="sr[0-9]*"                                                            , GOTO="begin"
GOTO="end"
LABEL="begin"
  IMPORT{program}="/lib/udev/cdrom_id --export $tempnode"
  IMPORT{program}="/lib/udev/vol_id   --export $tempnode"

  # For CDROMs and DVDs, create device symbolic link and create/delete mount points.
  ENV{ID_CDROM}!="?*"                                                         , GOTO="end-cdrom"
    # Take care of permissions.
    OWNER="root", GROUP="cdrom", MODE="0666"
    # Take care of DVDs mount points.
    ENV{ID_CDROM_DVD}!="?*"                                                   , GOTO="end-cdrom-dvd"
      ACTION!="add"                                                           , GOTO="end-cdrom-dvd-add"
        SYMLINK+="dvd dvd-%k"
        SUBSYSTEMS=="ide",RUN+="/usr/sbin/hdparm -d1 /dev/%k"
        RUN+="/lib/udev/mm_mount add /dev/%k 0 /media/dvd $env{ID_FS_TYPE}"
      LABEL="end-cdrom-dvd-add"
      ACTION!="remove"                                                        , GOTO="end-cdrom-dvd-remove"
        RUN+="/lib/udev/mm_mount remove /dev/%k 0 /media/dvd $env{ID_FS_TYPE}"
      LABEL="end-cdrom-dvd-remove"
    LABEL="end-cdrom-dvd"
    # Take care of CDROM mount points.
    ACTION!="add"                                                             , GOTO="end-cdrom-add"
      SYMLINK+="cdrom cdrom-%k"
      RUN+="/lib/udev/mm_mount add /dev/%k 0 /media/cdrom $env{ID_FS_TYPE}"
      GOTO="end"
    LABEL="end-cdrom-add"
    ACTION!="remove"                                                          , GOTO="end-cdrom-remove"
      RUN+="/lib/udev/mm_mount remove /dev/%k 0 /media/cdrom $env{ID_FS_TYPE}"
      GOTO="end"
    LABEL="end-cdrom-remove"
    GOTO="end"
  LABEL="end-cdrom"

  # For the MiniMyth boot directory, create device symbolic link, create/delete mount point and and mount/unmount.
  ENV{ID_FS_LABEL_SAFE}!="minimyth"                                           , GOTO="end-minimyth_boot_directory"
    ACTION!="add"                                                             , GOTO="end-minimyth_boot_directory-add"
      SYMLINK+="disk/by-label/$env{ID_FS_LABEL_SAFE}"
      RUN+="/lib/udev/mm_mount add /dev/%k 1 /minimyth $env{ID_FS_TYPE}"
      GOTO="end"
    LABEL="end-minimyth_boot_directory-add"
    ACTION!="remove"                                                          , GOTO="end-minimyth_boot_directory-remove"
      RUN+="/lib/udev/mm_mount remove /dev/%k 1 /minimyth $env{ID_FS_TYPE}"   , GOTO="end"
    LABEL="end-minimyth_boot_directory-remove"
    GOTO="end"
  LABEL="end-minimyth_boot_directory"

  # For USB disks with labels, create device symbolic links, create/delete mount points and mount/unmount.
  ENV{ID_FS_LABEL_SAFE}==""                                                   , GOTO="end-usb"
  ATTRS{removable}!="1"                                                       , GOTO="end-usb"
  ATTRS{size}=="0"                                                            , GOTO="end-usb"
    ACTION!="add"                                                             , GOTO="end-usb-add"
      SYMLINK+="disk/by-label/$env{ID_FS_LABEL_SAFE}"
      RUN+="/lib/udev/mm_mount add /dev/%k 1 /media/$env{ID_FS_LABEL_SAFE} $env{ID_FS_TYPE}"
      GOTO="end"
    LABEL="end-usb-add"
    ACTION!="remove"                                                          , GOTO="end-usb-remove"
      RUN+="/lib/udev/mm_mount remove /dev/%k 1 /media/$env{ID_FS_LABEL_SAFE} $env{ID_FS_TYPE}"
      GOTO="end"
    LABEL="end-usb-remove"
    GOTO="end"
  LABEL="end-usb"
LABEL="end"
