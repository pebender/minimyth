#!/bin/sh
################################################################################
# This command maps a local command to a remote command and runs the command on
# remote host using SSH. The local command must be a symbolic link to this shell
# script (mm_ssh_remote_command_execute). SSH runs on computer "${MM_SSH_HOST}"
# as user "${MM_SSH_USER}" who is identified using '/etc/dropbear/id_rsa'. If
# the prefix of the local command's full path and the remote command's full
# path are different, then the prefix can be remapped using
# "${MM_SSH_PREFIX_MAP}".
################################################################################

. /etc/rc.d/functions

if /usr/bin/test ! -e /etc/dropbear/id_rsa ; then
    /usr/bin/logger -t minimyth -p "local0.error" \
        "cannot execute remote command '$0'. no SSH private key file present."
    exit 1
fi

# Determine command's absolute path.
command="$0"
command_first=`/bin/echo ${command} | /bin/sed -e 's%^\(.\).*$%\1%'`
if   /usr/bin/test "${command_first}" = "/" ; then
    command="${command}"
elif /usr/bin/test "${command_first}" = "." ; then
    command="${PWD}/${command}"
else
    command=`/usr/bin/which ${command} 2> /dev/null`
fi
if /usr/bin/test -z "${command}" ; then
    /usr/bin/logger -t minimyth -p "local0.error" \
        "cannot execute remote command '$0'. local command not found."
    exit 1
fi

# Clean up command's absolute path. 
command_base=`/usr/bin/basename "${command}"`
command_dir=`/usr/bin/dirname "${command}"`
command_dir=`cd "${command_dir}" ; pwd`
command="${command_dir}/${command_base}"
if /usr/bin/test ! -e "${command}" ; then
    /usr/bin/logger -t minimyth -p "local0.error" \
        "cannot execute remote command '$0'. local command not found."
    exit 1
fi

# Convert local command to remote command.
if /usr/bin/test -n "${MM_SSH_PREFIX_MAP}" ; then
    prefix_local=` /bin/echo ${MM_SSH_PREFIX_MAP} | /usr/bin/cut -d ':' -f 1`
    prefix_remote=`/bin/echo ${MM_SSH_PREFIX_MAP} | /usr/bin/cut -d ':' -f 2`
    command=`/bin/echo "${command}" | /bin/sed -e "s%^${prefix_local}%${prefix_remote}%"`
fi

# Make sure each argument is quoted appropriately.
command="'${command}'"
arglist=
for arg in "$@" ; do
    if /usr/bin/test -z "${arglist}" ; then
        arglist="'${arg}'"
    else
        arglist="${arglist} '${arg}'"
    fi
done

# Run command with arguments on remote machine using ssh.
/usr/bin/logger -t minimyth -p "local0.info" \
   "mm_ssh_remote_command_execute: executing remote command: ${command} ${arglist}"
/usr/bin/dbclient -y -i /etc/dropbear/id_rsa ${MM_SSH_USER}@${MM_SSH_HOST} ${command} ${arglist} 2> /dev/null
if /usr/bin/test $? -ne 0 ; then
    /usr/bin/logger -t minimyth -p "local0.error" \
        "mm_ssh_command_execute: remote command execution failed: ${command} ${arglist}."
   exit 1
fi

exit 0
