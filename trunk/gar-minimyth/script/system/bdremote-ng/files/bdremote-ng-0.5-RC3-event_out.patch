diff -Naur bdremote-ng-0.5-old/build/CMakeLists.txt bdremote-ng-0.5-new/build/CMakeLists.txt
--- bdremote-ng-0.5-old/build/CMakeLists.txt	2009-10-25 04:35:31.000000000 -0700
+++ bdremote-ng-0.5-new/build/CMakeLists.txt	2009-12-13 18:06:28.000000000 -0800
@@ -102,6 +102,7 @@
 ${PREFIX}/lirc_srv.h
 ${PREFIX}/q.h
 ${PREFIX}/l.h
+${PREFIX}/event_out.h
 )
 
 SET(GENERIC_SOURCES
@@ -114,6 +115,7 @@
 ${PREFIX}/lirc_util.c
 ${PREFIX}/q.c
 ${PREFIX}/l.c
+${PREFIX}/event_out.c
 )
 
 include_directories (${PREFIX})
diff -Naur bdremote-ng-0.5-old/src/bdrcfg.c bdremote-ng-0.5-new/src/bdrcfg.c
--- bdremote-ng-0.5-old/src/bdrcfg.c	2009-12-11 15:21:44.000000000 -0800
+++ bdremote-ng-0.5-new/src/bdrcfg.c	2009-12-13 18:06:28.000000000 -0800
@@ -56,6 +56,7 @@
   FREEVAL(_config->release);
   _config->lirc_namespace = 0;
   _config->release     = NULL;
+  _config->event_out = 0;
   FREEVAL(_config->user);
   _config->user        = NULL;
   FREEVAL(_config->group);
@@ -153,6 +154,7 @@
       fprintf(printStream, " - release     : %s.\n", _config->release);
     }
   fprintf(printStream, " - LIRC names  : %d.\n", _config->lirc_namespace);
+  fprintf(printStream, " - event output: %d.\n", _config->event_out);
   fprintf(printStream, " - debug       : %d.\n", _config->debug);
   if (_config->debug)
     {
diff -Naur bdremote-ng-0.5-old/src/bdrcfg.h bdremote-ng-0.5-new/src/bdrcfg.h
--- bdremote-ng-0.5-old/src/bdrcfg.h	2009-12-11 15:16:44.000000000 -0800
+++ bdremote-ng-0.5-new/src/bdrcfg.h	2009-12-13 18:06:28.000000000 -0800
@@ -52,6 +52,8 @@
    char* release;
    /** Enable/disable use of LIRC namespace. */
    int lirc_namespace;
+   /** Enable/disable use of uinput based event output device. */
+   int event_out;
    /** Enable/disable printing of debug messages. */
    int debug;
    /** Indicates if the BT address of the interface to use was set. */
diff -Naur bdremote-ng-0.5-old/src/bdremoteng.c bdremote-ng-0.5-new/src/bdremoteng.c
--- bdremote-ng-0.5-old/src/bdremoteng.c	2009-12-11 16:06:16.000000000 -0800
+++ bdremote-ng-0.5-new/src/bdremoteng.c	2009-12-13 18:06:28.000000000 -0800
@@ -96,7 +96,7 @@
    memset(&config, 0, sizeof(config));
    setDefaults(&config);
 
-   while ((opt=getopt(argc,argv,"+p:t:a:b:i:r:e:R:u:g:f:ndhl"))!=-1)
+   while ((opt=getopt(argc,argv,"+p:t:a:b:i:r:e:R:u:g:f:ndhlE"))!=-1)
       {
          switch(opt)
             {
@@ -139,6 +139,9 @@
             case 'l':
                config.lirc_namespace = 1;
                break;
+            case 'E':
+               config.event_out = 1;
+               break;
             case 'f':
                setLogFilename(&config, optarg);
                break;
@@ -242,6 +245,12 @@
    sigaction(SIGCHLD, &sa, NULL);
    sigaction(SIGPIPE, &sa, NULL);
 
+   /* Initialize output event device. */
+   if (config.event_out)
+   {
+       event_out_init(&config);
+   }
+
    /* Start LIRC thread. */
    startLircThread(&ldata);
 
@@ -259,6 +268,8 @@
    DestroyCaptureData(&cdata);
    destroyLircData(&ldata);
 
+   event_out_exit(&config);
+
    destroyConfig(&config);
 
    closeLogFile();
@@ -300,6 +311,7 @@
           "\t-e <num>             Wait <num> ms before repeating a key.\n"
           "\t-R <suffix>          Auto-generate release events with appended <suffix>.\n"
           "\t-l                   Follow LIRC namespace for the key names.\n"
+          "\t-E                   Make output available through a Linux event device.\n"
           "\t-u <username>        Change UID to the UID of this user.\n"
           "\t-g <group>           Change GID to the GID of this group.\n"
           "\t-f <filename>        Write log to <filename>.\n"
diff -Naur bdremote-ng-0.5-old/src/event_out.c bdremote-ng-0.5-new/src/event_out.c
--- bdremote-ng-0.5-old/src/event_out.c	1969-12-31 16:00:00.000000000 -0800
+++ bdremote-ng-0.5-new/src/event_out.c	2009-12-13 18:08:07.000000000 -0800
@@ -0,0 +1,106 @@
+#include <fcntl.h>
+#include <stdint.h>
+#include <string.h>
+#include <sys/types.h>
+
+#include "globaldefs.h"
+#include "keydef.h"
+#include "event_out.h"
+
+#ifdef __linux__
+#include <linux/input.h>
+#include <linux/uinput.h>
+#endif
+
+static int event_out_fd = -1;
+
+void event_out_send(const configuration *_config, int _event_code, int _event_value)
+{
+#ifdef __linux__
+    struct input_event event;
+
+    if (event_out_fd != -1)
+    {
+        memset(&event, 0, sizeof(event));
+        event.type = EV_KEY;
+        event.code = _event_code;
+        event.value = _event_value;
+        if (write(event_out_fd, &event, sizeof(event)) != sizeof(event))
+        {
+            ;
+        }
+    }
+#endif
+}
+
+void event_out_exit(const configuration *_config)
+{
+#ifdef __linux__
+    if(event_out_fd != -1)
+    {
+        ioctl(event_out_fd, UI_DEV_DESTROY);
+        close(event_out_fd);
+        event_out_fd = -1;
+    }
+#endif
+}
+
+void event_out_init(const configuration *_config)
+{
+#ifdef __linux__
+    const char *uinput_devname[] =
+    {
+        "/dev/uinput",
+        "/dev/input/uinput",
+        "/dev/misc/uinput",
+        NULL
+    };
+    int i;
+    struct uinput_user_dev dev;
+
+    event_out_fd = -1;
+    for (i = 0 ; (event_out_fd == -1) && (uinput_devname[i] != NULL) ; i++)
+    {
+        event_out_fd = open(uinput_devname[i], O_WRONLY | O_NDELAY);
+    }
+    if (event_out_fd == -1)
+    {
+        return;
+    }
+
+    memset(&dev, 0, sizeof(dev));
+    strncpy(dev.name, "bdremoteng", sizeof(dev.name));
+    dev.name[sizeof(dev.name) - 1] = '\0';
+
+    if (write(event_out_fd, &dev, sizeof(dev)) != sizeof(dev))
+    {
+        close(event_out_fd);
+        event_out_fd = -1;
+        return;
+    }
+
+    if (ioctl(event_out_fd, UI_SET_EVBIT, EV_KEY) != 0)
+    {
+        close(event_out_fd);
+        event_out_fd = -1;
+        return;
+    }
+
+    for(i = 0 ; i < ps3remote_num_keys ; i++)
+    {
+        if(ioctl(event_out_fd, UI_SET_KEYBIT, ps3remote_keys[i].event_code) != 0)
+        {
+            close(event_out_fd);
+            event_out_fd = -1;
+            return;
+        }
+    }
+
+    if(ioctl(event_out_fd, UI_DEV_CREATE) != 0)
+    {
+        close(event_out_fd);
+        event_out_fd = -1;
+        return;
+    }
+#endif
+}
diff -Naur bdremote-ng-0.5-old/src/event_out.h bdremote-ng-0.5-new/src/event_out.h
--- bdremote-ng-0.5-old/src/event_out.h	1969-12-31 16:00:00.000000000 -0800
+++ bdremote-ng-0.5-new/src/event_out.h	2009-12-13 18:06:28.000000000 -0800
@@ -0,0 +1,10 @@
+#ifndef EVENT_OUT_H
+#define EVENT_OUT_H
+
+#include "bdrcfg.h"
+
+void event_out_send(const configuration *_config, int _code, int _value);
+void event_out_exit(const configuration *_config);
+void event_out_init(const configuration *_config);
+
+#endif
diff -Naur bdremote-ng-0.5-old/src/keydef.h bdremote-ng-0.5-new/src/keydef.h
--- bdremote-ng-0.5-old/src/keydef.h	2009-11-19 22:25:20.000000000 -0800
+++ bdremote-ng-0.5-new/src/keydef.h	2009-12-13 18:06:28.000000000 -0800
@@ -38,19 +38,75 @@
 #ifndef BD_KEYDEF_H
 #define BD_KEYDEF_H
 
+#include <stdint.h>
+
 /** Key information. */
 struct key_info
 {
   /** The original name. */
-  char* name_orig;
+  const char* name_orig;
   /** The LIRC namespace name. */
-  char* name_lirc;
+  const char* name_lirc;
+  /** The Linux key event code. */
+  unsigned int event_code;
   /** The code. */
   unsigned int code;
   /** The mask. */
   uint32_t mask;
 };
 
+#define KEY_ENTER		28
+#define KEY_POWER		116
+#define KEY_SELECT		0x161
+#define BTN_C			0x132
+#define BTN_Z			0x135
+#define BTN_START		0x13b
+#define KEY_UP			103
+#define KEY_RIGHT		106
+#define KEY_DOWN		108
+#define KEY_LEFT		105
+#define BTN_B			0x131
+#define BTN_Y			0x134
+#define BTN_A			0x130
+#define BTN_X			0x133
+#define KEY_OPTION		0x165
+#define KEY_BACK		158
+#define KEY_CLEAR		0x163
+#define KEY_ZOOM		0x174
+#define KEY_1			2
+#define KEY_2			3
+#define KEY_3			4
+#define KEY_4			5
+#define KEY_5			6
+#define KEY_6			7
+#define KEY_7			8
+#define KEY_8			9
+#define KEY_9			10
+#define KEY_0			11
+#define KEY_MEDIA_REPEAT	0x1b7
+//#define KEY_CLEAR		0x163
+#define KEY_EJECTCD		161
+#define KEY_MENU		139
+#define KEY_TIME		0x167
+#define KEY_PREVIOUS		0x19c
+#define KEY_NEXT		0x197
+#define KEY_PLAY		207
+#define KEY_REWIND		168
+#define KEY_FORWARD		159
+#define KEY_STOP		128
+#define KEY_PAUSE		119
+#define KEY_CONTEXT_MENU	0x1b6
+#define KEY_FRAMEBACK		0x1b4
+#define KEY_FRAMEFORWARD	0x1b5
+#define KEY_SUBTITLE		0x172
+#define KEY_AUDIO		0x188
+#define KEY_ANGLE		0x173
+#define KEY_INFO		0x166
+#define KEY_BLUE		0x191
+#define KEY_RED			0x18e
+#define KEY_GREEN		0x18f
+#define KEY_YELLOW		0x190
+
 /** The code for a key release. */
 #define ps3remote_keyup 0xFF
 /** Undefined key. */
@@ -61,59 +117,59 @@
 #define ps3remote_num_masked 18
 
 /** Array of keys. */
-struct key_info ps3remote_keys[] =
+static struct key_info ps3remote_keys[] =
   {
-    {"enter\0"   , "KEY_ENTER\0"       , 0x0b, 0x080000},
-    {"ps\0"      , "KEY_POWER\0"       , 0x43, 0x010000},
-    {"select\0"  , "KEY_SELECT\0"      , 0x50, 0x000001},
-    {"l3\0"      , "BTN_C\0"           , 0x51, 0x000002},
-    {"r3\0"      , "BTN_Z\0"           , 0x52, 0x000004},
-    {"start\0"   , "BTN_START\0"       , 0x53, 0x000008},
-    {"up\0"      , "KEY_UP\0"          , 0x54, 0x000010},
-    {"right\0"   , "KEY_RIGHT\0"       , 0x55, 0x000020},
-    {"down\0"    , "KEY_DOWN\0"        , 0x56, 0x000040},
-    {"left\0"    , "KEY_LEFT\0"        , 0x57, 0x000080},
-    {"l2\0"      , "BTN_B\0"           , 0x58, 0x000100},
-    {"r2\0"      , "BTN_Y\0"           , 0x59, 0x000200},
-    {"l1\0"      , "BTN_A\0"           , 0x5a, 0x000400},
-    {"r1\0"      , "BTN_X\0"           , 0x5b, 0x000800},
-    {"triangle\0", "KEY_OPTION\0"      , 0x5c, 0x001000},
-    {"circle\0"  , "KEY_BACK\0"        , 0x5d, 0x002000},
-    {"cross\0"   , "KEY_CLEAR\0"       , 0x5e, 0x004000},
-    {"square\0"  , "KEY_ZOOM\0"        , 0x5f, 0x008000},
-    {"num1\0"    , "KEY_1\0"           , 0x00, 0x000000},
-    {"num2\0"    , "KEY_2\0"           , 0x01, 0x000000},
-    {"num3\0"    , "KEY_3\0"           , 0x02, 0x000000},
-    {"num4\0"    , "KEY_4\0"           , 0x03, 0x000000},
-    {"num5\0"    , "KEY_5\0"           , 0x04, 0x000000},
-    {"num6\0"    , "KEY_6\0"           , 0x05, 0x000000},
-    {"num7\0"    , "KEY_7\0"           , 0x06, 0x000000},
-    {"num8\0"    , "KEY_8\0"           , 0x07, 0x000000},
-    {"num9\0"    , "KEY_9\0"           , 0x08, 0x000000},
-    {"num0\0"    , "KEY_0\0"           , 0x09, 0x000000},
-    {"return\0"  , "KEY_MEDIA_REPEAT\0", 0x0e, 0x000000},
-    {"clear\0"   , "KEY_CLEAR\0"       , 0x0f, 0x000000},
-    {"eject\0"   , "KEY_EJECTCD\0"     , 0x16, 0x000000},
-    {"topmenu\0" , "KEY_MENU\0"        , 0x1a, 0x000000},
-    {"time\0"    , "KEY_TIME\0"        , 0x28, 0x000000},
-    {"prev\0"    , "KEY_PREVIOUS\0"    , 0x30, 0x000000},
-    {"next\0"    , "KEY_NEXT\0"        , 0x31, 0x000000},
-    {"play\0"    , "KEY_PLAY\0"        , 0x32, 0x000000},
-    {"scanrev\0" , "KEY_REWIND\0"      , 0x33, 0x000000},
-    {"scanfwd\0" , "KEY_FORWARD\0"     , 0x34, 0x000000},
-    {"stop\0"    , "KEY_STOP\0"        , 0x38, 0x000000},
-    {"pause\0"   , "KEY_PAUSE\0"       , 0x39, 0x000000},
-    {"popup\0"   , "KEY_CONTEXT_MENU\0", 0x40, 0x000000},
-    {"steprev\0" , "KEY_FRAMEBACK\0"   , 0x60, 0x000000},
-    {"stepfwd\0" , "KEY_FRAMEFORWARD\0", 0x61, 0x000000},
-    {"subtitle\0", "KEY_SUBTITLE\0"    , 0x63, 0x000000},
-    {"audio\0"   , "KEY_AUDIO\0"       , 0x64, 0x000000},
-    {"angle\0"   , "KEY_ANGLE\0"       , 0x65, 0x000000},
-    {"display\0" , "KEY_INFO\0"        , 0x70, 0x000000},
-    {"blue\0"    , "KEY_BLUE\0"        , 0x80, 0x000000},
-    {"red\0"     , "KEY_RED\0"         , 0x81, 0x000000},
-    {"green\0"   , "KEY_GREEN\0"       , 0x82, 0x000000},
-    {"yellow\0"  , "KEY_YELLOW\0"      , 0x83, 0x000000},
+    {"enter\0"   , "KEY_ENTER\0"       , KEY_ENTER       , 0x0b, 0x080000},
+    {"ps\0"      , "KEY_POWER\0"       , KEY_POWER       , 0x43, 0x010000},
+    {"select\0"  , "KEY_SELECT\0"      , KEY_SELECT      , 0x50, 0x000001},
+    {"l3\0"      , "BTN_C\0"           , BTN_C           , 0x51, 0x000002},
+    {"r3\0"      , "BTN_Z\0"           , BTN_Z           , 0x52, 0x000004},
+    {"start\0"   , "BTN_START\0"       , BTN_START       , 0x53, 0x000008},
+    {"up\0"      , "KEY_UP\0"          , KEY_UP          , 0x54, 0x000010},
+    {"right\0"   , "KEY_RIGHT\0"       , KEY_RIGHT       , 0x55, 0x000020},
+    {"down\0"    , "KEY_DOWN\0"        , KEY_DOWN        , 0x56, 0x000040},
+    {"left\0"    , "KEY_LEFT\0"        , KEY_LEFT        , 0x57, 0x000080},
+    {"l2\0"      , "BTN_B\0"           , BTN_B           , 0x58, 0x000100},
+    {"r2\0"      , "BTN_Y\0"           , BTN_Y           , 0x59, 0x000200},
+    {"l1\0"      , "BTN_A\0"           , BTN_A           , 0x5a, 0x000400},
+    {"r1\0"      , "BTN_X\0"           , BTN_X           , 0x5b, 0x000800},
+    {"triangle\0", "KEY_OPTION\0"      , KEY_OPTION      , 0x5c, 0x001000},
+    {"circle\0"  , "KEY_BACK\0"        , KEY_BACK        , 0x5d, 0x002000},
+    {"cross\0"   , "KEY_CLEAR\0"       , KEY_CLEAR       , 0x5e, 0x004000},
+    {"square\0"  , "KEY_ZOOM\0"        , KEY_ZOOM        , 0x5f, 0x008000},
+    {"num1\0"    , "KEY_1\0"           , KEY_1           , 0x00, 0x000000},
+    {"num2\0"    , "KEY_2\0"           , KEY_2           , 0x01, 0x000000},
+    {"num3\0"    , "KEY_3\0"           , KEY_3           , 0x02, 0x000000},
+    {"num4\0"    , "KEY_4\0"           , KEY_4           , 0x03, 0x000000},
+    {"num5\0"    , "KEY_5\0"           , KEY_5           , 0x04, 0x000000},
+    {"num6\0"    , "KEY_6\0"           , KEY_6           , 0x05, 0x000000},
+    {"num7\0"    , "KEY_7\0"           , KEY_7           , 0x06, 0x000000},
+    {"num8\0"    , "KEY_8\0"           , KEY_8           , 0x07, 0x000000},
+    {"num9\0"    , "KEY_9\0"           , KEY_9           , 0x08, 0x000000},
+    {"num0\0"    , "KEY_0\0"           , KEY_0           , 0x09, 0x000000},
+    {"return\0"  , "KEY_MEDIA_REPEAT\0", KEY_MEDIA_REPEAT, 0x0e, 0x000000},
+    {"clear\0"   , "KEY_CLEAR\0"       , KEY_CLEAR       , 0x0f, 0x000000},
+    {"eject\0"   , "KEY_EJECTCD\0"     , KEY_EJECTCD     , 0x16, 0x000000},
+    {"topmenu\0" , "KEY_MENU\0"        , KEY_MENU        , 0x1a, 0x000000},
+    {"time\0"    , "KEY_TIME\0"        , KEY_TIME        , 0x28, 0x000000},
+    {"prev\0"    , "KEY_PREVIOUS\0"    , KEY_PREVIOUS    , 0x30, 0x000000},
+    {"next\0"    , "KEY_NEXT\0"        , KEY_NEXT        , 0x31, 0x000000},
+    {"play\0"    , "KEY_PLAY\0"        , KEY_PLAY        , 0x32, 0x000000},
+    {"scanrev\0" , "KEY_REWIND\0"      , KEY_REWIND      , 0x33, 0x000000},
+    {"scanfwd\0" , "KEY_FORWARD\0"     , KEY_FORWARD     , 0x34, 0x000000},
+    {"stop\0"    , "KEY_STOP\0"        , KEY_STOP        , 0x38, 0x000000},
+    {"pause\0"   , "KEY_PAUSE\0"       , KEY_PAUSE       , 0x39, 0x000000},
+    {"popup\0"   , "KEY_CONTEXT_MENU\0", KEY_CONTEXT_MENU, 0x40, 0x000000},
+    {"steprev\0" , "KEY_FRAMEBACK\0"   , KEY_FRAMEBACK   , 0x60, 0x000000},
+    {"stepfwd\0" , "KEY_FRAMEFORWARD\0", KEY_FRAMEFORWARD, 0x61, 0x000000},
+    {"subtitle\0", "KEY_SUBTITLE\0"    , KEY_SUBTITLE    , 0x63, 0x000000},
+    {"audio\0"   , "KEY_AUDIO\0"       , KEY_AUDIO       , 0x64, 0x000000},
+    {"angle\0"   , "KEY_ANGLE\0"       , KEY_ANGLE       , 0x65, 0x000000},
+    {"display\0" , "KEY_INFO\0"        , KEY_INFO        , 0x70, 0x000000},
+    {"blue\0"    , "KEY_BLUE\0"        , KEY_BLUE        , 0x80, 0x000000},
+    {"red\0"     , "KEY_RED\0"         , KEY_RED         , 0x81, 0x000000},
+    {"green\0"   , "KEY_GREEN\0"       , KEY_GREEN       , 0x82, 0x000000},
+    {"yellow\0"  , "KEY_YELLOW\0"      , KEY_YELLOW      , 0x83, 0x000000},
   };
 
 #endif /* BD_KEYDEF_H */
diff -Naur bdremote-ng-0.5-old/src/lirc_thr.c bdremote-ng-0.5-new/src/lirc_thr.c
--- bdremote-ng-0.5-old/src/lirc_thr.c	2009-11-20 10:49:38.000000000 -0800
+++ bdremote-ng-0.5-new/src/lirc_thr.c	2009-12-13 18:06:28.000000000 -0800
@@ -33,13 +33,14 @@
   that is holding down a key on the remote.
 
 */
+#include <keydef.h>
 
 #include "lirc_srv.h"
 
 #include <globaldefs.h>
 
 #include <stdint.h>
-#include <keydef.h>
+// #include <keydef.h>
 #include <stdio.h>
 #include <assert.h>
 #include <string.h>
@@ -49,6 +50,8 @@
 #define _GNU_SOURCE
 #include <signal.h>
 
+#include "event_out.h"
+
 extern FILE* printStream;
 extern volatile sig_atomic_t __io_canceled;
 
@@ -193,6 +196,10 @@
                       name = ps3remote_keys[ks.lastKey].name_orig;
                   }
 		  broadcastToLirc(ld, name, 0 /*ks.repeat_sent*/, ps3remote_keys[ks.lastKey].code);
+                  if (ld->config->event_out)
+                  {
+                      event_out_send(ld->config, ps3remote_keys[ks.lastKey].event_code, 2);
+                  }
 		  /* Reset elapsed time.*/
 		  ks.elapsed = 0;
 		  
@@ -295,6 +302,10 @@
           name = ps3remote_keys[num].name_orig;
       }
       broadcastToLirc(_ld, name, 0, ps3remote_keys[num].code);
+      if (_ld->config->event_out)
+      {
+          event_out_send(_ld->config, ps3remote_keys[num].event_code, 1);
+      }
     }
 }
 
@@ -314,22 +325,26 @@
                    );
       if (_ks->lastKey != ps3remote_undef)
         {
-          if (_ld->config->release != NULL)
+          if (_ld->config->lirc_namespace)
+          {
+              name = ps3remote_keys[_ks->lastKey].name_lirc;
+          }
+          else
           {
-              if (_ld->config->lirc_namespace)
-              {
-                  name = ps3remote_keys[_ks->lastKey].name_lirc;
-              }
-              else
-              {
                   name = ps3remote_keys[_ks->lastKey].name_orig;
-              }
+          }
+          if (_ld->config->release != NULL)
+          {
               if ((strlen(name) + strlen(_ld->config->release)) < 100)
               {
                   sprintf(release_name, "%s%s", name, _ld->config->release);
                   broadcastToLirc(_ld, release_name, 0, _code);
               }
           }
+          if (_ld->config->event_out)
+          {
+              event_out_send(_ld->config, ps3remote_keys[_ks->lastKey].event_code, 0);
+          }
 
           _ks->keyDown      = 0;
           _ks->lastKey      = ps3remote_undef;
