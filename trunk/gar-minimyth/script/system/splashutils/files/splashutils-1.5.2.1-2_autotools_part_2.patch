diff -Naur splashutils-1.5.2.1-old/ChangeLog splashutils-1.5.2.1-new/ChangeLog
--- splashutils-1.5.2.1-old/ChangeLog	1969-12-31 16:00:00.000000000 -0800
+++ splashutils-1.5.2.1-new/ChangeLog	2007-09-23 11:01:10.000000000 -0700
@@ -0,0 +1 @@
+# Stub ChangeLog file to satisfy automake.
diff -Naur splashutils-1.5.2.1-old/configure.ac splashutils-1.5.2.1-new/configure.ac
--- splashutils-1.5.2.1-old/configure.ac	1969-12-31 16:00:00.000000000 -0800
+++ splashutils-1.5.2.1-new/configure.ac	2007-09-23 11:01:10.000000000 -0700
@@ -0,0 +1,707 @@
+################################################################################
+# autoconf file for generating the splashutils' configure file.
+#
+# Copyright (c) 2006-2007, Michal Januszewski <spock@gentoo.org>
+# Copyright (c) 2007-2007, Paul Bender <pebender@gmail.com>
+#
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+################################################################################
+
+AC_INIT([splashutils],[1.5.2.1])
+
+AC_SUBST([libfbsplash_version],[1:0:0])
+AC_SUBST([libfbsplashrender_version],[1:0:0])
+
+AM_INIT_AUTOMAKE([1.10 -Wno-portability])
+
+AC_PROG_CC
+AC_PROG_INSTALL
+AC_PROG_LIBTOOL
+AC_PROG_MKDIR_P
+AC_PROG_LN_S
+AC_PROG_SED
+
+AS_IF(
+  [test "x${BUILD_CC}" = "x" && test "x${build_alias}" != "x"],
+  [AC_CHECK_PROG([BUILD_CC], [${build_alias}-gcc], [${build_alias}-gcc])]
+)
+AS_IF(
+  [test "x${BUILD_CC}" = "x"],
+  [AC_CHECK_PROG([BUILD_CC], [gcc], [gcc])]
+)
+AS_IF(
+  [test "x${BUILD_CC}" = "x"],
+  [AC_CHECK_PROG([BUILD_CC], [cc], [cc])]
+)
+AS_IF(
+  [test "x${BUILD_CC}" = "x"],
+  [BUILD_CC="\$(CC)"]
+)
+
+AC_PREFIX_DEFAULT([/usr])
+
+AC_ARG_ENABLE([debug],
+  AS_HELP_STRING([--enable-debug], [do not strip files]),
+  [
+    AS_CASE(["${enableval}"],
+      [yes], [config_debug="yes"],
+      [no],  [config_ebug="no"],
+             [AC_MSG_ERROR([bad value '${enableval}' for --enable-debug])]
+    )
+  ],
+  [config_debug="no"]
+)
+AM_CONDITIONAL([CONFIG_DEBUG], [test "x${config_debug}" = "xyes"])
+
+AC_ARG_ENABLE([quiet],
+  AS_HELP_STRING([--disable-quiet], [do not minimize output during build]),
+  [
+    AS_CASE(["${enableval}"],
+      [yes], [config_quiet="yes"],
+      [no],  [config_quiet="no"],
+             [AC_MSG_ERROR([bad value '${enableval}' for --enable-quiet])]
+    )
+  ],
+  [config_quiet="yes"]
+)
+AM_CONDITIONAL([CONFIG_QUIET], [test "x${config_quiet}" = "xyes"])
+
+AC_ARG_ENABLE([klibc-shared],
+  AS_HELP_STRING([--enable-klibc-shared], [link to shared klibc]),
+  [
+    AS_CASE(["${enableval}"],
+        [yes], [config_klibc_shared="yes"],
+        [no],  [config_klibc_shared="no"],
+               [AC_MSG_ERROR([bad value '${enableval}' for --enable-klibc-shared])]
+    )
+  ],
+  [config_klibc_shared="no"]
+)
+AM_CONDITIONAL([CONFIG_KLIBC_SHARED], [test "x${config_klibc_shared}" = "xyes"])
+
+AC_ARG_ENABLE([deprecated],
+  AC_HELP_STRING([--enable-deprecated], [include support for deprecated features]),
+  [
+    AS_CASE(["${enableval}"],
+      [yes], [config_deprecated="yes"],
+      [no],  [config_deprecated="no"],
+             [AC_MSG_ERROR([bad value '${enableval}' for --enable-deprecated])]
+    )
+  ],
+  [config_deprecated="no"]
+)
+AM_CONDITIONAL([CONFIG_DEPRECATED], [test "x${config_deprecated}" = "xyes"])
+AS_IF(
+  [test "x${config_deprecated}" = "xyes"],
+  [AC_DEFINE([CONFIG_DEPRECATED], [1], [Define to 1 to include support for deprecated features.])]
+)
+
+AC_ARG_ENABLE([fbcondecor],
+  AC_HELP_STRING([--disable-fbcondecor], [exclude support for fbcondecor (previously called fbsplash).]),
+  [
+    AS_CASE(["${enableval}"],
+       [yes], [config_fbcondecor="yes"],
+       [no],  [config_fbcondecor="no"],
+              [AC_MSG_ERROR([bad value '${enableval}' for --enable-fbcondecor])]
+    )
+  ],
+  [config_fbcondecor="yes"]
+)
+AM_CONDITIONAL([CONFIG_FBCON_DECOR], [test "x${config_fbcondecor}" = "xyes"])
+AS_IF(
+  [test "x${config_fbcondecor}" = "xyes"],
+  [AC_DEFINE([CONFIG_FBCON_DECOR], [1], [Define to 1 to include support for fbcondecor (previously called fbsplash).])]
+)
+
+AC_ARG_ENABLE([helper],
+  AC_HELP_STRING([--disable-helper], [do not build kernel helper]),
+  [
+    AS_CASE(["${enableval}"],
+      [yes], [config_helper="yes"],
+      [no],  [config_helper="no"],
+             [AC_MSG_ERROR([bad value '${enableval}' for --enable-helper])]
+    )
+  ],
+  [config_helper="yes"]
+)
+AM_CONDITIONAL([CONFIG_HELPER], [test "x${config_helper}" = "xyes"])
+AS_IF(
+  [test "x${config_helper}" = "xyes"],
+  [AC_DEFINE([CONFIG_HELPER], [1], [Define to 1 to build kernel helper.])]
+)
+
+AC_ARG_ENABLE([misc],
+  AC_HELP_STRING([--enable-misc], [build misc programs]),
+  [
+    AS_CASE(["${enableval}"],
+      [yes], [config_misc="yes"],
+      [no],  [config_misc="no"],
+             [AC_MSG_ERROR([bad value '${enableval}' for --enable-misc])]
+    )
+  ],
+  [config_misc="no"]
+)
+AM_CONDITIONAL([CONFIG_MISC], [test "x${config_misc}" = "xyes"])
+AS_IF(
+  [test "x${config_misc}" = "xyes"],
+  [AC_DEFINE([CONFIG_MISC], [1], [Define to 1 to build misc programs.])]
+)
+
+AC_ARG_ENABLE([test],
+  AC_HELP_STRING([--enable-test], [build test programs]),
+  [
+    AS_CASE(["${enableval}"],
+       [yes], [config_test="yes"],
+       [no],  [config_test="no"],
+              [AC_MSG_ERROR([bad value '${enableval}' for --enable-test])]
+    )
+  ],
+  [config_test="no"]
+)
+AM_CONDITIONAL([CONFIG_TEST], [test "x${config_test}" = "xyes"])
+AS_IF(
+  [test "x${config_test}" = "xyes"],
+  [AC_DEFINE([CONFIG_TEST], [1], [Define to 1 to build test programs.])]
+)
+
+AC_ARG_WITH([gpm],
+  AC_HELP_STRING([--without-gpm], [exclude support for GPM]),
+  [
+    AS_CASE(["${withval}"],
+      [yes], [config_gpm="yes"],
+      [no],  [config_gpm="no"],
+             [AC_MSG_ERROR([bad value '${withval}' for --with-gpm])]
+    )
+  ],
+  [config_gpm="yes"]
+)
+AM_CONDITIONAL([CONFIG_GPM], [test "x${config_gpm}" = "xyes"])
+AS_IF(
+  [test "x${config_gpm}" = "xyes"],
+  [AC_DEFINE([CONFIG_GPM], [1], [Define to 1 to include support for GPM.])]
+)
+
+AC_ARG_WITH([mng],
+  AC_HELP_STRING([--with-mng], [include  support for MNG animations]),
+  [
+    AS_CASE(["${withval}"],
+      [yes], [config_mng="yes"],
+      [no],  [config_mng="no"],
+             [AC_MSG_ERROR([bad value '${withval}' for --with-mng])]
+    )
+  ],
+  [config_mng="no"]
+)
+AM_CONDITIONAL([CONFIG_MNG], [test "x${config_mng}" = "xyes"])
+AS_IF(
+  [test "x${config_mng}" = "xyes"],
+  [AC_DEFINE([CONFIG_MNG], [1], [Define to 1 to include support for MNG animations.])]
+)
+
+AC_ARG_WITH([png],
+  AC_HELP_STRING([--without-png], [exclude support for PNG images]),
+  [
+    AS_CASE(["${withval}"],
+      [yes], [config_png="yes"],
+      [no],  [config_png="no"],
+             [AC_MSG_ERROR([bad value '${withval}' for --with-png])]
+    )
+  ],
+  [config_png="yes"]
+)
+AM_CONDITIONAL([CONFIG_PNG], [test "x${config_png}" = "xyes"])
+AS_IF(
+  [test "x${config_png}" = "xyes"],
+  [AC_DEFINE([CONFIG_PNG], [1], [Define to 1 to include support for PNG images.])]
+)
+
+AC_ARG_WITH([ttf],
+  AC_HELP_STRING([--without-ttf], [exclude support for truetype fonts]),
+  [
+    AS_CASE(["${withval}"],
+      [yes], [config_ttf="yes"],
+      [no],  [config_ttf="no"],
+             [AC_MSG_ERROR([bad value ${withval} for --with-ttf])]
+    )
+  ],
+  [config_ttf="yes"]
+)
+AM_CONDITIONAL([CONFIG_TTF], [test "x${config_ttf}" = "xyes"])
+AS_IF(
+  [test "x${config_ttf}" = "xyes"],
+  [AC_DEFINE([CONFIG_TTF], [1], [Define to 1 to include support for truetype fonts.])]
+)
+
+AC_ARG_WITH([ttf-kernel],
+  AC_HELP_STRING([--without-ttf-kernel], [exclude support for truetype fonts in kernel helper]),
+  [
+    AS_CASE(["${withval}"],
+      [yes], [config_ttf_kernel="yes"],
+      [no],  [config_ttf_kernel="no"],
+             [AC_MSG_ERROR([bad value ${withval} for --with-ttf-kernel])]
+    )
+  ],
+  [config_ttf_kernel="yes"]
+)
+AM_CONDITIONAL([CONFIG_TTF_KERNEL], [test "x${config_ttf_kernel}" = "xyes"])
+AS_IF(
+  [test "x${config_ttf_kernel}" = "xyes"],
+  [AC_DEFINE([CONFIG_TTF_KERNEL], [1], [Define to 1 to include support for truetype fonts in kernel helper.])]
+)
+
+AC_ARG_WITH([klibc-compiler],
+  AS_HELP_STRING([--with-klibc-compiler], [compiler to use when building against klibc @<:@auto@:>@]),
+  [KLCC="${withval}"],
+  [
+    AS_IF(
+      [test "x${host_alias}" != "x${build_alias}"],
+      [AC_CHECK_PROG([KLCC], [${host_alias}-klcc], [${host_alias}-klcc])],
+      [AC_CHECK_PROG([KLCC], [klcc], [klcc])]
+    )
+    AS_IF(
+      [test "x${KLCC}" = "x"],
+      [AC_MSG_WARN([could not determine compiler to use when building against klibc.])]
+    )
+  ]
+)
+AC_SUBST([KLCC])
+
+AC_ARG_WITH([klibc-prefix],
+  AS_HELP_STRING([--with-klibc-prefix=DIR], [klibc installation directory @<:@auto@:>@]),
+  [klibc_prefix="${withval}"],
+  [
+    klibc_prefix=$("${KLCC}" -print-klibc-prefix 2> /dev/null)
+    AS_IF(
+      [test "x${klibc_prefix}" = "x"],
+      [
+        AS_IF(
+          [test -d "${DESTDIR}${libdir}/klibc"],
+          [klibc_prefix="\$(libdir)/klibc"]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${klibc_prefix}" = "x"],
+      [AC_MSG_WARN([could not determine klibc installation directory.])]
+    )
+  ]
+)
+AC_SUBST([klibc_prefix])
+
+AC_ARG_WITH([klibc-bindir],
+  AS_HELP_STRING([--with-klibc-bindir=DIR], [klibc user executables @<:@auto@:>@]),
+  [klibc_bindir="${withval}"],
+  [
+    klibc_bindir=$("${KLCC}" -print-klibc-bindir 2> /dev/null)
+    AS_IF(
+      [test "x${klibc_bindir}" = "x"],
+      [
+        AS_IF(
+          [test "x${klibc_prefix}" != "x" && test -d "${DESTDIR}${klibc_prefix}/bin"],
+          [klibc_bindir="\$(klibc_prefix)/bin"]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${klibc_bindir}" = "x"],
+      [AC_MSG_WARN([could not determine klibc user executables directory.])]
+    )
+  ]
+)
+AC_SUBST([klibc_bindir])
+
+AC_ARG_WITH([klibc-sbindir],
+  AS_HELP_STRING([--with-klibc-sbindir=DIR], [klibc system admin executables @<:@auto@:>@]),
+  [klibc_sbindir="${withval}"],
+  [
+    klibc_sbindir=$("${KLCC}" -print-klibc-sbindir 2> /dev/null)
+    AS_IF(
+      [test "x${klibc_sbindir}" = "x"],
+      [
+        AS_IF(
+          [test "x${klibc_prefix}" != "x" && test -d "${DESTDIR}${klibc_prefix}/sbin"],
+          [klibc_sbindir="\$(klibc_prefix)/sbin"]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${klibc_sbindir}" = "x"],
+      [AC_MSG_WARN([could not determine klibc system admin executables directory.])]
+    )
+  ]
+)
+AC_SUBST([klibc_sbindir])
+
+AC_ARG_WITH([klibc-libdir],
+  AS_HELP_STRING([--with-klibc-libdir=DIR], [klibc object libraries @<:@auto@:>@]),
+  [klibc_libdir="${withval}"],
+  [
+    klibc_libdir=$("${KLCC}" -print-klibc-libdir 2> /dev/null)
+    AS_IF(
+      [test "x${klibc_libdir}" = "x"],
+      [
+        AS_IF(
+          [test "x${klibc_prefix}" != "x" && test -d "${DESTDIR}${klibc_prefix}/lib"],
+          [klibc_libdir="\$(klibc_prefix)/lib"]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${klibc_libdir}" = "x"],
+      [AC_MSG_WARN([could not determine klibc object libraries directory.])]
+    )
+  ]
+)
+AC_SUBST([klibc_libdir])
+
+AC_ARG_WITH([klibc-includedir],
+  AS_HELP_STRING([--with-klibc-includedir=DIR], [klibc C header files @<:@auto@:>@]),
+  [klibc_includedir="${withval}"],
+  [
+    klibc_includedir=$("${KLCC}" -print-klibc-includedir 2> /dev/null)
+    AS_IF(
+      [test "x${klibc_includedir}" = "x"],
+      [
+        AS_IF(
+          [test "x${klibc_prefix}" != "x" && test -d "${DESTDIR}${klibc_prefix}/include"],
+          [klibc_includedir="\$(klibc_prefix)/include"]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${klibc_includedir}" = "x"],
+      [AC_MSG_WARN([could not determine klibc C header files directory.])]
+    )
+  ]
+)
+AC_SUBST([klibc_includedir])
+
+AC_ARG_WITH([freetype2-source-dir],
+  AS_HELP_STRING([--with-freetype2-source-dir=DIR], [directory containing freetype2 library source used when linking with klibc @<:@internal@:>@]),
+  [LIBFREETYPE2_SOURCE="${withval}"],
+  [LIBFREETYPE2_SOURCE="\$(abs_top_srcdir)/\$(LIBFREETYPE2_SOURCE_INTERNAL)"]
+)
+AC_SUBST([LIBFREETYPE2_SOURCE])
+
+AC_ARG_WITH([jpeg-source-dir],
+  AS_HELP_STRING([--with-jpeg-source-dir=DIR], [directory containing JPEG library source used when linking with klibc @<:@internal@:>@]),
+  [LIBJPEG_SOURCE="${withval}"],
+  [LIBJPEG_SOURCE="\$(abs_top_srcdir)/\$(LIBJPEG_SOURCE_INTERNAL)"]
+)
+AC_SUBST([LIBJPEG_SOURCE])
+
+AC_ARG_WITH([png-source-dir],
+  AS_HELP_STRING([--with-lpng-source-dir=DIR], [directory containing PNG library source used when linking with klibc @<:@internal@:>@]),
+  [LIBPNG_SOURCE="${withval}"],
+  [LIBPNG_SOURCE="\$(abs_top_srcdir)/\$(LIBPNG_SOURCE_INTERNAL)"]
+)
+AC_SUBST([LIBPNG_SOURCE])
+
+AC_ARG_WITH([zlib-source-dir],
+  AS_HELP_STRING([--with-zlib-source-dir=DIR], [directory containing ZLIB library source used when linking with klibc @<:@internal@:>@]),
+  [LIBZ_SOURCE="${withval}"],
+  [LIBZ_SOURCE="\$(abs_top_srcdir)/\$(LIBZ_SOURCE_INTERNAL)"]
+)
+AC_SUBST([LIBZ_SOURCE])
+
+AC_ARG_WITH([essential-prefix],
+  AS_HELP_STRING([--with-essential-prefix=DIR], [install essential files in ESSENTIAL_PREFIX @<:@EPREFIX==EROOT/usr ? EROOT : EPREFIX@:>@]),
+  [essential_prefix="${withval}"],
+  [essential_prefix="$(echo ${exec_prefix} | sed -e 's%/usr$%%')"]
+)
+AC_SUBST([essential_prefix])
+
+AC_ARG_WITH([essential-bindir],
+  AS_HELP_STRING([--with-essential-bindir=DIR], [essential user executables directory @<:@ESSENTIAL_PREFIX/bin@:>@]),
+  [ebindir="${withval}"],
+  [ebindir="${essential_prefix}/bin"]
+)
+AC_SUBST([ebindir])
+
+AC_ARG_WITH([essential-sbindir],
+  AS_HELP_STRING([--with-eseential-sbindir=DIR], [essential system admin executables directory @<:@ESSENTIAL_PREFIX/sbin@:>@]),
+  [esbindir="${withval}"],
+  [esbindir="${essential_prefix}/sbin"]
+)
+AC_SUBST([esbindir])
+
+AC_ARG_WITH([essential-libdir],
+  AS_HELP_STRING([--with-essential-libdir=DIR], [essential object code libaries directoy @<:@ESSENTIAL_PREFIX/lib@:>@]),
+  [elibdir="${withval}"],
+  [elibdir="${essential_prefix}/lib"]
+)
+AC_SUBST([elibdir])
+
+M_CFLFAGS=
+M_LIBS=
+AC_CHECK_HEADER(
+  [math.h],
+  [M_CFLAGS="${M_CFLAGS}"],
+  [AC_MSG_ERROR(['math.h' header file not found.])]
+)
+AC_CHECK_LIB(
+  [m], [ceilf],
+  [M_LIBS="${M_LIBS} -lm"],
+  [AC_MSG_ERROR(['libm' library not found.])]
+)
+AC_SUBST([M_CFLAGS])
+AC_SUBST([M_LIBS])
+
+RT_CFLFAGS=
+RT_LIBS=
+AC_CHECK_HEADER(
+  [time.h],
+  [RT_CFLAGS="${RT_CFLAGS}"],
+  [AC_MSG_ERROR(['time.h' header file was not found.])]
+)
+AC_CHECK_LIB([rt], [clock_gettime],
+  [RT_LIBS="${RT_LIBS} -lrt"],
+  [AC_MSG_ERROR(['librt' library was not found.])]
+)
+AC_SUBST([RT_CFLAGS])
+AC_SUBST([RT_LIBS])
+
+PTHREAD_CFLFAGS=
+PTHREAD_LIBS=
+AC_CHECK_HEADER([pthread.h],
+  [PTHREAD_CFLAGS="${PTHREAD_CFLAGS}"],
+  [AC_MSG_ERROR(['pthread.h' header file was not found.])]
+)
+AC_CHECK_LIB([pthread], [pthread_create],
+  [PTHREAD_LIBS="${PTHREAD_LIBS} -lpthread"],
+  [AC_MSG_ERROR(['libpthread' library file was not found.])]
+)
+AC_SUBST([PTHREAD_CFLAGS])
+AC_SUBST([PTHREAD_LIBS])
+
+PTHREAD_STATIC_CFLFAGS=
+PTHREAD_STATIC_LIBS=
+AC_CHECK_HEADER(
+  [pthread.h],
+  [PTHREAD_STATIC_CFLFAGS="${PTHREAD_STATIC_CFLFAGS}"],
+  [AC_MSG_ERROR(['pthread.h' header file was not found.])]
+)
+AC_CHECK_LIB([pthread], [xxpthread_create],
+  [PTHREAD_STATIC_LIBS="${PTHREAD_STATIC_LIBS} -lpthread"],
+  [
+    AC_CHECK_LIB([pthread], [pthread_create],
+      [PTHREAD_STATIC_LIBS="${PTHREAD_STATIC_LIBS} -L\$(DESTDIR)\$(libdir)/nptl -lpthread"],
+      [
+        AC_CHECK_LIB([pthread], [pthread_create],
+          [PTHREAD_STATIC_LIBS="${PTHREAD_STATIC_LIBS} -L\$(DESTDIR)\$(elibdir)/nptl -lpthread"],
+          [AC_MSG_ERROR([the required 'libpthread' static library file not found.])],
+          [-static -L${DESTDIR}${elibdir}/nptl]
+        )
+      ],
+      [-static -L${DESTDIR}${libdir}/nptl]
+    )
+  ],
+  [-static]
+)
+AC_SUBST([PTHREAD_STATIC_CFLAGS])
+AC_SUBST([PTHREAD_STATIC_LIBS])
+
+AC_ARG_VAR([JPEG_CFLAGS], [C compiler flags for JPEG library, overriding autodetection])
+AC_ARG_VAR([JPEG_LIBS], [linker flags for JPEG library, overriding autodetection])
+AS_IF(
+  [test "x${JPEG_CFLAGS}" = "x"],
+  [
+    AC_CHECK_HEADER([jpeglib.h],
+      [JPEG_CFLAGS="${JPEG_CFLAGS}"],
+      [AC_MSG_ERROR(['jpeglib.h' header file not found.])]
+    )
+  ]
+)
+AS_IF(
+  [test "x${JPEG_CFLAGS}" = "no"],
+  [JPEG_CFLAGS=""]
+)
+AS_IF(
+  [test "x${JPEG_LIBS}" = "x"],
+  [
+    AC_CHECK_LIB([jpeg], [jpeg_set_defaults],
+      [JPEG_LIBS="${JPEG_LIBS} -ljpeg"],
+      [AC_MSG_ERROR([the required 'libjpeg' library file was not found.])]
+    )
+  ]
+)
+AS_IF(
+  [test "x${JPEG_LIBS}" = "no"],
+  [JPEG_LIBS=""]
+)
+AC_SUBST([JPEG_CFLAGS])
+AC_SUBST([JPEG_LIBS])
+
+# As needed, check GPM files and set GPM compiler flags.
+AC_ARG_VAR([GPM_CFLAGS], [C compiler flags for GPM library, overriding autodetection])
+AC_ARG_VAR([GPM_LIBS],   [linker flags for GPM library, overriding autodetection])
+AS_IF(
+  [test "x${config_gpm}" = "xyes"],
+  [
+    AS_IF(
+      [test "x${GPM_CFLAGS}" = "x"],
+      [
+        AC_CHECK_HEADER(
+          [gpm.h],
+          [GPM_CFLAGS="${GPM_CFLAGS}"],
+          [AC_MSG_ERROR(['gpm.h' header file was not found.])]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${GPM_CFLAGS}" = "no"],
+      [GPM_CFLAGS=""]
+    )
+    AS_IF(
+      [test "x${GPM_LIBS}" = "x"],
+      [
+        AC_CHECK_LIB(
+          [gpm], [Gpm_Open],
+          [GPM_LIBS="${GPM_LIBS} -lgpm"],
+          [AC_MSG_ERROR(['libgpm' library file was not found.])]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${GPM_LIBS}" = "no"],
+      [GPM_LIBS=""]
+    )
+  ]
+)
+AC_SUBST([GPM_CFLAGS])
+AC_SUBST([GPM_LIBS])
+
+AC_ARG_VAR([MNG_CFLAGS], [C compiler flags for MNG library, overriding autodetection])
+AC_ARG_VAR([MNG_LIBS],   [linker flags for MNG library, overriding autodetection])
+AS_IF(
+  [test "x${config_mng}" = "xyes"],
+  [
+    AS_IF(
+      [test "x${MNG_CFLAGS}" = "x"],
+      [
+        AC_CHECK_HEADER(
+          [libmng.h],
+          [
+            MNG_CFLAGS="${MNG_CFLAGS}"
+            MNG_CFLAGS="${MNG_CFLAGS} ${JPEG_CFLAGS}"
+            MNG_CFLAGS="${MNG_CFLAGS} ${RT_CFLAGS}"
+          ],
+          [AC_MSG_ERROR(['libmng.h' header file was not found.])]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${MNG_CFLAGS}" = "xno"],
+      [MNG_CFLAGS=""]
+    )
+    AS_IF(
+      [test "x${MNG_LIBS}" = "x"],
+      [
+        AC_CHECK_LIB(
+          [mng], [mng_initialize],
+          [
+            MNG_LIBS="${MNG_LIBS} -lmng"
+            MNG_LIBS="${MNG_LIBS} ${JPEG_LIBS}"
+            MNG_LIBS="${MNG_LIBS} ${LT_LIBS}"
+            AC_CHECK_LIB([z],    [zlibVersion],    [MNG_LIBS="${MNG_LIBS} -lz"   ])
+            AC_CHECK_LIB([lcms], [cmsCloseProfile],[MNG_LIBS="${MNG_LIBS} -llcms"])
+          ],
+          [AC_MSG_ERROR(['libmng' library file was not found.])]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${MNG_LIBS}" = "xno"],
+      [MNG_LIBS=""]
+    )
+  ]
+)
+AC_SUBST([MNG_CFLAGS])
+AC_SUBST([MNG_LIBS])
+
+AC_ARG_VAR([PNG_CFLAGS], [C compiler flags for PNG library, overriding autodetection])
+AC_ARG_VAR([PNG_LIBS],   [linker flags for PNG library, overriding autodetection])
+AS_IF(
+  [test "x${config_png}" = "xyes"],
+  [
+    AS_IF(
+      [test "x${LIBPNG_CONFIG}" = "x"],
+      [AC_CHECK_PROG([LIBPNG_CONFIG],[${DESTDIR}${bindir}/libpng-config],[${DESTDIR}${bindir}/libpng-config],,[/])]
+    )
+    AS_IF(
+      [test "x${LIBPNG_CONFIG}" = "xno"],
+      [LIBPNG_CONFIG=""]
+    )
+    AS_IF(
+      [test "x${PNG_CFLAGS}" = "x"],
+      [
+        AS_IF(
+          [test "x$LIBPNG_CONFIG" != "x"],
+          [PNG_CFLAGS=$(${LIBPNG_CONFIG} --static --cflags)],
+          [
+            AC_CHECK_HEADER([png.h],
+              [PNG_CFLAGS="${PNG_CFLAGS}"],
+              [AC_MSG_ERROR(['png.h' header file not found.])]
+            )
+          ]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${PNG_CFLAGS}" = "xno"],
+      [PNG_CFLAGS=""]
+    )
+    AS_IF(
+      [test "x${PNG_LIBS}" = "x"],
+      [
+        AS_IF(
+          [test "x$LIBPNG_CONFIG" != "x"],
+          [PNG_LIBS=$(${LIBPNG_CONFIG} --static --libs)],
+          [
+            AC_CHECK_LIB([png], [png_access_version_number],
+              [
+                PNG_LIBS="${PNG_LIBS} -lpng"
+                AC_CHECK_LIB([z], [zlibVersion],
+                  [PNG_LIBS="${PNG_LIBS} -lz"]
+                )
+                PNG_LIBS="${PNG_LIBS} ${M_LIBS}"
+              ],
+              [AC_MSG_ERROR(['libpng' library file not found.])]
+            )
+          ]
+        )
+      ]
+    )
+    AS_IF(
+      [test "x${PNG_LIBS}" = "xno"],
+      [PNG_LIBS=""]
+    )
+  ]
+)
+AC_SUBST([PNG_CFLAGS])
+AC_SUBST([PNG_LIBS])
+
+AS_IF(
+  [test "x${config_ttf}" = "xyes"],
+  [
+    PKG_CHECK_MODULES(
+      [FREETYPE2],
+      [freetype2],
+      ,
+      [AC_MSG_ERROR([freetype was not found.])]
+    )
+  ]
+)
+
+AC_CONFIG_HEADERS([config.h])
+AC_CONFIG_FILES([Makefile])
+
+AC_OUTPUT
diff -Naur splashutils-1.5.2.1-old/daemon.c splashutils-1.5.2.1-new/daemon.c
--- splashutils-1.5.2.1-old/daemon.c	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/daemon.c	2007-09-23 11:01:10.000000000 -0700
@@ -580,7 +580,7 @@
 void usage(void)
 {
 	printf(
-"fbsplashd/splashutils-" PKG_VERSION "\n"
+"fbsplashd/splashutils-" PACKAGE_VERSION "\n"
 "Usage: fbsplashd [options]\n\n"
 "Options:\n"
 "  -h, --help          show this help message\n"
diff -Naur splashutils-1.5.2.1-old/fbcon_decor_ctl.c splashutils-1.5.2.1-new/fbcon_decor_ctl.c
--- splashutils-1.5.2.1-old/fbcon_decor_ctl.c	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/fbcon_decor_ctl.c	2007-09-23 11:01:10.000000000 -0700
@@ -55,7 +55,7 @@
 void usage(void)
 {
 	printf(
-"fbcondecor_ctl/splashutils-" PKG_VERSION "\n"
+"fbcondecor_ctl/splashutils-" PACKAGE_VERSION "\n"
 "Usage: fbcondecor_ctl [options] -c <cmd>\n\n"
 "Commands:\n"
 "  on       enable fbcondecor on a virtual console\n"
diff -Naur splashutils-1.5.2.1-old/fbsplash.h.in splashutils-1.5.2.1-new/fbsplash.h.in
--- splashutils-1.5.2.1-old/fbsplash.h.in	2007-09-23 10:59:28.000000000 -0700
+++ splashutils-1.5.2.1-new/fbsplash.h.in	2007-09-23 11:01:10.000000000 -0700
@@ -6,14 +6,14 @@
 #include <linux/kd.h>
 #include <linux/input.h>
 
-#define LIBDIR "/lib"
-#define FBSPLASH_CACHEDIR	LIBDIR"/splash/cache"
+#define FBSPLASH_DIR		"@libdir@/splash"
+#define FBSPLASH_CACHEDIR	FBSPLASH_DIR"/cache"
 #define FBSPLASH_PIDFILE	FBSPLASH_CACHEDIR"/daemon.pid"
 #define FBSPLASH_PROFILE	FBSPLASH_CACHEDIR"/profile"
-#define FBSPLASH_DAEMON		"/sbin/fbsplashd.static"
+#define FBSPLASH_DAEMON		"@sbindir@/fbsplashd.static"
 #define FBSPLASH_FIFO		FBSPLASH_CACHEDIR"/.splash"
 
-#define FBSPL_THEME_DIR		"/etc/splash"
+#define FBSPL_THEME_DIR		"@sysconfdir@/splash"
 #define FBSPL_DEFAULT_THEME	"default"
 #define FBSPL_PROGRESS_MAX	0xffff
 
diff -Naur splashutils-1.5.2.1-old/libfbsplash.c splashutils-1.5.2.1-new/libfbsplash.c
--- splashutils-1.5.2.1-old/libfbsplash.c	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/libfbsplash.c	2007-09-23 11:01:10.000000000 -0700
@@ -31,7 +31,7 @@
 
 #include "util.h"
 
-#define FBSPLASH_TMPDIR		LIBDIR"/splash/tmp"
+#define FBSPLASH_TMPDIR		FBSPLASH_DIR"/tmp"
 
 static FILE *fp_fifo = NULL;
 int fd_tty0 = -1;
diff -Naur splashutils-1.5.2.1-old/libfbsplash.pc.in splashutils-1.5.2.1-new/libfbsplash.pc.in
--- splashutils-1.5.2.1-old/libfbsplash.pc.in	2007-09-23 10:59:28.000000000 -0700
+++ splashutils-1.5.2.1-new/libfbsplash.pc.in	2007-09-23 11:01:10.000000000 -0700
@@ -1,7 +1,7 @@
-prefix=/usr
-exec_prefix=/usr
-libdir=/
-includedir=${prefix}/include
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
 
 Name: libfbsplash
 Description: Provide support for integration of fbsplash with the initscript system. 
diff -Naur splashutils-1.5.2.1-old/libfbsplashrender.pc.in splashutils-1.5.2.1-new/libfbsplashrender.pc.in
--- splashutils-1.5.2.1-old/libfbsplashrender.pc.in	2007-09-23 10:59:28.000000000 -0700
+++ splashutils-1.5.2.1-new/libfbsplashrender.pc.in	2007-09-23 11:01:10.000000000 -0700
@@ -1,11 +1,11 @@
-prefix=/usr
-exec_prefix=/usr
-libdir=${prefix}/lib
-includedir=${prefix}/include
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
 
 Name: libfbsplashrender
 Description: Provide support for rendering themes used by fbsplash. 
 Version: 0.1
 Libs: -L${libdir} -lfbsplashrender
-Libs.private: -lfbsplash
+Libs.private: -lfbsplash @libs_private@
 Cflags: -I${includedir}
diff -Naur splashutils-1.5.2.1-old/Makefile.am splashutils-1.5.2.1-new/Makefile.am
--- splashutils-1.5.2.1-old/Makefile.am	1969-12-31 16:00:00.000000000 -0800
+++ splashutils-1.5.2.1-new/Makefile.am	2007-09-23 11:01:10.000000000 -0700
@@ -0,0 +1,550 @@
+################################################################################
+# automake file for generating the user splashutils' Makefile file.
+#
+# Copyright (c) 2004-2007, Michal Januszewski <spock@gentoo.org>
+# Copyright (c) 2007-2007, Paul Bender <pebender@gmail.com>
+#
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+################################################################################
+
+################################################################################
+# General
+################################################################################
+
+BUILT_SOURCES          =
+
+noinst_HEADERS         =
+nodist_include_HEADERS =
+
+noinst_LTLIBRARIES     =
+elib_LTLIBRARIES       =
+lib_LTLIBRARIES        =
+
+pkgconfig_DATA         =
+dist_doc_DATA          =
+
+noinst_SCRIPTS         =
+esbin_SCRIPTS          =
+ebin_SCRIPTS           =
+sbin_SCRIPTS           =
+bin_SCRIPTS            =
+
+noinst_PROGRAMS        =
+esbin_PROGRAMS         =
+ebin_PROGRAMS          =
+sbin_PROGRAMS          =
+bin_PROGRAMS           =
+
+EXTRA_DIST             =
+
+MOSTLYCLEANFILES       =
+
+pkgconfigdir = $(libdir)/pkgconfig
+
+if CONFIG_QUIET
+OUTPUT = > /dev/null
+infmsg = printf "  %-7s %s\n" $(1) $(2)
+else
+OUTPUT =
+infmsg = :
+endif
+
+if CONFIG_DEBUG
+CFLAGS ?= -Wall -g
+else
+CFLAGS ?= -O2
+endif
+
+# The was copied from the original Makefile file. I am not sure that it is
+# needed. In addition, given the trailing 'linux' in the path and that 'fb.h'
+# is included using '#include <linux/fb.h>', I am not sure that it works.
+# As a result, I have commented it out.
+# 
+## Include the klibc header files so that we can compile against fb.h
+## from a kernel thee patched with fbcondecor.
+#INCLUDES = -idirafter $(DESTDIR)$(libdir)/klibc/include/linux
+
+################################################################################
+# All
+################################################################################
+
+AM_MAKEFLAGS     =
+AM_LIBTOOLFLAGS  =
+if CONFIG_QUIET
+Q = @
+AM_MAKEFLAGS    += --silent
+AM_LIBTOOLFLAGS += --silent
+else
+Q =
+AM_MAKEFLAGS    +=
+AM_LIBTOOLFLAGS +=
+endif
+
+BUILT_SOURCES   += fbsplash.h
+
+mostlyclean-local: \
+		mostlyclean-local-kernel
+
+clean-local: \
+		clean-local-test \
+		clean-local-misc
+
+dist-hook: \
+		dist-hook-header
+
+################################################################################
+# Doc
+################################################################################
+
+dist_doc_DATA += \
+	docs/bootsplash_compatibility \
+	docs/daemon \
+	docs/early_bootup \
+	docs/kernel_parameters \
+	docs/libfbsplash \
+	docs/metadata_sample.xml \
+	docs/porting \
+	docs/quickstart \
+	docs/theme_format \
+	docs/thememeta.xsd
+
+EXTRA_DIST    += \
+	Doxyfile
+
+doc:
+	doxygen
+
+################################################################################
+# Header
+################################################################################
+
+#noinst_HEADERS          += klibc_compat.h
+
+nodist_include_HEADERS  += fbsplash.h
+
+EXTRA_DIST              += fbsplash.h.in
+
+MOSTLYCLEANFILES        += fbsplash.h
+
+dist-hook-header:
+	@# Removing this file from the distribution is easier than putting it
+	@# in a nodist_*_SOURCES rather than the normal _SOURCES list for all
+	@# the programs and libraries that depend on it.
+	@rm -r $(top_distdir)/fbsplash.h
+
+fbsplash.h: fbsplash.h.in config.h
+	@$(call infmsg,CREATE,$@)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)rm -f $@ $@~
+	$(Q)cat $< | $(SED) \
+		-e 's|@bindir[@]|$(ebindir)|g' \
+		-e 's|@sbindir[@]|$(esbindir)|g' \
+		-e 's|@sysconfdir[@]|$(sysconfdir)|g' \
+		-e 's|@libdir[@]|$(elibdir)|g' \
+		> $@~
+	$(Q)mv -f $@~ $@
+
+config.h:
+	@echo "The file 'config.h' is missing. Please run 'configure'"
+	@exit 1
+
+################################################################################
+# Library
+################################################################################
+
+lib_LTLIBRARIES += libfbsplash.la
+pkgconfig_DATA  += libfbsplash.pc
+EXTRA_DIST      += libfbsplash.pc.in
+lib_LTLIBRARIES += libfbsplashrender.la
+pkgconfig_DATA  += libfbsplashrender.pc
+EXTRA_DIST      += libfbsplashrender.pc.in
+
+libfbsplash_la_SOURCES = libfbsplash.c util.h fbsplash.h
+libfbsplash_la_CFLAGS  = $(AM_CFLAGS)
+libfbsplash_la_LDLAGS  = $(AM_LDFLAGS) -version-info $(libfbsplash_version)
+libfbsplash_la_LIBADD  =
+
+libfbsplashrender_la_SOURCES  = \
+	libfbsplashrender.c \
+	fbcon_decor.c \
+	common.c \
+	parse.c \
+	list.c \
+	image.c \
+	render.c \
+	effects.c \
+	fbcon_decor.h \
+	include/console_decor.h \
+	include/fbcondecor.h \
+	util.h \
+	fbsplash.h
+libfbsplashrender_la_CFLAGS   = $(AM_CFLAGS)
+libfbsplashrender_la_LDLAGS   = $(AM_LDFLAGS) -version-info $(libfbsplashrender_version)
+libfbsplashrender_la_LIBADD   =
+
+libfbsplashrender_la_CFLAGS  += $(JPEG_CFLAGS)
+libfbsplashrender_la_LIBADD  += $(JPEG_LIBS)
+
+if CONFIG_MNG
+libfbsplashrender_la_SOURCES += mng_callbacks.c mng_render.c mng_splash.h util.h fbsplash.h
+libfbsplashrender_la_CFLAGS  += $(MNG_CFLAGS)
+libfbsplashrender_la_LIBADD  += $(MNG_LIBS)
+endif
+if CONFIG_PNG
+libfbsplashrender_la_CFLAGS  += $(PNG_CFLAGS)
+libfbsplashrender_la_LIBADD  += $(PNG_LIBS)
+endif
+if CONFIG_TTF
+libfbsplashrender_la_SOURCES += ttf.c ttf.h util.h fbsplash.h
+libfbsplashrender_la_CFLAGS  += $(FREETYPE2_CFLAGS) $(M_CFLAGS)
+libfbsplashrender_la_LIBADD  += $(FREETYPE2_LIBS)   $(M_LIBS)
+endif
+
+
+MOSTLYCLEANFILES += libfbsplash.pc
+MOSTLYCLEANFILES += libfbsplashrender.pc
+
+%.pc: %.pc.in
+	@$(call infmsg,CREATE,$@)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)rm -f $@ $@~
+	$(Q)cat $< | $(SED) \
+		-e 's|@prefix[@]|$(prefix)|g' \
+		-e 's|@exec_prefix[@]|$(exec_prefix)|g' \
+		-e 's|@libdir[@]|$(libdir)|g' \
+		-e 's|@includedir[@]|$(includedir)|g' \
+		-e 's|@libs_private[@]|$(strip $($(basename $(@F))_la_LIBADD))|g' \
+		> $@~
+	$(Q)mv -f $@~ $@
+
+################################################################################
+# Script
+################################################################################
+
+bin_SCRIPTS   += scripts/bootsplash2fbsplash
+esbin_SCRIPTS += scripts/splash-functions.sh
+if CONFIG_HELPER
+bin_SCRIPTS   += scripts/splash_geninitramfs
+endif
+bin_SCRIPTS   += scripts/splash_manager
+bin_SCRIPTS   += scripts/splash_resize
+
+EXTRA_DIST  += scripts/bootsplash2fbsplash.in
+EXTRA_DIST  += scripts/splash-functions.sh.in
+EXTRA_DIST  += scripts/splash_geninitramfs.in
+EXTRA_DIST  += scripts/splash_manager.in
+EXTRA_DIST  += scripts/splash_resize.in
+
+MOSTLYCLEANFILES += scripts/bootsplash2fbsplash
+MOSTLYCLEANFILES += scripts/splash-functions.sh
+MOSTLYCLEANFILES += scripts/splash_geninitramfs
+MOSTLYCLEANFILES += scripts/splash_manager
+MOSTLYCLEANFILES += scripts/splash_resize
+
+scripts/%: scripts/%.in
+	@$(call infmsg,CREATE,$@)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)rm -f $@ $@~
+	$(Q)cat $< | $(SED) \
+		-e 's|@PACKAGE_VERSION[@]|$(PACKAGE_VERSION)|g' \
+		-e 's|@bindir[@]|$(ebindir)|g' \
+		-e 's|@sbindir[@]|$(esbindir)|g' \
+		-e 's|@sysconfdir[@]|$(sysconfdir)|g' \
+		-e 's|@libdir[@]|$(libdir)|g' \
+		> $@~
+	$(Q)mv -f $@~ $@
+
+################################################################################
+# User
+################################################################################
+
+if CONFIG_FBCON_DECOR
+esbin_PROGRAMS += fbcondecor_ctl
+endif
+esbin_PROGRAMS += fbsplashd
+esbin_PROGRAMS += fbsplashd.static
+bin_PROGRAMS   += splash_util
+ebin_PROGRAMS  += splash_util.static
+
+fbcondecor_ctl_SOURCES      = fbcon_decor_ctl.c fbcon_decor.h include/console_decor.h include/fbcondecor.h util.h fbsplash.h
+fbcondecor_ctl_CPPFLAGS     = $(AM_CPPFLAGS) -DTARGET_UTIL
+fbcondecor_ctl_LDFLAGS      = $(AM_LDFLAGS)
+fbcondecor_ctl_LDADD        = libfbsplashrender.la libfbsplash.la
+
+fbsplashd_SOURCES           = daemon_cmd.c daemon.c daemon.h util.h fbsplash.h
+fbsplash__CPPFLAGS          = $(AM_CPPFLAGS) -DTARGET_UTIL
+fbsplashd_CFLAGS            = $(AM_CFLAGS) $(PTHREAD_CFLAGS) $(RT_CFLAGS)
+fbsplashd_LDFLAGS           = $(AM_LDFLAGS)
+fbsplashd_LDADD             = libfbsplashrender.la libfbsplash.la $(PTHREAD_LIBS) $(RT_LIBS)
+
+fbsplashd_static_SOURCES    = daemon_cmd.c daemon.c daemon.h util.h fbsplash.h
+fbsplashd_static_CPPFLAGS   = $(AM_CPPFLAGS) -DTARGET_UTIL
+fbsplashd_static_CFLAGS     = $(AM_CFLAGS) $(PTHREAD_STATIC_CFLAGS) $(RT_CFLAGS)
+fbsplashd_static_LDFLAGS    = $(AM_LDFLAGS) -all-static
+fbsplashd_static_LDADD      = libfbsplashrender.la libfbsplash.la $(PTHREAD_STATIC_LIBS) $(RT_LIBS)
+
+splash_util_SOURCES         = util.c util.h fbsplash.h
+splash_util_CPPFLAGS        = $(AM_CPPFLAGS) -DTARGET_UTIL
+splash_util_LDFLAGS         = $(AM_LDFLAGS)
+splash_util_LDADD           = libfbsplashrender.la libfbsplash.la
+
+splash_util_static_SOURCES  = util.c util.h fbsplash.h
+splash_util_static_CPPFLAGS = $(AM_CPPFLAGS) -DTARGET_UTIL
+splash_util_static_LDFLAGS  = $(AM_LDFLAGS) -all-static
+splash_util_static_LDADD    = libfbsplashrender.la libfbsplash.la
+
+################################################################################
+# Test
+################################################################################
+
+if CONFIG_TEST
+noinst_PROGRAMS += test/test_parser
+endif
+
+test_test_parser_SOURCES  = test/test_parser.c
+test_test_parser_CPPFLAGS = $(AM_CPPFLAGS) -DTARGET_UTIL
+test_test_parser_LDFLAGS  = $(AM_LDFLAGS) libfbsplashrender.la libfbsplash.la
+
+clean-local-test:
+	@# For some reason automake is not removing this directory
+	@# even though it created it by calling libtool for linking.
+	@# Therefore, perform normal clean-libtool steps.
+	@rm -fr test/.libs test/_libs
+
+################################################################################
+# Misc
+################################################################################
+
+if CONFIG_MISC
+noinst_SCRIPTS  += misc/avg.sh
+noinst_PROGRAMS += misc/benchmark
+noinst_PROGRAMS += misc/blittest
+noinst_PROGRAMS += misc/inputtest
+noinst_PROGRAMS += misc/splashtest
+endif
+
+EXTRA_DIST += misc/avg.sh
+
+misc_benchmark_SOURCES  = misc/benchmark.c fbsplash.h
+misc_benchmark_LDADD    = libfbsplashrender.la libfbsplash.la
+misc_blittest_SOURCES   = misc/blittest.c
+misc_blittest_LDADD     =
+misc_inputtest_SOURCES  = misc/inputtest.c fbsplash.h
+misc_inputtest_LDADD    = libfbsplashrender.la libfbsplash.la
+misc_splashtest_SOURCES = misc/splashtest.c fbsplash.h
+misc_splashtest_LDADD   = libfbsplashrender.la libfbsplash.la
+
+clean-local-misc:
+	@# For some reason automake is not removing this directory
+	@# even though it created it by calling libtool for linking.
+	@# Therefore, perform normal clean-libtool steps.
+	@rm -fr misc/.libs misc/_libs
+
+################################################################################
+# Kernel
+################################################################################
+
+if CONFIG_HELPER
+esbin_PROGRAMS  += fbcondecor_helper
+endif
+
+fbcondecor_helper_SOURCES = \
+	kernel.c \
+	libfbsplash.c \
+	libfbsplashrender.c \
+	fbcon_decor.c \
+	common.c \
+	parse.c \
+	list.c \
+	render.c \
+	image.c \
+	effects.c \
+	fbcon_decor.h \
+	include/console_decor.h \
+	include/fbcondecor.h \
+	util.h \
+	fbsplash.h
+fbcondecor_helper_CPPFLAGS  = -DWITH_ERRLIST -DTARGET_KERNEL -DTT_CONFIG_OPTION_BYTECODE_INTERPRETER
+fbcondecor_helper_CFLAGS    = -Os -w -ffunction-sections -fdata-sections
+fbcondecor_helper_LDFLAGS   = 
+fbcondecor_helper_LDADD     = 
+fbcondecor_helper_CFLAGS   += -I$(abs_top_builddir)/libjpeg -I$(LIBJPEG_SOURCE)
+fbcondecor_helper_LDADD    +=  libjpeg.a
+if CONFIG_PNG
+fbcondecor_helper_CFLAGS   += -I$(LIBPNG_SOURCE)
+fbcondecor_helper_LDADD    += libpng.a libz.a
+endif
+if CONFIG_TTF_KERNEL
+fbcondecor_helper_SOURCES  += ttf.c ttf.h util.h fbsplash.h
+fbcondecor_helper_CFLAGS   += -I$(LIBFREETYPE2_SOURCE)/include -I$(LIBZ_SOURCE)
+fbcondecor_helper_LDADD    += libfreetype.a
+endif
+if CONFIG_KLIBC_SHARED
+fbcondecor_helper_LDFLAGS  += -shared
+else
+fbcondecor_helper_LDFLAGS  += -static
+endif
+
+EXTRA_DIST += \
+	$(LIBFREETYPE2_SOURCE_INTERNAL) \
+	$(LIBJPEG_SOURCE_INTERNAL) \
+	$(LIBPNG_SOURCE_INTERNAL) \
+	$(LIBZ_SOURCE_INTERNAL)
+
+mostlyclean-local-kernel: \
+		mostlyclean-local-kernel-libfreetype \
+		mostlyclean-local-kernel-libjpeg \
+		mostlyclean-local-kernel-libpng \
+		mostlyclean-local-kernel-libz
+
+# Don't pass command line variables when calling make.
+# This saves us trouble when building against klibc.
+MAKEOVERRIDES=
+
+LIBFREETYPE2_SOURCE_INTERNAL = libs/freetype-2.3.5
+LIBJPEG_SOURCE_INTERNAL      = libs/jpeg-6b
+LIBPNG_SOURCE_INTERNAL       = libs/libpng-1.2.18
+LIBZ_SOURCE_INTERNAL         = libs/zlib-1.2.3
+
+LIBPNG_DEFS = -DPNG_NO_WRITE_TIME -DPNG_NO_FLOATING_POINT_SUPPORTED -DPNG_NO_WRITE_SUPPORTED -DPNG_NO_READ_iTXt \
+              -DPNG_LEGACY_SUPPORTED -DPNG_NO_PROGRESSIVE_READ -DPNG_NO_MNG_FEATURES -DPNG_NO_CONSOLE_IO \
+              -DPNG_NO_ERROR_NUMBERS -DPNG_READ_GRAY_TO_RGB_SUPPORTED -DPNG_READ_16_TO_8_SUPPORTED \
+              -DPNG_READ_STRIP_ALPHA_SUPPORTED -DPNG_NO_INFO_IMAGE -DPNG_NO_READ_TRANSFORMS -DPNG_NO_READ_ANCILLARY_CHUNKS \
+              -DPNG_NO_MMX_CODE
+
+# Override automake's generation of target rules for building fbcondecor_helper.
+fbcondecor_helper: $(fbcondecor_helper_OBJECTS) $(fbcondecor_helper_LDADD)
+	@$(call infmsg,LD,$@)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)$(KLCC) $(fbcondecor_helper_CFLAGS) $(fbcondecor_helper_LDFLAGS) $+ $(fbcondecor_helper_LDADD) -o $@
+	$(Q)$(STRIP) $@
+
+# Override automake's generation of target rules for building fbcondecor_helper object files.
+fbcondecor_helper-kernel.o:
+fbcondecor_helper-libfbsplash.o:
+fbcondecor_helper-libfbsplashrender.o:
+fbcondecor_helper-fbcon_decor.o:
+fbcondecor_helper-common.o:
+fbcondecor_helper-parse.o:
+fbcondecor_helper-list.o:
+fbcondecor_helper-render.o:
+fbcondecor_helper-image.o:
+fbcondecor_helper-effects.o:
+fbcondecor_helper-ttf.o:
+fbcondecor_helper-%.o: %.c
+	@$(call infmsg,CC,$@)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)$(KLCC) $(fbcondecor_helper_CPPFLAGS) $(fbcondecor_helper_CFLAGS) -I$(top_srcdir) -c $< -o $@
+
+libfreetype.a: klibc_compat.h
+	$(Q)$(MKDIR_P) libfreetype
+	$(Q)cd libfreetype ; \
+	if test ! -e ./config.mk ; then \
+		$(call infmsg,CONF,libfreetype.a) ; \
+		CFLAGS="$(K_CFLAGS) -include $(abs_top_srcdir)/klibc_compat.h" \
+		CC="$(KLCC)" CPPFLAGS="-I$(LIBZ_SOURCE)" \
+		$(LIBFREETYPE2_SOURCE)/configure --disable-shared $(OUTPUT) ; \
+	fi ; \
+	if ! $(MAKE) --question $(AM_MAKEFLAGS) CFLAGS="$(K_CFLAGS)" library ; then \
+		$(call infmsg,MAKE,libfreetype.a) ; \
+	fi ; \
+	$(MAKE) $(AM_MAKEFLAGS) CFLAGS="-c $(K_CFLAGS)" CCexe="$(BUILD_CC)" library $(OUTPUT)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)cp -f libfreetype/.libs/libfreetype.a $@
+
+libjpeg.a:
+	$(Q)$(MKDIR_P) libjpeg
+	$(Q)cd libjpeg ; \
+	if test ! -e ./Makefile ; then \
+		$(call infmsg,CONF,libjpeg.a) ; \
+		CC=$(KLCC) CFLAGS="$(K_CFLAGS) -I$(abs_top_builddir)/libjpeg" $(LIBJPEG_SOURCE)/configure $(OUTPUT) ; \
+		echo "#define NO_GETENV 1" >> jconfig.h ; \
+		$(SED) -i "s#CFLAGS=.*#CFLAGS=$(K_CFLAGS) -I$(abs_top_builddir)/libjpeg#" Makefile ; \
+		$(SED) -i "s:#define JMESSAGE.*::" $(LIBJPEG_SOURCE)/jerror.c ; \
+	fi ; \
+	if ! $(MAKE) --question $(AM_MAKEFLAGS) CC="$(KLCC)" libjpeg.a ; then  \
+		$(call infmsg,MAKE,libjpeg.a) ; \
+	fi ; \
+	$(MAKE) $(AM_MAKEFLAGS) CC="$(KLCC)" libjpeg.a $(OUTPUT)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)cp -f libjpeg/libjpeg.a $@
+
+libpng.a: libz.a
+	$(Q)cd $(LIBPNG_SOURCE) ; \
+	if test ! -e ./Makefile ; then \
+		$(call infmsg,CONF,libpng.a) ; \
+		cp scripts/makefile.linux Makefile $(OUTPUT); \
+		$(SED) -i -e '/^CFLAGS/ { N ; s#^CFLAGS=.*#CFLAGS=$(K_CFLAGS) $(LIBPNG_DEFS)# ; P ; D }' \
+		       -e 's#^ZLIBINC=.*#ZLIBINC=$(LIBZ_SOURCE)#' \
+		       -e 's#^ZLIBLIB=.*#ZLIBLIB=$(LIBZ_SOURCE)#' Makefile ; \
+	fi ; \
+	if ! $(MAKE) --question $(AM_MAKEFLAGS) CC="$(KLCC)" AR_RC="$(AR) rc" RANLIB="$(RANLIB)" libpng.a ; then \
+		$(call infmsg,MAKE,libpng.a) ; \
+	fi ; \
+	$(MAKE) $(AM_MAKEFLAGS) CC="$(KLCC)" AR_RC="$(AR) rc" RANLIB="$(RANLIB)" libpng.a $(OUTPUT)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)cp -f $(LIBPNG_SOURCE)/libpng.a $@
+
+libz.a:
+	$(Q)cd $(LIBZ_SOURCE) ; \
+	if test ! -e ./Makefile ; then \
+		$(call infmsg,CONF,libz.a) ; \
+		CC=$(KLCC) CFLAGS="$(K_CFLAGS)" \
+		./configure $(OUTPUT); \
+		$(SED) -i 's#^CFLAGS=\(.*\)#CFLAGS=\1 $(K_CFLAGS)#' Makefile ; \
+	fi ; \
+	if ! $(MAKE) --question $(AM_MAKEFLAGS) CC="$(KLCC)" AR="$(AR) rc" RANLIB="$(RANLIB)" libz.a ; then \
+		$(call infmsg,MAKE,zlib.a) ; \
+	fi ; \
+	$(MAKE) $(AM_MAKEFLAGS) CC="$(KLCC)" AR="$(AR) rc" RANLIB="$(RANLIB)" libz.a $(OUTPUT)
+	$(Q)$(MKDIR_P) $(@D)
+	$(Q)cp -f  $(LIBZ_SOURCE)/libz.a $@
+
+mostlyclean-local-kernel-libfreetype:
+	$(Q)$(MKDIR_P) libfreetype
+	$(Q)cd libfreetype ; \
+	$(Q)if test -e ./config.mk ; then \
+		$(call infmsg,CLEAN,libfreetype.a) ; \
+		$(MAKE) $(AM_MAKEFLAGS) clean $(OUTPUT) ; \
+		rm -f config.mk ; \
+	fi
+	$(Q)rm -fr libfreetype
+	$(Q)rm -f  libfreetype.a
+
+mostlyclean-local-kernel-libjpeg:
+	$(Q)$(MKDIR_P) libjpeg
+	$(Q)cd libjpeg ; \
+	$(Q)if test -e Makefile ; then \
+		$(call infmsg,CLEAN,libjpeg.a) ; \
+		$(MAKE) $(AM_MAKEFLAGS) clean $(OUTPUT) ; \
+		rm -f Makefile ; \
+	fi
+	$(Q)rm -fr libjpeg
+	$(Q)rm -f  libjpeg.a
+
+mostlyclean-local-kernel-libpng:
+	$(Q)cd $(LIBPNG_SOURCE) ; \
+	if test -e Makefile ; then \
+		$(call infmsg,CLEAN,libpng.a) ; \
+		$(MAKE) $(AM_MAKEFLAGS) clean $(OUTPUT) ; \
+		rm -f Makefile ; \
+	fi
+	$(Q)rm -f  libpng.a
+
+mostlyclean-local-kernel-libz:
+	$(Q)cd $(LIBZ_SOURCE) ; \
+	if test -e Makefile ; then \
+		$(call infmsg,CLEAN,libz.a) ; \
+		$(MAKE) $(AM_MAKEFLAGS) clean $(OUTPUT) ; \
+		rm -f Makefile ; \
+	fi
+	$(Q)rm -f  libz.a
+
diff -Naur splashutils-1.5.2.1-old/NEWS splashutils-1.5.2.1-new/NEWS
--- splashutils-1.5.2.1-old/NEWS	1969-12-31 16:00:00.000000000 -0800
+++ splashutils-1.5.2.1-new/NEWS	2007-09-23 11:01:10.000000000 -0700
@@ -0,0 +1 @@
+# Stub NEWS file to satisfy automake.
diff -Naur splashutils-1.5.2.1-old/scripts/bootsplash2fbsplash.in splashutils-1.5.2.1-new/scripts/bootsplash2fbsplash.in
--- splashutils-1.5.2.1-old/scripts/bootsplash2fbsplash.in	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/scripts/bootsplash2fbsplash.in	2007-09-23 11:01:10.000000000 -0700
@@ -6,14 +6,14 @@
 # Usage: bootsplash2fbsplash [--remove-comments] <theme_name>
 #
 
-$path_bp = "/etc/bootsplash/";
-$path_fbspl = "/etc/splash";
+$path_bp = "@sysconfdir@/bootsplash/";
+$path_fbspl = "@sysconfdir@/splash";
 $comments = 1;
 $theme = "";
 
 sub usage
 {
-	print "bootsplash2fbsplash theme converter / splashutils-%PKG_VERSION%\n";
+	print "bootsplash2fbsplash theme converter / splashutils-@PACKAGE_VERSION@\n";
 	print '(c) 2004-2005 Michal Januszewski <spock@gentoo.org>'."\n\n";
 	print "Usage: bootsplash2fbsplash [--remove-comments] <theme_name>\n";
 }
diff -Naur splashutils-1.5.2.1-old/scripts/splash-functions.sh.in splashutils-1.5.2.1-new/scripts/splash-functions.sh.in
--- splashutils-1.5.2.1-old/scripts/splash-functions.sh.in	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/scripts/splash-functions.sh.in	2007-09-23 11:01:10.000000000 -0700
@@ -17,14 +17,14 @@
 # both readable and writable at all times, even when the root fs
 # is mounted read-only. This writable space is provided by a tmpfs
 # mounted at ${spl_cachedir}.
-export spl_util="/bin/splash_util.static"
-export spl_decor="/sbin/fbcondecor_ctl.static"
-export spl_bindir="/lib/splash/bin"
-export spl_cachedir="/lib/splash/cache"
+export spl_util="@bindir@/splash_util.static"
+export spl_decor="@sbindir@/fbcondecor_ctl.static"
+export spl_bindir="@libdir@/splash/bin"
+export spl_cachedir="@libdir@/splash/cache"
 export spl_fifo="${spl_cachedir}/.splash"
 export spl_pidfile="${spl_cachedir}/daemon.pid"
 
-[ -r /etc/init.d/functions.sh ] && . /etc/init.d/functions.sh
+[ -r @sysconfdir@/init.d/functions.sh ] && . @sysconfdir@/init.d/functions.sh
 
 splash_setup() {
 	# If it's already set up, let's not waste time on parsing the config
@@ -42,8 +42,8 @@
 	export SPLASH_SHUTDOWN_MESSAGE="Shutting down the system (\$progress%)... Press F2 for verbose mode."
 	export SPLASH_REBOOT_MESSAGE="Rebooting the system (\$progress%)... Press F2 for verbose mode."
 
-	[ -f /etc/conf.d/splash ] && . /etc/conf.d/splash
-	[ -f /etc/conf.d/fbcondecor ] && . /etc/conf.d/fbcondecor
+	[ -f @sysconfdir@/conf.d/splash ] && . @sysconfdir@/conf.d/splash
+	[ -f @sysconfdir@/conf.d/fbcondecor ] && . @sysconfdir@/conf.d/fbcondecor
 
 	if [ -f /proc/cmdline ]; then
 		options=$(grep -o 'splash=[^ ]*' /proc/cmdline)
diff -Naur splashutils-1.5.2.1-old/scripts/splash_geninitramfs.in splashutils-1.5.2.1-new/scripts/splash_geninitramfs.in
--- splashutils-1.5.2.1-old/scripts/splash_geninitramfs.in	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/scripts/splash_geninitramfs.in	2007-09-23 11:01:10.000000000 -0700
@@ -19,7 +19,7 @@
 usage()
 {
 	cat <<EOTB
-splash_geninitramfs/splashutils-%PKG_VERSION%
+splash_geninitramfs/splashutils-@PACKAGE_VERSION@
 Usage: splash_geninitramfs [options] [--all|theme ...]
 
 Main operation modes:
@@ -60,10 +60,10 @@
 	fi
 }
 
-themedir="/etc/splash"
+themedir="@sysconfdir@/splash"
 declare -a themes
 mode="h"
-splash_hlp="/sbin/fbcondecor_helper"
+splash_hlp="@sbindir@/fbcondecor_helper"
 res=""
 overlay=""
 verbose=0
@@ -161,8 +161,8 @@
 fi
 
 printv "o Copying ${splash_hlp}.."
-cp "${splash_hlp}" "${imgdir}/sbin"
-ln -sf "${splash_hlp}" "${imgdir}/sbin/splash_helper"
+cp "${splash_hlp}" "${imgdir}@sbindir@"
+ln -sf "${splash_hlp}" "${imgdir}@sbindir@/splash_helper"
 
 res=${res//,/ }
 
@@ -217,7 +217,7 @@
 		if [[ -n "${font}" ]]; then
 			put_item "${font}"
 		else
-			put_item "/etc/splash/luxisri.ttf"
+			put_item "@sysconfdir@/splash/luxisri.ttf"
 		fi
 	done
 done
diff -Naur splashutils-1.5.2.1-old/scripts/splash_manager.in splashutils-1.5.2.1-new/scripts/splash_manager.in
--- splashutils-1.5.2.1-old/scripts/splash_manager.in	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/scripts/splash_manager.in	2007-09-23 11:01:10.000000000 -0700
@@ -25,10 +25,10 @@
 spl_util=splash_util.static
 spl_daemon=fbsplashd.static
 spl_decor=fbcondecor_ctl
-spl_dir=/lib/splash
+spl_dir=@libdir@/splash
 spl_fifo=${spl_dir}/cache/.splash
 spl_pidfile=${spl_dir}/cache/daemon.pid
-themedir=/etc/splash
+themedir=@sysconfdir@/splash
 
 spl_daemon_exename="$(basename ${spl_daemon})"
 spl_daemon_short="${spl_daemon:0:9}"
@@ -40,7 +40,7 @@
 
 usage() {
 	cat <<EOTB
-splash_geninitramfs/splashutils-%PKG_VERSION%
+splash_geninitramfs/splashutils-@PACKAGE_VERSION@
 Usage: splash_manager [options] -c <command>
 
 Commands:
@@ -321,12 +321,12 @@
 
 	ctime=0
 
-	if [[ -e /etc/gentoo-release ]]; then
+	if [[ -e @sysconfdir@/gentoo-release ]]; then
 		export RUNLEVEL="S"
 		export SOFTLEVEL=""
 	fi
 
-	source /sbin/splash-functions.sh
+	source @sbindir@/splash-functions.sh
 	splash_setup
 
 	export SPLASH_XRES="$xres"
@@ -365,7 +365,7 @@
 					${themedir}/${theme}/scripts/${arr[2]}-post ${arr[*]:3}
 				fi
 
-				if [[ -e /etc/gentoo-release && ${arr[3]} == 'boot' ]]; then
+				if [[ -e @sysconfdir@/gentoo-release && ${arr[3]} == 'boot' ]]; then
 					export RUNLEVEL="3"
 				fi
 				;;
@@ -497,7 +497,7 @@
 bootloader=""
 
 detect_bootloader() {
-	if [[ -e /boot/grub/grub.conf && -e /etc/lilo.conf ]]; then
+	if [[ -e /boot/grub/grub.conf && -e @sysconfdir@/lilo.conf ]]; then
 		ewarn "Both GRUB and LILO seem to be installed and configured. Please"
 		ewarn "select which one should be configured by this script:"
 		ewarn "  1) GRUB"
@@ -520,7 +520,7 @@
 		done
 	elif [[ -e /boot/grub/grub.conf ]]; then
 		bootloader="grub"
-	elif [[ -e /etc/lilo.conf ]]; then
+	elif [[ -e @sysconfdir@/lilo.conf ]]; then
 		bootloader="lilo"
 	else
 		err "It appears that none of the supported bootloaders (GRUB, LILO) is installed"
@@ -532,8 +532,8 @@
 
 # The code of mount_boot_partition() is stolen from Gentoo's mount-boot.eclass.
 mount_boot_partition() {
-	# note that /dev/BOOT is in the Gentoo default /etc/fstab file
-	local fstabstate="$(cat /etc/fstab | awk '!/^#|^[[:blank:]]+#|^\/dev\/BOOT/ {print $2}' | egrep "^/boot$" )"
+	# note that /dev/BOOT is in the Gentoo default @sysconfdir@/fstab file
+	local fstabstate="$(cat @sysconfdir@/fstab | awk '!/^#|^[[:blank:]]+#|^\/dev\/BOOT/ {print $2}' | egrep "^/boot$" )"
 	local procstate="$(cat /proc/mounts | awk '{print $2}' | egrep "^/boot$" )"
 	local proc_ro="$(cat /proc/mounts | awk '{ print $2, $4 }' | sed -n '/\/boot/{ /[ ,]\?ro[ ,]\?/p }' )"
 
@@ -680,25 +680,25 @@
 			want_name=false
 		fi
 		linecnt=$(($linecnt+1))
-	done < /etc/lilo.conf
+	done < @sysconfdir@/lilo.conf
 
 	input_number 1 ${cnt} 1
 	n=$(($?-1))
 	einfo "Configuring '${entries[$n]}'.."
 
 	line=${lines[$n]}
-	cp /etc/lilo.conf /etc/lilo.conf.work.$$
+	cp @sysconfdir@/lilo.conf @sysconfdir@/lilo.conf.work.$$
 
 	initrd="$(awk "FNR == $line {
 				print ;
 				while(getline > 0 && \$1 != \"image\") {
 						print \$0
 				}
-			}" /etc/lilo.conf.work.$$ | grep "^[[:space:]]*initrd")"
+			}" @sysconfdir@/lilo.conf.work.$$ | grep "^[[:space:]]*initrd")"
 	initrd=$(echo "$initrd" | cut -f2 -d'=')
 
 	theme_switch_initrd "${initrd}"
-	cp /etc/lilo.conf /etc/lilo.conf.backup
+	cp @sysconfdir@/lilo.conf @sysconfdir@/lilo.conf.backup
 
 	awk "FNR == $(($line+1)) {
 		initrd=0
@@ -766,10 +766,10 @@
 		next
 	}
 
-	FNR != $(($line+1)) { print \$0 }" /etc/lilo.conf.work.$$ > /etc/lilo.conf.tmp.$$
+	FNR != $(($line+1)) { print \$0 }" @sysconfdir@/lilo.conf.work.$$ > @sysconfdir@/lilo.conf.tmp.$$
 
-	rm /etc/lilo.conf.work.$$
-	mv /etc/lilo.conf.tmp.$$ /etc/lilo.conf
+	rm @sysconfdir@/lilo.conf.work.$$
+	mv @sysconfdir@/lilo.conf.tmp.$$ @sysconfdir@/lilo.conf
 
 	einfo "LILO config file has been updated."
 }
diff -Naur splashutils-1.5.2.1-old/scripts/splash_resize.in splashutils-1.5.2.1-new/scripts/splash_resize.in
--- splashutils-1.5.2.1-old/scripts/splash_resize.in	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/scripts/splash_resize.in	2007-09-23 11:01:10.000000000 -0700
@@ -13,7 +13,7 @@
 # $Header: /srv/cvs/splash/utils/scripts/splash_resize,v 1.2 2004/11/12 17:42:16 spock Exp $
 
 if ($#ARGV < 2) {
-	print "splash_resize/splashutils-%PKG_VERSION%\n";
+	print "splash_resize/splashutils-@PACKAGE_VERSION@\n";
 	print "Usage: splash_resize <theme> <old_res> <new_res>\n";
 	exit 0;
 }
@@ -22,8 +22,8 @@
 $old_res = $ARGV[1];
 $new_res = $ARGV[2];
 
-open IN,"</etc/splash/$theme/$old_res.cfg" || die "Can't open source config file."; 
-open OUT,">/etc/splash/$theme/$new_res.cfg" || die "Can't write to destination config file."; 
+open IN,"<@sysconfdir@/splash/$theme/$old_res.cfg" || die "Can't open source config file."; 
+open OUT,">@sysconfdir@/splash/$theme/$new_res.cfg" || die "Can't write to destination config file."; 
 
 $old_res =~ /(\d+)x(\d+)/; $old_x = $1; $old_y = $2;
 $new_res =~ /(\d+)x(\d+)/; $new_x = $1; $new_y = $2;
diff -Naur splashutils-1.5.2.1-old/test/test_parser.c splashutils-1.5.2.1-new/test/test_parser.c
--- splashutils-1.5.2.1-old/test/test_parser.c	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/test/test_parser.c	2007-09-23 11:01:10.000000000 -0700
@@ -125,6 +125,7 @@
 		test_parse(parse_icon, false, icons_err[i], 4);
 	}
 
+#if WANT_MNG
 	for (i = 0; i < ARRAY_SIZE(anims_ok); i++) {
 		test_parse(parse_anim, true, anims_ok[i], 4);
 	}
@@ -132,7 +133,9 @@
 	for (i = 0; i < ARRAY_SIZE(anims_err); i++) {
 		test_parse(parse_anim, false, anims_err[i], 4);
 	}
+#endif
 
+#if WANT_TTF
 	for (i = 0; i < ARRAY_SIZE(text_ok); i++) {
 		test_parse(parse_text, true, text_ok[i], 4);
 	}
@@ -140,6 +143,7 @@
 	for (i = 0; i < ARRAY_SIZE(text_err); i++) {
 		test_parse(parse_text, false, text_err[i], 4);
 	}
+#endif
 
 	for (i = 0; i < ARRAY_SIZE(box_ok); i++) {
 		test_parse(parse_box, true, box_ok[i], 3);
diff -Naur splashutils-1.5.2.1-old/util.c splashutils-1.5.2.1-new/util.c
--- splashutils-1.5.2.1-old/util.c	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/util.c	2007-09-23 11:01:10.000000000 -0700
@@ -61,7 +61,7 @@
 void usage(void)
 {
 	printf(
-"splash_util/splashutils-" PKG_VERSION "\n"
+"splash_util/splashutils-" PACKAGE_VERSION "\n"
 "Usage: splash_util [options] -c <cmd>\n\n"
 "Commands:\n"
 #ifdef CONFIG_DEPRECATED
diff -Naur splashutils-1.5.2.1-old/util.h splashutils-1.5.2.1-new/util.h
--- splashutils-1.5.2.1-old/util.h	2007-09-23 10:57:15.000000000 -0700
+++ splashutils-1.5.2.1-new/util.h	2007-09-23 11:01:10.000000000 -0700
@@ -12,7 +12,7 @@
 #include <linux/fb.h>
 #include <limits.h>
 
-#include "objs/fbsplash.h"
+#include "fbsplash.h"
 
 /* XXX:
  * It should be perfectly OK to include sys/vt.h when building the kernel
@@ -30,8 +30,8 @@
 #define PATH_SYS	"/sys"
 
 #if defined(TARGET_KERNEL)
-	#define PATH_SYS	"/lib/splash/sys"
-	#define PATH_PROC	"/lib/splash/proc"
+	#define PATH_SYS	FBSPLASH_DIR"/sys"
+	#define PATH_PROC	FBSPLASH_DIR"/proc"
 #endif
 
 /* Useful short-named types */
