diff -Naur mythtv-0.19-old/libs/libmythtv/vsync.cpp mythtv-0.19-new/libs/libmythtv/vsync.cpp
--- mythtv-0.19-old/libs/libmythtv/vsync.cpp	2005-11-04 15:02:20.000000000 -0800
+++ mythtv-0.19-new/libs/libmythtv/vsync.cpp	2006-12-31 18:23:29.000000000 -0800
@@ -435,12 +435,64 @@
     UpdateNexttrigger();
 }
 
+#ifdef USING_OPENGL_VSYNC
+class OpenGLVideoSyncPrivate
+{
+  public:
+    OpenGLVideoSyncPrivate()
+    {
+        m_glXGetVideoSyncSGI = (PFNGLXGETVIDEOSYNCSGIPROC)
+                glXGetProcAddress("glXGetVideoSyncSGI");
+        m_glXWaitVideoSyncSGI = (PFNGLXWAITVIDEOSYNCSGIPROC)
+                glXGetProcAddress("glXWaitVideoSyncSGI");
+    }
+
+    bool funcsLoaded()
+    {
+        return m_glXGetVideoSyncSGI && m_glXWaitVideoSyncSGI;
+    }
+
+  public:
+    int glXGetVideoSyncSGI(unsigned int *count)
+    {
+        return m_glXGetVideoSyncSGI(count);
+    }
+
+    int glXWaitVideoSyncSGI(int divisor, int remainder, unsigned int *count)
+    {
+        return m_glXWaitVideoSyncSGI(divisor, remainder, count);
+    }
+
+  private:
+    __GLXextFuncPtr glXGetProcAddress(const char * const procName)
+    {
+        __GLXextFuncPtr ret = glXGetProcAddressARB((const GLubyte *) procName);
+
+        if (!ret)
+        {
+            VERBOSE(VB_PLAYBACK,
+                    QString("Error: glXGetProcAddressARB unable to find %1")
+                    .arg(procName));
+        }
+
+        return ret;
+    }
+
+  private:
+    PFNGLXGETVIDEOSYNCSGIPROC m_glXGetVideoSyncSGI;
+    PFNGLXWAITVIDEOSYNCSGIPROC m_glXWaitVideoSyncSGI;
+};
+#endif // USING_OPENGL_VSYNC
+
 OpenGLVideoSync::OpenGLVideoSync(VideoOutput *video_output,
                                  int frame_interval, int refresh_interval,
                                  bool interlaced)
     : VideoSync(video_output, frame_interval, refresh_interval, interlaced),
-      m_drawable(0), m_context(0)
+      m_drawable(0), m_context(0), m_imp(0)
 {
+#ifdef USING_OPENGL_VSYNC
+    m_imp = new OpenGLVideoSyncPrivate;
+#endif // USING_OPENGL_VSYNC
 }
 
 OpenGLVideoSync::~OpenGLVideoSync()
@@ -455,6 +507,7 @@
         if (m_drawable)
             X11S(XDestroyWindow(vo->XJ_disp, m_drawable));
     }
+    delete m_imp;
 #endif /* USING_OPENGL_VSYNC */
 }
 
@@ -501,6 +554,12 @@
         return false;
     }
 
+    if (!m_imp->funcsLoaded())
+    {
+       VERBOSE(VB_PLAYBACK, QString("GL sync functions not found"));
+       return false;
+    }
+
     int attribList[] = {GLX_RGBA, 
                         GLX_RED_SIZE, 1,
                         GLX_GREEN_SIZE, 1,
@@ -550,7 +609,7 @@
     if (ret != False)
     {
         unsigned int count;
-        X11S(ret = glXGetVideoSyncSGI(&count));
+        X11S(ret = m_imp->glXGetVideoSyncSGI(&count));
         if (ret == 0)
         {
             VERBOSE(VB_PLAYBACK, "Using OpenGLVideoSync");
@@ -629,9 +688,9 @@
 
     // Wait for a refresh so we start out synched
     unsigned int count;
-    err = glXGetVideoSyncSGI(&count);
+    err = m_imp->glXGetVideoSyncSGI(&count);
     checkGLSyncError("OpenGLVideoSync::Start(): Frame Number Query", err);
-    err = glXWaitVideoSyncSGI(2, (count+1)%2 ,&count);
+    err = m_imp->glXWaitVideoSyncSGI(2, (count+1)%2 ,&count);
     checkGLSyncError("OpenGLVideoSync::Start(): A/V Sync", err);
 
     // Initialize next trigger 
@@ -647,13 +706,13 @@
     OffsetTimeval(m_nexttrigger, sync_delay);
 
     unsigned int frameNum = 0;
-    int err = glXGetVideoSyncSGI(&frameNum);
+    int err = m_imp->glXGetVideoSyncSGI(&frameNum);
     checkGLSyncError("Frame Number Query", err);
 
     // Always sync to the next retrace execpt when we are very late.
     if ((m_delay = CalcDelay()) > -(m_refresh_interval/2)) 
     {
-        err = glXWaitVideoSyncSGI(2, (frameNum+1)%2 ,&frameNum);
+        err = m_imp->glXWaitVideoSyncSGI(2, (frameNum+1)%2 ,&frameNum);
         checkGLSyncError(msg1, err);
         m_delay = CalcDelay();
     }
@@ -662,7 +721,7 @@
     if (m_delay > 0)
     {
         uint n = m_delay / m_refresh_interval + 1;
-        err = glXWaitVideoSyncSGI((n+1), (frameNum+n)%(n+1), &frameNum);
+        err = m_imp->glXWaitVideoSyncSGI((n+1), (frameNum+n)%(n+1), &frameNum);
         checkGLSyncError(msg2, err);
         m_delay = CalcDelay();
     }
diff -Naur mythtv-0.19-old/libs/libmythtv/vsync.h mythtv-0.19-new/libs/libmythtv/vsync.h
--- mythtv-0.19-old/libs/libmythtv/vsync.h	2005-11-03 12:10:04.000000000 -0800
+++ mythtv-0.19-new/libs/libmythtv/vsync.h	2006-12-31 18:23:29.000000000 -0800
@@ -214,6 +214,8 @@
   private:
     GLXDrawable m_drawable;
     GLXContext  m_context;
+  private:
+    class OpenGLVideoSyncPrivate *m_imp;
 };
 
 #ifdef __linux__
