diff -Naur mythtv-15728-old/programs/mythfrontend/globalsettings.cpp mythtv-15728-new/programs/mythfrontend/globalsettings.cpp
--- mythtv-15728-old/programs/mythfrontend/globalsettings.cpp	2008-02-02 10:32:17.000000000 -0800
+++ mythtv-15728-new/programs/mythfrontend/globalsettings.cpp	2008-02-02 10:35:26.000000000 -0800
@@ -56,7 +56,7 @@
     }
 #endif
 #ifdef USING_ALSA
-    gc->addSelection("ALSA:default",       "ALSA:default");
+    gc->addSelection("ALSA:default",       "ALSA:default", true);
     gc->addSelection("ALSA:surround51",    "ALSA:surround51");
     gc->addSelection("ALSA:analog",        "ALSA:analog");
     gc->addSelection("ALSA:digital",       "ALSA:digital");
@@ -131,7 +131,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("MythControlsVolume");
     gc->setLabel(QObject::tr("Use internal volume controls"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("MythTV can control the PCM and master "
                     "mixer volume.  If you prefer to use an external mixer "
                     "program, then disable this option."));
@@ -154,7 +154,7 @@
     }
 #endif
 #ifdef USING_ALSA
-    gc->addSelection("ALSA:default", "ALSA:default");
+    gc->addSelection("ALSA:default", "ALSA:default", true);
 #endif
 #ifdef USING_DIRECTX
     gc->addSelection("DirectX:", "DirectX:");
@@ -247,7 +247,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("DecodeExtraAudio");
     gc->setLabel(QObject::tr("Extra audio buffering"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("Enable this setting if MythTV is playing "
                     "\"crackly\" audio and you are using hardware encoding. "
                     "This setting will have no effect "
@@ -1440,7 +1440,7 @@
     gc->setLabel(QObject::tr("Sort Episodes"));
     gc->addSelection(QObject::tr("Record date"), "Date");
     gc->addSelection(QObject::tr("Original Air date"), "OrigAirDate");
-    gc->addSelection(QObject::tr("Program ID"), "Id");
+    gc->addSelection(QObject::tr("Program ID"), "Id", true);
     gc->setHelpText(QObject::tr("Selects how to sort a shows episodes"));
     return gc;
 }
@@ -1449,7 +1449,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("StickyKeys");
     gc->setLabel(QObject::tr("Sticky keys"));
-    gc->setValue(false);
+    gc->setValue(true);
     gc->setHelpText(QObject::tr("If enabled, fast forward and rewind "
                     "continue after the key is released.  Pressing the key "
                     "again increases the fast forward or rewind speed.  The "
@@ -1903,7 +1903,7 @@
     HostComboBox *gc = new HostComboBox("PlaybackExitPrompt");
     gc->setLabel(QObject::tr("Action on playback exit"));
     gc->addSelection(QObject::tr("Just exit"), "0");
-    gc->addSelection(QObject::tr("Save position and exit"), "2");
+    gc->addSelection(QObject::tr("Save position and exit"), "2", true);
     gc->addSelection(QObject::tr("Always prompt (excluding Live TV)"), "1");
     gc->addSelection(QObject::tr("Always prompt (including Live TV)"), "4");
     gc->addSelection(QObject::tr("Prompt for Live TV only"), "8");
@@ -1918,7 +1918,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("EndOfRecordingExitPrompt");
     gc->setLabel(QObject::tr("Prompt at end of recording"));
-    gc->setValue(false);
+    gc->setValue(true);
     gc->setHelpText(QObject::tr("If set, a menu will be displayed allowing "
                     "you to delete the recording when it has finished "
                     "playing."));
@@ -1993,7 +1993,7 @@
 {
     HostCheckBox *gc = new HostCheckBox("PlaybackPreview");
     gc->setLabel(QObject::tr("Display live preview of recordings"));
-    gc->setValue(true);
+    gc->setValue(false);
     gc->setHelpText(QObject::tr("When enabled, a preview of the recording "
                     "will play in a small window on the \"Watch a "
                     "Recording\" menu."));
@@ -2042,7 +2042,7 @@
     HostComboBox *gc = new HostComboBox("AllowQuitShutdown");
     gc->setLabel(QObject::tr("System Exit key"));
     gc->addSelection(QObject::tr("ESC"), "4");
-    gc->addSelection(QObject::tr("No exit key"), "0");
+    gc->addSelection(QObject::tr("No exit key"), "0", true);
     gc->addSelection(QObject::tr("Control-ESC"), "1");
     gc->addSelection(QObject::tr("Meta-ESC"), "2");
     gc->addSelection(QObject::tr("Alt-ESC"), "3");
@@ -2097,7 +2097,7 @@
 {
     HostLineEdit *ge = new HostLineEdit("HaltCommand");
     ge->setLabel(QObject::tr("Halt command"));
-    ge->setValue("halt");
+    ge->setValue("poweroff");
     ge->setHelpText(QObject::tr("Command or script to run if you select "
                     "the shutdown option from the exit menu, if the option "
                     "is displayed. You must configure an exit key to "
@@ -2798,7 +2798,7 @@
     GlobalCheckBox *bc = new GlobalCheckBox("LastFreeCard");
     bc->setLabel(QObject::tr("Avoid conflicts between live TV and "
                  "scheduled shows"));
-    bc->setValue(false);
+    bc->setValue(true);
     bc->setHelpText(QObject::tr("If enabled, live TV will choose a tuner card "
                     "that is less likely to have scheduled recordings "
                     "rather than the best card available."));
@@ -2875,7 +2875,8 @@
     gc->addSelection(QObject::tr("Blender - Transparent (CPU Usage - Middle)"),
                      QString::number((int)UIGuideType::Dense));
     gc->addSelection(QObject::tr("Eco - Transparent (CPU Usage - Low)"),
-                     QString::number((int)UIGuideType::Eco));
+                     QString::number((int)UIGuideType::Eco),
+                     true);
     gc->addSelection(QObject::tr("Solid (CPU Usage - Middle)"),
                      QString::number((int)UIGuideType::Solid));
     return gc;
