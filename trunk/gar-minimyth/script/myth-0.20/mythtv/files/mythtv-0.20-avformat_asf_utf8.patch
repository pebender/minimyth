diff -Naur mythtv-0.20-16082-old/libs/libavformat/asf.c mythtv-0.20-16082-new/libs/libavformat/asf.c
--- mythtv-0.20-16082-old/libs/libavformat/asf.c	2008-09-15 14:08:03.000000000 -0700
+++ mythtv-0.20-16082-new/libs/libavformat/asf.c	2008-09-15 14:08:06.000000000 -0700
@@ -103,17 +103,71 @@
 }
 #endif
 
+// Returns pointer to end of buffer
+char* UTF16toUTF8(int val, char* buf, int buf_size)
+{
+   int bytes, shift;
+   uint32_t in = val;
+   if( in < 0x80 )
+   {
+      if( buf_size > 0 )
+      {
+         *buf++ = in;
+      }
+   }
+   else
+   {
+      bytes = (av_log2(in) + 4) / 5;
+      if( bytes <= buf_size )
+      {
+         shift = (bytes - 1) * 6;
+         *buf++ = (256 - (256 >> bytes)) | (in >> shift);
+         while( shift >= 6 )
+         {
+            shift -= 6;
+            *buf++ = 0x80 | ((in >> shift) & 0x3f);
+         }
+      }
+   }
+
+   return buf;
+}
+
 static void get_str16_nolen(ByteIOContext *pb, int len, char *buf, int buf_size)
 {
     int c;
     char *q;
+    char *rc;
 
     q = buf;
     while (len > 0) {
         c = get_le16(pb);
+        len-=2;
+        if ((q - buf) < buf_size - 1)
+        {
+           rc = UTF16toUTF8( c, q, buf_size-(q-buf) );
+           if( rc == q )
+           {
+              // hit the end of buf
+              break;
+           }
+           q = rc;
+        }
+    }
+    *q = '\0';
+}
+
+static void get_str8_nolen(ByteIOContext *pb, int len, char *buf, int buf_size)
+{
+    int c;
+    char *q;
+
+    q = buf;
+    while (len > 0) {
+        c = get_byte(pb);
         if ((q - buf) < buf_size - 1)
             *q++ = c;
-        len-=2;
+        len-=1;
     }
     *q = '\0';
 }
@@ -361,14 +415,23 @@
                         get_str16_nolen(pb, name_len, name, name_len);
                         value_type = get_le16(pb);
                         value_len = get_le16(pb);
-                        if ((value_type == 0) || (value_type == 1)) // unicode or byte
+                        if( value_type == 0 )
                         {
                                 value = (char *)av_mallocz(value_len);
                                 get_str16_nolen(pb, value_len, value, value_len);
                                 if (strcmp(name,"WM/AlbumTitle")==0) { pstrcpy(s->album, sizeof(s->album), value); }
+                                if (strcmp(name,"WM/Track")==0) s->track = atoi(value) + 1;
+                                if (strcmp(name,"WM/TrackNumber")==0) s->track = atoi(value);
+                                av_free(value);
+                        }
+                        else if( value_type == 1 )
+                        {
+                                // Make lots of extra space for utf8
+                                value = (char *)av_mallocz(value_len*6+1);
+                                get_str8_nolen(pb, value_len, value, value_len);
                                 av_free(value);
                         }
-                        if ((value_type >= 2) && (value_type <= 5)) // boolean or DWORD or QWORD or WORD
+                        else
                         {
                                 if (value_type==2) value_num = get_le32(pb);
                                 if (value_type==3) value_num = get_le32(pb);
