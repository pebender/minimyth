diff -Naur dhcp-4.0.0rc1-old/client/clparse.c dhcp-4.0.0rc1-new/client/clparse.c
--- dhcp-4.0.0rc1-old/client/clparse.c	2007-12-08 11:36:00.000000000 -0800
+++ dhcp-4.0.0rc1-new/client/clparse.c	2007-12-14 17:11:56.000000000 -0800
@@ -1154,6 +1154,11 @@
 		parse_string_list (cfile, &lease -> medium, 0);
 		return;
 
+	      case NEXT_SERVER:
+		if (!parse_ip_addr (cfile, &lease -> next_server))
+			return;
+		break;
+
 	      case FILENAME:
 		parse_string (cfile, &lease -> filename, (unsigned *)0);
 		return;
diff -Naur dhcp-4.0.0rc1-old/client/dhclient.c dhcp-4.0.0rc1-new/client/dhclient.c
--- dhcp-4.0.0rc1-old/client/dhclient.c	2007-11-30 13:51:42.000000000 -0800
+++ dhcp-4.0.0rc1-new/client/dhclient.c	2007-12-14 17:05:33.000000000 -0800
@@ -1364,6 +1364,10 @@
 	memcpy (lease -> address.iabuf, &packet -> raw -> yiaddr,
 		lease -> address.len);
 
+        lease -> next_server.len = sizeof (packet -> raw -> siaddr);
+	memcpy (lease -> next_server.iabuf, &packet -> raw -> siaddr,
+		lease -> next_server.len);
+
 	memset (&data, 0, sizeof data);
 
 	if (client -> config -> vendor_space_name) {
@@ -2637,6 +2641,14 @@
 		++errors;
 		errno = 0;
 	}
+	if (lease -> next_server.len) {
+		fprintf (leaseFile, "  next-server %s;\n",
+		 	piaddr (lease -> next_server));
+		if (errno) {
+			++errors;
+			errno = 0;
+		}
+	}
 	if (lease -> filename) {
 		s = quotify_string (lease -> filename, MDL);
 		if (s) {
@@ -2844,6 +2856,10 @@
 		data_string_forget (&data, MDL);
 	}
 
+	if (lease -> next_server.len)
+		client_envadd (client,
+			       prefix, "next_server", "%s", piaddr (lease -> next_server));
+
 	if (lease -> filename)
 		client_envadd (client,
 			       prefix, "filename", "%s", lease -> filename);
diff -Naur dhcp-4.0.0rc1-old/includes/dhcpd.h dhcp-4.0.0rc1-new/includes/dhcpd.h
--- dhcp-4.0.0rc1-old/includes/dhcpd.h	2007-12-08 11:36:00.000000000 -0800
+++ dhcp-4.0.0rc1-new/includes/dhcpd.h	2007-12-14 17:05:33.000000000 -0800
@@ -874,6 +874,7 @@
 	struct client_lease *next;		      /* Next lease in list. */
 	TIME expiry, renewal, rebind;			  /* Lease timeouts. */
 	struct iaddr address;			    /* Address being leased. */
+	struct iaddr next_server;                  /* Address of boot server */
 	char *server_name;			     /* Name of boot server. */
 	char *filename;		     /* Name of file we're supposed to boot. */
 	struct string_list *medium;			  /* Network medium. */
