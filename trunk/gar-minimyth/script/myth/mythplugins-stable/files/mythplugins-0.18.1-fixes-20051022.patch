diff -Naur mythplugins-0.18.1-old/mythgallery/mythgallery/qtiffio.cpp mythplugins-0.18.1-new/mythgallery/mythgallery/qtiffio.cpp
--- mythplugins-0.18.1-old/mythgallery/mythgallery/qtiffio.cpp	2004-02-02 12:55:37.000000000 -0800
+++ mythplugins-0.18.1-new/mythgallery/mythgallery/qtiffio.cpp	2005-10-22 07:44:15.000000000 -0700
@@ -74,7 +74,7 @@
 /*! \warning always returns MAP_FAILED.
 */
 static int tiff_mmap(thandle_t, tdata_t* ,toff_t* ) {
-  return (int) MAP_FAILED;
+  return (long) MAP_FAILED;
 }
 
 //! QIODevice / libtiff write wrapper
diff -Naur mythplugins-0.18.1-old/mythmusic/mythmusic/vcedit.c mythplugins-0.18.1-new/mythmusic/mythmusic/vcedit.c
--- mythplugins-0.18.1-old/mythmusic/mythmusic/vcedit.c	2004-11-26 01:00:36.000000000 -0800
+++ mythplugins-0.18.1-new/mythmusic/mythmusic/vcedit.c	2005-10-22 07:44:15.000000000 -0700
@@ -6,7 +6,7 @@
  *
  * Comment editing backend, suitable for use by nice frontend interfaces.
  *
- * last modified: $Id: vcedit.c,v 1.1 2004/11/26 09:00:36 thor Exp $
+ * last modified: $Id: vcedit.c 4865 2004-11-26 09:00:36Z thor $
  */
 
 #include <stdio.h>
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/add.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/add.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/add.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/add.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/add.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 /*
  *  See private.h for the more commonly used macro versions.
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/code.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/code.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/code.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/code.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/code.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include	"config.h"
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/config.h mythplugins-0.18.1-new/mythphone/mythphone/gsm/config.h
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/config.h	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/config.h	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/*$Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/config.h,v 1.1 2004/11/04 22:31:01 paulv Exp $*/
+/*$Header$*/
 
 #ifndef	CONFIG_H
 #define	CONFIG_H
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/debug.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/debug.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/debug.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/debug.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/debug.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "private.h"
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/decode.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/decode.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/decode.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/decode.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/decode.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include <stdio.h>
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_create.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_create.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_create.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_create.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-static char const	ident[] = "$Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_create.c,v 1.1 2004/11/04 22:31:01 paulv Exp $";
+static char const	ident[] = "$Header$";
 
 #include	"config.h"
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_decode.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_decode.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_decode.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_decode.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_decode.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "private.h"
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_destroy.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_destroy.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_destroy.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_destroy.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_destroy.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "gsm.h"
 #include "config.h"
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_encode.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_encode.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_encode.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_encode.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_encode.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "private.h"
 #include "gsm.h"
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_explode.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_explode.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_explode.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_explode.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_explode.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "private.h"
 #include "gsm.h"
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm.h mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm.h
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm.h	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm.h	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/*$Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm.h,v 1.1 2004/11/04 22:31:01 paulv Exp $*/
+/*$Header$*/
 
 #ifndef	GSM_H
 #define	GSM_H
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_implode.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_implode.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_implode.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_implode.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_implode.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "private.h"
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_option.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_option.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_option.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_option.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_option.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include "private.h"
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_print.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_print.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/gsm_print.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/gsm_print.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/gsm_print.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include	<stdio.h>
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/long_term.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/long_term.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/long_term.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/long_term.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/long_term.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include <stdio.h>
 #include <assert.h>
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/lpc.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/lpc.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/lpc.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/lpc.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/lpc.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include <stdio.h>
 #include <assert.h>
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/preprocess.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/preprocess.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/preprocess.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/preprocess.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/preprocess.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include	<stdio.h>
 #include	<assert.h>
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/private.h mythplugins-0.18.1-new/mythphone/mythphone/gsm/private.h
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/private.h	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/private.h	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/*$Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/private.h,v 1.1 2004/11/04 22:31:01 paulv Exp $*/
+/*$Header$*/
 
 #ifndef	PRIVATE_H
 #define	PRIVATE_H
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/proto.h mythplugins-0.18.1-new/mythphone/mythphone/gsm/proto.h
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/proto.h	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/proto.h	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/*$Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/proto.h,v 1.1 2004/11/04 22:31:01 paulv Exp $*/
+/*$Header$*/
 
 #ifndef	PROTO_H
 #define	PROTO_H
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/rpe.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/rpe.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/rpe.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/rpe.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/rpe.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include <stdio.h>
 #include <assert.h>
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/short_term.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/short_term.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/short_term.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/short_term.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/short_term.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 #include <stdio.h>
 #include <assert.h>
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/table.c mythplugins-0.18.1-new/mythphone/mythphone/gsm/table.c
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/table.c	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/table.c	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/* $Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/table.c,v 1.1 2004/11/04 22:31:01 paulv Exp $ */
+/* $Header$ */
 
 /*  Most of these tables are inlined at their point of use.
  */
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm/unproto.h mythplugins-0.18.1-new/mythphone/mythphone/gsm/unproto.h
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm/unproto.h	2004-11-04 14:31:01.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm/unproto.h	2005-10-22 07:44:15.000000000 -0700
@@ -4,7 +4,7 @@
  * details.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.
  */
 
-/*$Header: /var/lib/mythcvs/mythplugins/mythphone/mythphone/gsm/unproto.h,v 1.1 2004/11/04 22:31:01 paulv Exp $*/
+/*$Header$*/
 
 #ifdef	PROTO_H		/* sic */
 #undef	PROTO_H
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/gsm.cpp mythplugins-0.18.1-new/mythphone/mythphone/gsm.cpp
--- mythplugins-0.18.1-old/mythphone/mythphone/gsm.cpp	2005-01-02 05:14:35.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/gsm.cpp	2005-10-22 07:44:15.000000000 -0700
@@ -14,25 +14,25 @@
 #include <stdio.h>
 #include <string.h>
 #include <errno.h>
-#include <iostream>
-
-#ifndef WIN32
+#include <iostream>
+
+#ifndef WIN32
 #include <unistd.h>
 #include <fcntl.h>                                     
 #include <sys/ioctl.h>
 
 #include <mythtv/mythcontext.h>
 #include "config.h"
-#endif
+#endif
 
 #include "rtp.h"
 #include "g711.h"
 
 extern "C" {
 #include "gsm/gsm.h"
-}
-
-using namespace std;
+}
+
+using namespace std;
 
 
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/h263.cpp mythplugins-0.18.1-new/mythphone/mythphone/h263.cpp
--- mythplugins-0.18.1-old/mythphone/mythphone/h263.cpp	2005-01-02 05:15:56.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/h263.cpp	2005-10-22 07:44:15.000000000 -0700
@@ -8,16 +8,16 @@
   TODO:-
     These are non reentrant so need a mutex implemented, if they are to be used elsewhere in the Myth frontend
 */
-#include <qapplication.h>
-#include <qimage.h>
+#include <qapplication.h>
+#include <qimage.h>
 
 #include <iostream>
 using namespace std;
-
+
 #ifndef WIN32
 #include <linux/videodev.h>
-#include "config.h"
-#endif
+#include "config.h"
+#endif
 
 #include "h263.h"
 
@@ -382,7 +382,7 @@
     {
         cout << "YUV crop fn does not handle odd sizes; x,y=" << cx << "," << cy << "  w,h=" << cw << "," << ch << endl;
         return;
-    }
+    }
 
     int h;
     const unsigned char *srcy, *srcu, *srcv;
@@ -444,92 +444,92 @@
 }
 
 
-void flipYuv420pImage(const uchar *yuvBuffer, int w, int h, uchar *dst)
-{
-    int h1;
-
-    // Copy Y plane
-    const unsigned char *srcy = yuvBuffer + (w*(h-1)); 
-    for (h1=0; h1<h; h1++) 
-    {
-        memcpy(dst, srcy, w);
-        dst += w;
-        srcy -= w;
-    }
-
-    // Copy U&V planes
-    const unsigned char *srcu = yuvBuffer + (w*h) + (w*(h-2)/4); 
-    const unsigned char *srcv = yuvBuffer + (w*h) + (w*h/4) + (w*(h-2)/4); 
-    uchar *dstu = dst;
-    uchar *dstv = dst+(w*h/4);
-    w /= 2;
-    h /= 2;
-    for (h1=0; h1<h; h1++) 
-    {
-        memcpy(dstu, srcu, w);
-        dstu += w;
-        srcu -= w;
-        memcpy(dstv, srcv, w);
-        dstv += w;
-        srcv -= w;
-    }
-}
-
-
-void flipYuv422pImage(const uchar *yuvBuffer, int w, int h, uchar *dst)
-{
-    int h1;
-
-    // Copy Y plane
-    const unsigned char *srcy = yuvBuffer + (w*(h-1)); 
-    for (h1=0; h1<h; h1++) 
-    {
-        memcpy(dst, srcy, w);
-        dst += w;
-        srcy -= w;
-    }
-
-    // Copy U&V planes
-    const unsigned char *srcu = yuvBuffer + (w*h) + (w*(h-1)/2); 
-    const unsigned char *srcv = yuvBuffer + (w*h) + (w*h/2) + (w*(h-1)/2); 
-    uchar *dstu = dst;
-    uchar *dstv = dst+(w*h/2);
-    w /= 2;
-    for (h1=0; h1<h; h1++) 
-    {
-        memcpy(dstu, srcu, w);
-        dstu += w;
-        srcu -= w;
-        memcpy(dstv, srcv, w);
-        dstv += w;
-        srcv -= w;
-    }
-}
-
-
-void flipRgb32Image(const uchar *rgbBuffer, int w, int h, uchar *dst)
-{
-    w *= 4;
-    const unsigned char *src = rgbBuffer + (w*(h-1)); 
-    for (int h1=0; h1<h; h1++) 
-    {
-        memcpy(dst, src, w);
-        dst += w;
-        src -= w;
-    }
-}
-
-
-void flipRgb24Image(const uchar *rgbBuffer, int w, int h, uchar *dst)
-{
-    w *= 3;
-    const unsigned char *src = rgbBuffer + (w*(h-1)); 
-    for (int h1=0; h1<h; h1++) 
-    {
-        memcpy(dst, src, w);
-        dst += w;
-        src -= w;
-    }
-}
-
-
+void flipYuv420pImage(const uchar *yuvBuffer, int w, int h, uchar *dst)
+{
+    int h1;
+
+    // Copy Y plane
+    const unsigned char *srcy = yuvBuffer + (w*(h-1)); 
+    for (h1=0; h1<h; h1++) 
+    {
+        memcpy(dst, srcy, w);
+        dst += w;
+        srcy -= w;
+    }
+
+    // Copy U&V planes
+    const unsigned char *srcu = yuvBuffer + (w*h) + (w*(h-2)/4); 
+    const unsigned char *srcv = yuvBuffer + (w*h) + (w*h/4) + (w*(h-2)/4); 
+    uchar *dstu = dst;
+    uchar *dstv = dst+(w*h/4);
+    w /= 2;
+    h /= 2;
+    for (h1=0; h1<h; h1++) 
+    {
+        memcpy(dstu, srcu, w);
+        dstu += w;
+        srcu -= w;
+        memcpy(dstv, srcv, w);
+        dstv += w;
+        srcv -= w;
+    }
+}
+
+
+void flipYuv422pImage(const uchar *yuvBuffer, int w, int h, uchar *dst)
+{
+    int h1;
+
+    // Copy Y plane
+    const unsigned char *srcy = yuvBuffer + (w*(h-1)); 
+    for (h1=0; h1<h; h1++) 
+    {
+        memcpy(dst, srcy, w);
+        dst += w;
+        srcy -= w;
+    }
+
+    // Copy U&V planes
+    const unsigned char *srcu = yuvBuffer + (w*h) + (w*(h-1)/2); 
+    const unsigned char *srcv = yuvBuffer + (w*h) + (w*h/2) + (w*(h-1)/2); 
+    uchar *dstu = dst;
+    uchar *dstv = dst+(w*h/2);
+    w /= 2;
+    for (h1=0; h1<h; h1++) 
+    {
+        memcpy(dstu, srcu, w);
+        dstu += w;
+        srcu -= w;
+        memcpy(dstv, srcv, w);
+        dstv += w;
+        srcv -= w;
+    }
+}
+
+
+void flipRgb32Image(const uchar *rgbBuffer, int w, int h, uchar *dst)
+{
+    w *= 4;
+    const unsigned char *src = rgbBuffer + (w*(h-1)); 
+    for (int h1=0; h1<h; h1++) 
+    {
+        memcpy(dst, src, w);
+        dst += w;
+        src -= w;
+    }
+}
+
+
+void flipRgb24Image(const uchar *rgbBuffer, int w, int h, uchar *dst)
+{
+    w *= 3;
+    const unsigned char *src = rgbBuffer + (w*(h-1)); 
+    for (int h1=0; h1<h; h1++) 
+    {
+        memcpy(dst, src, w);
+        dst += w;
+        src -= w;
+    }
+}
+
+
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/md5digest.cpp mythplugins-0.18.1-new/mythphone/mythphone/md5digest.cpp
--- mythplugins-0.18.1-old/mythphone/mythphone/md5digest.cpp	2004-11-26 18:27:45.000000000 -0800
+++ mythplugins-0.18.1-new/mythphone/mythphone/md5digest.cpp	2005-10-22 07:44:15.000000000 -0700
@@ -33,10 +33,10 @@
 
 #include <string.h>		/* for memcpy() */
 #include <sys/types.h>		/* for stupid systems */
-#ifndef WIN32
+#ifndef WIN32
 #include <netinet/in.h>		/* for ntohl() */
-#endif
-
+#endif
+
 #include "md5digest.h"
 
 
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/sipfsm.h mythplugins-0.18.1-new/mythphone/mythphone/sipfsm.h
--- mythplugins-0.18.1-old/mythphone/mythphone/sipfsm.h	2005-04-05 15:15:30.000000000 -0700
+++ mythplugins-0.18.1-new/mythphone/mythphone/sipfsm.h	2005-10-22 07:44:15.000000000 -0700
@@ -201,8 +201,8 @@
 #define SIP_DISCONNECTING_BYE             (SIP_DISCONNECTING | SIP_BYE)
 #define SIP_CONNECTED_MODIFYSESSION       (SIP_CONNECTED     | SIP_MODIFYSESSION)
 #define SIP_CONNECTED_INVITE              (SIP_CONNECTED     | SIP_INVITE)
-#define SIP_CONNMOD1_INVITESTATUS_1xx     (SIP_CONNECT_MODIFYING1 | SIP_INVITESTATUS_1xx)
-#define SIP_CONNMOD1_INVITESTATUS_2xx     (SIP_CONNECT_MODIFYING1 | SIP_INVITESTATUS_2xx)
+#define SIP_CONNMOD1_INVITESTATUS_1xx     (SIP_CONNECT_MODIFYING1 | SIP_INVITESTATUS_1xx)
+#define SIP_CONNMOD1_INVITESTATUS_2xx     (SIP_CONNECT_MODIFYING1 | SIP_INVITESTATUS_2xx)
 #define SIP_CONNMOD1_INVITESTATUS_3456    (SIP_CONNECT_MODIFYING1 | SIP_INVITESTATUS_3456xx)
 #define SIP_CONNMOD1_RETX                 (SIP_CONNECT_MODIFYING1 | SIP_RETX)
 #define SIP_CONNMOD2_ACK                  (SIP_CONNECT_MODIFYING2 | SIP_ACK)
@@ -470,7 +470,7 @@
             { ip=remoteIp; aport=remoteAudioPort; vport=remoteVideoPort; audPay = CodecList[audioPayloadIdx].Payload; 
               audCodec = CodecList[audioPayloadIdx].Encoding; dtmfPay = dtmfPayload; vidPay = videoPayload; 
               vidCodec = (vidPay == 34 ? "H263" : ""); vidRes = rxVideoResolution; }
-    bool ModifyCodecs(QString audioCodec, QString videoCodec);
+    bool ModifyCodecs(QString audioCodec, QString videoCodec);
 
   private:
     int       State;
@@ -509,7 +509,7 @@
     int     videoPayload;
     int     dtmfPayload;
     bool    allowVideo;
-    bool    disableNat;
+    bool    disableNat;
     int     ModifyAudioCodec;
 
     QString myDisplayName;	// The name to display when I call others
diff -Naur mythplugins-0.18.1-old/mythphone/mythphone/tone.cpp mythplugins-0.18.1-new/mythphone/mythphone/tone.cpp
--- mythplugins-0.18.1-old/mythphone/mythphone/tone.cpp	2005-04-05 15:15:30.000000000 -0700
+++ mythplugins-0.18.1-new/mythphone/mythphone/tone.cpp	2005-10-22 07:44:15.000000000 -0700
@@ -5,46 +5,46 @@
 	
   Simple class to handle creation of audio tones
 */
-#include <qapplication.h>
-#include <qfile.h>
-#include <qdialog.h>   
-#include <qcursor.h>
-#include <qdir.h>
-
-#include <stdio.h>
-#include <string.h>
-#include <errno.h>
-#include <iostream>
-#include <math.h>
-
-#ifndef WIN32
-#include <netinet/in.h>
-#include <linux/soundcard.h>
-#include <unistd.h>
-#include <fcntl.h>                                     
-#include <sys/ioctl.h>
-#include <net/if.h>
-#include <linux/sockios.h>
-#include <mythtv/mythcontext.h>
-#include "config.h"
-#include "phoneui.h"
-#else
-#include <io.h>
-#include <winsock2.h>
-#include <sstream>
-#include "gcontext.h"
-#endif
-
-#include "webcam.h"
-#include "sipfsm.h"
-#include "tone.h"
-
-using namespace std;
-
-
-#ifndef M_PI
-#define M_PI 3.1415926
-#endif
+#include <qapplication.h>
+#include <qfile.h>
+#include <qdialog.h>   
+#include <qcursor.h>
+#include <qdir.h>
+
+#include <stdio.h>
+#include <string.h>
+#include <errno.h>
+#include <iostream>
+#include <math.h>
+
+#ifndef WIN32
+#include <netinet/in.h>
+#include <linux/soundcard.h>
+#include <unistd.h>
+#include <fcntl.h>                                     
+#include <sys/ioctl.h>
+#include <net/if.h>
+#include <linux/sockios.h>
+#include <mythtv/mythcontext.h>
+#include "config.h"
+#include "phoneui.h"
+#else
+#include <io.h>
+#include <winsock2.h>
+#include <sstream>
+#include "gcontext.h"
+#endif
+
+#include "webcam.h"
+#include "sipfsm.h"
+#include "tone.h"
+
+using namespace std;
+
+
+#ifndef M_PI
+#define M_PI 3.1415926
+#endif
 
 
 
@@ -263,7 +263,7 @@
 }
 
 void Tone::audioTimerExpiry()
-{
+{
 #ifndef WIN32
     if ((Loop || (playPtr != 0)) && (hSpeaker >= 0))
     {
@@ -286,7 +286,7 @@
     }
     else 
         Stop();
-#endif
+#endif
 }
 
 void Tone::Stop()
@@ -322,16 +322,16 @@
     wfx.nSamplesPerSec = 8000;
     wfx.wBitsPerSample = 16;
     wfx.wFormatTag = WAVE_FORMAT_PCM;
-
-    unsigned int SpeakerDevice = WAVE_MAPPER;
-    WAVEOUTCAPS AudioCap;
-    int numAudioDevs = waveOutGetNumDevs();
-    for (int i=0; i<=numAudioDevs; i++)
-    {
-        MMRESULT err = waveOutGetDevCaps(i, &AudioCap, sizeof(AudioCap));
-        if ((err == MMSYSERR_NOERROR) && (devName == AudioCap.szPname))
-            SpeakerDevice = i;
-    }
+
+    unsigned int SpeakerDevice = WAVE_MAPPER;
+    WAVEOUTCAPS AudioCap;
+    int numAudioDevs = waveOutGetNumDevs();
+    for (int i=0; i<=numAudioDevs; i++)
+    {
+        MMRESULT err = waveOutGetDevCaps(i, &AudioCap, sizeof(AudioCap));
+        if ((err == MMSYSERR_NOERROR) && (devName == AudioCap.szPname))
+            SpeakerDevice = i;
+    }
 
     if (dwResult = waveOutOpen(&hSpeaker, SpeakerDevice, &wfx, 0, 0L, WAVE_FORMAT_QUERY))
         return;
diff -Naur mythplugins-0.18.1-old/mythvideo/mythvideo/videoscan.cpp mythplugins-0.18.1-new/mythvideo/mythvideo/videoscan.cpp
--- mythplugins-0.18.1-old/mythvideo/mythvideo/videoscan.cpp	2005-03-04 13:23:28.000000000 -0800
+++ mythplugins-0.18.1-new/mythvideo/mythvideo/videoscan.cpp	2005-10-22 07:44:15.000000000 -0700
@@ -1,228 +1,228 @@
-#include <qdir.h>
-#include <qimage.h>
-#include <iostream>
-using namespace std;
-
-#include "videoscan.h"
-#include "metadata.h"
-#include <mythtv/mythcontext.h>
-#include <mythtv/mythdbcon.h>
-#include <mythtv/mythdialogs.h>
-
-
-
-VideoScanner::VideoScanner()
-{
-    m_RemoveAll = false;
-    m_KeepAll = false;
-    m_ListUnknown = gContext->GetNumSetting("VideoListUnknownFileTypes", 1);
-}
-
-void VideoScanner::doScan(const QString& videoDirs)
-{
-    QStringList imageExtensions = QImage::inputFormatList();
-    int counter = 0;
-
-    
-    QStringList dirs = QStringList::split(":", videoDirs);
-    QStringList::iterator iter;
-        
-    MythProgressDialog progressDlg(QObject::tr("Searching for video files"),
-                                   dirs.size());
-    
-    for (iter = dirs.begin(); iter != dirs.end(); iter++)
-    {
-        buildFileList( *iter, imageExtensions );
-        progressDlg.setProgress(++counter);
-    }
-    
-    progressDlg.close();
-    verifyFiles();
-    updateDB();
-}
-
-
-void VideoScanner::promptForRemoval(const QString& filename)
-{
-    if (m_RemoveAll)
-        Metadata::purgeByFilename(filename);
-    
-    if (m_KeepAll || m_RemoveAll)
-        return;
-    
-    QStringList buttonText;
-    buttonText += QObject::tr("No");
-    buttonText += QObject::tr("No to all");
-    buttonText += QObject::tr("Yes");
-    buttonText += QObject::tr("Yes to all");
-    
-            
-    int result = MythPopupBox::showButtonPopup(gContext->GetMainWindow(), QObject::tr("File Missing"),
-                                               QString(QObject::tr("%1 appears to be missing.\nRemove it"  
-                                                                   " from the database?")).arg(filename),
-                                               buttonText, 1 );
-    switch (result)
-    {
-        case 1:
-            m_KeepAll = true;
-            break;            
-        case 2:
-            Metadata::purgeByFilename(filename);
-            break;
-        case 3:
-            m_RemoveAll = true;
-            Metadata::purgeByFilename(filename);
-            break;
-    };                                               
-    
-}
-
-
-void VideoScanner::updateDB()
-{
-    int counter = 0;
-    MSqlQuery query(MSqlQuery::InitCon());
-    MythProgressDialog progressDlg(QObject::tr("Updating video database"), 
-                                   m_VideoFiles.size());
-    VideoLoadedMap::Iterator iter;
-    
-    for (iter = m_VideoFiles.begin(); iter != m_VideoFiles.end(); iter++)
-    {
-        if (*iter == kFileSystem)
-        {
-            Metadata newFile(iter.key(), QObject::tr("No Cover"), "", 1895, 
-                             "00000000", QObject::tr("Unknown"), 
-                             QObject::tr("None"), 0.0, QObject::tr("NR"), 
-                             0, 0, 1);
-            
-            newFile.guessTitle();
-            newFile.dumpToDatabase();
-        }
-        
-        if (*iter == kDatabase)
-        {
-            promptForRemoval( iter.key() );
-        }
-
-        progressDlg.setProgress(++counter);
-    }
-    
-    progressDlg.Close();
-}
-
-
-void VideoScanner::verifyFiles()
-{
-    int counter = 0;
-    VideoLoadedMap::Iterator iter;
-    
-    // Get the list of files from the database.                                   
-    MSqlQuery query(MSqlQuery::InitCon());
-    query.exec("SELECT filename FROM videometadata;");
-
-    MythProgressDialog progressDlg(QObject::tr("Verifying video files"),
-                                   query.numRowsAffected());
-    
-    
-    // For every file we know about, check to see if it still exists.
-    if (query.isActive() && query.size() > 0)
-    {
-        while (query.next())
-        {
-            QString name = QString::fromUtf8(query.value(0).toString());
-            if (name != QString::null)
-            {
-                
-                if ((iter = m_VideoFiles.find(name)) != m_VideoFiles.end())
-                {
-                    // If it's both on disk and in the database we're done with it.
-                    m_VideoFiles.remove(iter);
-                } 
-                else
-                {
-                    // If it's only in the database mark it as such for removal later
-                    m_VideoFiles[name] = kDatabase;
-                }
-            }
-            progressDlg.setProgress(++counter);
-        }
-    }
-
-    progressDlg.Close();
-}
- 
-
-
-void VideoScanner::buildFileList(const QString &directory, 
-                                 const QStringList &imageExtensions)
-{
-    QDir d(directory);
-
-    d.setSorting(QDir::DirsFirst | QDir::Name | QDir::IgnoreCase );
-
-    if (!d.exists())
-        return;
-
-    const QFileInfoList *list = d.entryInfoList();
-    if (!list)
-        return;
-
-    QFileInfoListIterator it(*list);
-    QFileInfo *fi;
-    QRegExp r;
-    
-    while ((fi = it.current()) != 0)
-    {
-        ++it;
-        if (fi->fileName() == "." || 
-            fi->fileName() == ".." ||
-            fi->fileName() == "Thumbs.db")
-        {
-            continue;
-        }
-        
-        if(!fi->isDir())
-        {
-            if(ignoreExtension(fi->extension(false)))
-            {
-                continue;
-            }
-        }
-        
-        QString filename = fi->absFilePath();
-        if (fi->isDir())
-            buildFileList(filename, imageExtensions);
-        else
-        {
-            r.setPattern("^" + fi->extension() + "$");
-            r.setCaseSensitive(false);
-            QStringList result = imageExtensions.grep(r);
-
-            if (result.isEmpty())
-                m_VideoFiles[filename] = kFileSystem;
-        }
-    }
-}
-
-
-bool VideoScanner::ignoreExtension(const QString& extension) const
-{
-    MSqlQuery a_query(MSqlQuery::InitCon());
-    a_query.prepare("SELECT f_ignore FROM videotypes WHERE extension = :EXT");
-    a_query.bindValue(":EXT", extension);
-
-    if(a_query.exec() && a_query.isActive() && a_query.size() > 0)
-    {
-        //  This extension is a recognized file type (in the videotypes
-        //  database). Return true only if ignore explicitly set.
-        //
-        a_query.next();
-        return a_query.value(0).toBool();
-    }
-    
-    //
-    //  Otherwise, ignore this file only if the user has a setting to
-    //  ignore unknown file types.
-    //
-    return !m_ListUnknown;
-}
+#include <qdir.h>
+#include <qimage.h>
+#include <iostream>
+using namespace std;
+
+#include "videoscan.h"
+#include "metadata.h"
+#include <mythtv/mythcontext.h>
+#include <mythtv/mythdbcon.h>
+#include <mythtv/mythdialogs.h>
+
+
+
+VideoScanner::VideoScanner()
+{
+    m_RemoveAll = false;
+    m_KeepAll = false;
+    m_ListUnknown = gContext->GetNumSetting("VideoListUnknownFileTypes", 1);
+}
+
+void VideoScanner::doScan(const QString& videoDirs)
+{
+    QStringList imageExtensions = QImage::inputFormatList();
+    int counter = 0;
+
+    
+    QStringList dirs = QStringList::split(":", videoDirs);
+    QStringList::iterator iter;
+        
+    MythProgressDialog progressDlg(QObject::tr("Searching for video files"),
+                                   dirs.size());
+    
+    for (iter = dirs.begin(); iter != dirs.end(); iter++)
+    {
+        buildFileList( *iter, imageExtensions );
+        progressDlg.setProgress(++counter);
+    }
+    
+    progressDlg.close();
+    verifyFiles();
+    updateDB();
+}
+
+
+void VideoScanner::promptForRemoval(const QString& filename)
+{
+    if (m_RemoveAll)
+        Metadata::purgeByFilename(filename);
+    
+    if (m_KeepAll || m_RemoveAll)
+        return;
+    
+    QStringList buttonText;
+    buttonText += QObject::tr("No");
+    buttonText += QObject::tr("No to all");
+    buttonText += QObject::tr("Yes");
+    buttonText += QObject::tr("Yes to all");
+    
+            
+    int result = MythPopupBox::showButtonPopup(gContext->GetMainWindow(), QObject::tr("File Missing"),
+                                               QString(QObject::tr("%1 appears to be missing.\nRemove it"  
+                                                                   " from the database?")).arg(filename),
+                                               buttonText, 1 );
+    switch (result)
+    {
+        case 1:
+            m_KeepAll = true;
+            break;            
+        case 2:
+            Metadata::purgeByFilename(filename);
+            break;
+        case 3:
+            m_RemoveAll = true;
+            Metadata::purgeByFilename(filename);
+            break;
+    };                                               
+    
+}
+
+
+void VideoScanner::updateDB()
+{
+    int counter = 0;
+    MSqlQuery query(MSqlQuery::InitCon());
+    MythProgressDialog progressDlg(QObject::tr("Updating video database"), 
+                                   m_VideoFiles.size());
+    VideoLoadedMap::Iterator iter;
+    
+    for (iter = m_VideoFiles.begin(); iter != m_VideoFiles.end(); iter++)
+    {
+        if (*iter == kFileSystem)
+        {
+            Metadata newFile(iter.key(), QObject::tr("No Cover"), "", 1895, 
+                             "00000000", QObject::tr("Unknown"), 
+                             QObject::tr("None"), 0.0, QObject::tr("NR"), 
+                             0, 0, 1);
+            
+            newFile.guessTitle();
+            newFile.dumpToDatabase();
+        }
+        
+        if (*iter == kDatabase)
+        {
+            promptForRemoval( iter.key() );
+        }
+
+        progressDlg.setProgress(++counter);
+    }
+    
+    progressDlg.Close();
+}
+
+
+void VideoScanner::verifyFiles()
+{
+    int counter = 0;
+    VideoLoadedMap::Iterator iter;
+    
+    // Get the list of files from the database.                                   
+    MSqlQuery query(MSqlQuery::InitCon());
+    query.exec("SELECT filename FROM videometadata;");
+
+    MythProgressDialog progressDlg(QObject::tr("Verifying video files"),
+                                   query.numRowsAffected());
+    
+    
+    // For every file we know about, check to see if it still exists.
+    if (query.isActive() && query.size() > 0)
+    {
+        while (query.next())
+        {
+            QString name = QString::fromUtf8(query.value(0).toString());
+            if (name != QString::null)
+            {
+                
+                if ((iter = m_VideoFiles.find(name)) != m_VideoFiles.end())
+                {
+                    // If it's both on disk and in the database we're done with it.
+                    m_VideoFiles.remove(iter);
+                } 
+                else
+                {
+                    // If it's only in the database mark it as such for removal later
+                    m_VideoFiles[name] = kDatabase;
+                }
+            }
+            progressDlg.setProgress(++counter);
+        }
+    }
+
+    progressDlg.Close();
+}
+ 
+
+
+void VideoScanner::buildFileList(const QString &directory, 
+                                 const QStringList &imageExtensions)
+{
+    QDir d(directory);
+
+    d.setSorting(QDir::DirsFirst | QDir::Name | QDir::IgnoreCase );
+
+    if (!d.exists())
+        return;
+
+    const QFileInfoList *list = d.entryInfoList();
+    if (!list)
+        return;
+
+    QFileInfoListIterator it(*list);
+    QFileInfo *fi;
+    QRegExp r;
+    
+    while ((fi = it.current()) != 0)
+    {
+        ++it;
+        if (fi->fileName() == "." || 
+            fi->fileName() == ".." ||
+            fi->fileName() == "Thumbs.db")
+        {
+            continue;
+        }
+        
+        if(!fi->isDir())
+        {
+            if(ignoreExtension(fi->extension(false)))
+            {
+                continue;
+            }
+        }
+        
+        QString filename = fi->absFilePath();
+        if (fi->isDir())
+            buildFileList(filename, imageExtensions);
+        else
+        {
+            r.setPattern("^" + fi->extension() + "$");
+            r.setCaseSensitive(false);
+            QStringList result = imageExtensions.grep(r);
+
+            if (result.isEmpty())
+                m_VideoFiles[filename] = kFileSystem;
+        }
+    }
+}
+
+
+bool VideoScanner::ignoreExtension(const QString& extension) const
+{
+    MSqlQuery a_query(MSqlQuery::InitCon());
+    a_query.prepare("SELECT f_ignore FROM videotypes WHERE extension = :EXT");
+    a_query.bindValue(":EXT", extension);
+
+    if(a_query.exec() && a_query.isActive() && a_query.size() > 0)
+    {
+        //  This extension is a recognized file type (in the videotypes
+        //  database). Return true only if ignore explicitly set.
+        //
+        a_query.next();
+        return a_query.value(0).toBool();
+    }
+    
+    //
+    //  Otherwise, ignore this file only if the user has a setting to
+    //  ignore unknown file types.
+    //
+    return !m_ListUnknown;
+}
diff -Naur mythplugins-0.18.1-old/mythvideo/mythvideo/videoscan.h mythplugins-0.18.1-new/mythvideo/mythvideo/videoscan.h
--- mythplugins-0.18.1-old/mythvideo/mythvideo/videoscan.h	2005-03-04 09:49:48.000000000 -0800
+++ mythplugins-0.18.1-new/mythvideo/mythvideo/videoscan.h	2005-10-22 07:44:15.000000000 -0700
@@ -1,37 +1,37 @@
-#ifndef VIDEO_SCANNER_H
-#define  VIDEO_SCANNER_H
-#include <qobject.h>
-#include <qmap.h>
-
-enum VideoFileLocation
-{
-    kFileSystem,
-    kDatabase,
-    kBoth
-};
-
-
-
-typedef QMap <QString, VideoFileLocation> VideoLoadedMap;
-
-class VideoScanner
-{
-    public:
-        VideoScanner();
-        void doScan(const QString& dirs);
-    
-    private:
-        bool m_ListUnknown;
-        bool m_RemoveAll;
-        bool m_KeepAll;
-        VideoLoadedMap m_VideoFiles;
-        
-        void promptForRemoval(const QString& filename);
-        bool ignoreExtension(const QString& extension) const;
-        void verifyFiles();
-        void updateDB();
-        void buildFileList(const QString &directory, 
-                           const QStringList &imageExtensions);
-};
-
-#endif
+#ifndef VIDEO_SCANNER_H
+#define  VIDEO_SCANNER_H
+#include <qobject.h>
+#include <qmap.h>
+
+enum VideoFileLocation
+{
+    kFileSystem,
+    kDatabase,
+    kBoth
+};
+
+
+
+typedef QMap <QString, VideoFileLocation> VideoLoadedMap;
+
+class VideoScanner
+{
+    public:
+        VideoScanner();
+        void doScan(const QString& dirs);
+    
+    private:
+        bool m_ListUnknown;
+        bool m_RemoveAll;
+        bool m_KeepAll;
+        VideoLoadedMap m_VideoFiles;
+        
+        void promptForRemoval(const QString& filename);
+        bool ignoreExtension(const QString& extension) const;
+        void verifyFiles();
+        void updateDB();
+        void buildFileList(const QString &directory, 
+                           const QStringList &imageExtensions);
+};
+
+#endif
diff -Naur mythplugins-0.18.1-old/mythweb/config/theme_vxml.php mythplugins-0.18.1-new/mythweb/config/theme_vxml.php
--- mythplugins-0.18.1-old/mythweb/config/theme_vxml.php	2004-08-27 16:43:00.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/config/theme_vxml.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,56 +1,56 @@
-<?php
-
-    //
-    //  This file is part of MythWeb,
-    //  a php-based interface into MythTV.
-    //
-    //  (c) 2002 by Thor Sigvaldason and Isaac Richards
-    //  MythWeb is distributed under the
-    //  GNU GENERAL PUBLIC LICENSE version 2
-    //  (see http://www.gnu.org)
-    //
-
-/*
-
-    The following constants are used for the program listings page
-
-*/
-
-// Show mouseover information about programs?
-    define('show_popup_info', false);
-
-// show the channel icons?  true/false
-    define('show_channel_icons', false);
-
-// Prefer channum over callsign?
-    define('prefer_channum', true);
-
-// The number of time slots to display in the channel listing
-    define('num_time_slots', 12);
-
-// the size of timeslots, in seconds (1800 = 30 minutes)
-    define('timeslot_size', 900);
-
-// How many channels to skip between re-showing the timeslot bar
-    define('timeslotbar_skip', 20);
-
-// Display controls for movie "star" ratings
-    define('max_stars', 4);                 // maximum star rating for movies
-    define('star_character', '&diams;');    // the character(s) to represent stars with
-
-/*
-
-    The following constants are defined for the recorded programs page
-
-*/
-    define('show_recorded_pixmaps', false);
-
-// Height and width of generated pixmaps (for now, these are fixed - please do not change these numbers)
-    define('pixmap_width',  160);
-    define('pixmap_height', 120);
-
-// height and width of generated pixmaps for video thumbnails
-    define('video_img_width',  94);
-    define('video_img_height', 140);
-
-?>
+<?php
+
+    //
+    //  This file is part of MythWeb,
+    //  a php-based interface into MythTV.
+    //
+    //  (c) 2002 by Thor Sigvaldason and Isaac Richards
+    //  MythWeb is distributed under the
+    //  GNU GENERAL PUBLIC LICENSE version 2
+    //  (see http://www.gnu.org)
+    //
+
+/*
+
+    The following constants are used for the program listings page
+
+*/
+
+// Show mouseover information about programs?
+    define('show_popup_info', false);
+
+// show the channel icons?  true/false
+    define('show_channel_icons', false);
+
+// Prefer channum over callsign?
+    define('prefer_channum', true);
+
+// The number of time slots to display in the channel listing
+    define('num_time_slots', 12);
+
+// the size of timeslots, in seconds (1800 = 30 minutes)
+    define('timeslot_size', 900);
+
+// How many channels to skip between re-showing the timeslot bar
+    define('timeslotbar_skip', 20);
+
+// Display controls for movie "star" ratings
+    define('max_stars', 4);                 // maximum star rating for movies
+    define('star_character', '&diams;');    // the character(s) to represent stars with
+
+/*
+
+    The following constants are defined for the recorded programs page
+
+*/
+    define('show_recorded_pixmaps', false);
+
+// Height and width of generated pixmaps (for now, these are fixed - please do not change these numbers)
+    define('pixmap_width',  160);
+    define('pixmap_height', 120);
+
+// height and width of generated pixmaps for video thumbnails
+    define('video_img_width',  94);
+    define('video_img_height', 140);
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/config/theme_wap.php mythplugins-0.18.1-new/mythweb/config/theme_wap.php
--- mythplugins-0.18.1-old/mythweb/config/theme_wap.php	2004-05-10 23:18:22.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/config/theme_wap.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,56 +1,56 @@
-<?php
-
-    //
-    //  This file is part of MythWeb,
-    //  a php-based interface into MythTV.
-    //
-    //  (c) 2002 by Thor Sigvaldason and Isaac Richards
-    //  MythWeb is distributed under the
-    //  GNU GENERAL PUBLIC LICENSE version 2
-    //  (see http://www.gnu.org)
-    //
-
-/*
-
-    The following constants are used for the program listings page
-
-*/
-
-// Show mouseover information about programs?
-    define('show_popup_info', false);
-
-// show the channel icons?  true/false
-    define('show_channel_icons', false);
-
-// Prefer channum over callsign?
-    define('prefer_channum', true);
-
-// The number of time slots to display in the channel listing
-    define('num_time_slots', 12);
-
-// the size of timeslots, in seconds (1800 = 30 minutes)
-    define('timeslot_size', 900);
-
-// How many channels to skip between re-showing the timeslot bar
-    define('timeslotbar_skip', 20);
-
-// Display controls for movie "star" ratings
-    define('max_stars', 4);                 // maximum star rating for movies
-    define('star_character', '&diams;');    // the character(s) to represent stars with
-
-/*
-
-    The following constants are defined for the recorded programs page
-
-*/
-    define('show_recorded_pixmaps', false);
-
-// Height and width of generated pixmaps (for now, these are fixed - please do not change these numbers)
-    define('pixmap_width',  160);
-    define('pixmap_height', 120);
-
-// height and width of generated pixmaps for video thumbnails
-    define('video_img_width',  94);
-    define('video_img_height', 140);
-
-?>
+<?php
+
+    //
+    //  This file is part of MythWeb,
+    //  a php-based interface into MythTV.
+    //
+    //  (c) 2002 by Thor Sigvaldason and Isaac Richards
+    //  MythWeb is distributed under the
+    //  GNU GENERAL PUBLIC LICENSE version 2
+    //  (see http://www.gnu.org)
+    //
+
+/*
+
+    The following constants are used for the program listings page
+
+*/
+
+// Show mouseover information about programs?
+    define('show_popup_info', false);
+
+// show the channel icons?  true/false
+    define('show_channel_icons', false);
+
+// Prefer channum over callsign?
+    define('prefer_channum', true);
+
+// The number of time slots to display in the channel listing
+    define('num_time_slots', 12);
+
+// the size of timeslots, in seconds (1800 = 30 minutes)
+    define('timeslot_size', 900);
+
+// How many channels to skip between re-showing the timeslot bar
+    define('timeslotbar_skip', 20);
+
+// Display controls for movie "star" ratings
+    define('max_stars', 4);                 // maximum star rating for movies
+    define('star_character', '&diams;');    // the character(s) to represent stars with
+
+/*
+
+    The following constants are defined for the recorded programs page
+
+*/
+    define('show_recorded_pixmaps', false);
+
+// Height and width of generated pixmaps (for now, these are fixed - please do not change these numbers)
+    define('pixmap_width',  160);
+    define('pixmap_height', 120);
+
+// height and width of generated pixmaps for video thumbnails
+    define('video_img_width',  94);
+    define('video_img_height', 140);
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/config/theme_wml.php mythplugins-0.18.1-new/mythweb/config/theme_wml.php
--- mythplugins-0.18.1-old/mythweb/config/theme_wml.php	2004-11-13 11:46:55.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/config/theme_wml.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,56 +1,56 @@
-<?php
-
-    //
-    //  This file is part of MythWeb,
-    //  a php-based interface into MythTV.
-    //
-    //  (c) 2002 by Thor Sigvaldason and Isaac Richards
-    //  MythWeb is distributed under the
-    //  GNU GENERAL PUBLIC LICENSE version 2
-    //  (see http://www.gnu.org)
-    //
-
-/*
-
-    The following constants are used for the program listings page
-
-*/
-
-// Show mouseover information about programs?
-    define('show_popup_info', false);
-
-// show the channel icons?  true/false
-    define('show_channel_icons', false);
-
-// Prefer channum over callsign?
-    define('prefer_channum', true);
-
-// The number of time slots to display in the channel listing
-    define('num_time_slots', 3);
-
-// the size of timeslots, in seconds (1800 = 30 minutes)
-    define('timeslot_size', 900);
-
-// How many channels to skip between re-showing the timeslot bar
-    define('timeslotbar_skip', 20);
-
-// Display controls for movie "star" ratings
-    define('max_stars', 4);                 // maximum star rating for movies
-    define('star_character', '&diams;');    // the character(s) to represent stars with
-
-/*
-
-    The following constants are defined for the recorded programs page
-
-*/
-    define('show_recorded_pixmaps', false);
-
-// Height and width of generated pixmaps (for now, these are fixed - please do not change these numbers)
-    define('pixmap_width',  160);
-    define('pixmap_height', 120);
-
-// height and width of generated pixmaps for video thumbnails
-    define('video_img_width',  94);
-    define('video_img_height', 140);
-
-?>
+<?php
+
+    //
+    //  This file is part of MythWeb,
+    //  a php-based interface into MythTV.
+    //
+    //  (c) 2002 by Thor Sigvaldason and Isaac Richards
+    //  MythWeb is distributed under the
+    //  GNU GENERAL PUBLIC LICENSE version 2
+    //  (see http://www.gnu.org)
+    //
+
+/*
+
+    The following constants are used for the program listings page
+
+*/
+
+// Show mouseover information about programs?
+    define('show_popup_info', false);
+
+// show the channel icons?  true/false
+    define('show_channel_icons', false);
+
+// Prefer channum over callsign?
+    define('prefer_channum', true);
+
+// The number of time slots to display in the channel listing
+    define('num_time_slots', 3);
+
+// the size of timeslots, in seconds (1800 = 30 minutes)
+    define('timeslot_size', 900);
+
+// How many channels to skip between re-showing the timeslot bar
+    define('timeslotbar_skip', 20);
+
+// Display controls for movie "star" ratings
+    define('max_stars', 4);                 // maximum star rating for movies
+    define('star_character', '&diams;');    // the character(s) to represent stars with
+
+/*
+
+    The following constants are defined for the recorded programs page
+
+*/
+    define('show_recorded_pixmaps', false);
+
+// Height and width of generated pixmaps (for now, these are fixed - please do not change these numbers)
+    define('pixmap_width',  160);
+    define('pixmap_height', 120);
+
+// height and width of generated pixmaps for video thumbnails
+    define('video_img_width',  94);
+    define('video_img_height', 140);
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/languages/Dutch.php mythplugins-0.18.1-new/mythweb/languages/Dutch.php
--- mythplugins-0.18.1-old/mythweb/languages/Dutch.php	2005-03-09 22:51:37.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/languages/Dutch.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,11 +1,11 @@
-<?php
-/***                                                                        ***\
-    languages/Dutch.php
-
-    Translation hash for Dutch.
-\***                                                                        ***/
-
-// Set the locale to Dutch
+<?php
+/***                                                                        ***\
+    languages/Dutch.php
+
+    Translation hash for Dutch.
+\***                                                                        ***/
+
+// Set the locale to Dutch
 setlocale(LC_ALL, 'nl_NL');
 
 // Define the language lookup hash ** Do not touch the next line
@@ -293,50 +293,50 @@
           );
 
 
-/*
-    Show Categories:
-    $Categories is a hash of keys corresponding to the css style used for each
-    show category.  Each entry is an array containing the name of that category
-    in the language this file defines (it will not be translated separately),
-    and a regular expression pattern used to match the category against those
-    provided in the listings.
-*/
-$Categories = array();
-$Categories['Action']         = array('Actie',              '\\b(?:action|avon|actie)');
-$Categories['Adult']          = array('Erotisch',           '\\b(?:adult|erot|sex)');
-$Categories['Animals']        = array('Dieren',             '\\b(?:animal|dier)');
-$Categories['Art_Music']      = array('Kunst_Muziek',       '\\b(?:art|kunst|dans|musi[ck]|muziek|kunst|[ck]ultur)');
-$Categories['Business']       = array('Zakelijk',           '\\b(?:biz|busine|zake)');
-$Categories['Children']       = array('Kinderen',           '\\b(?:child|jeugd|animatie|kin?d|infan)');
-$Categories['Comedy']         = array('Komisch',            '\\b(?:comed|entertain|sitcom|serie)');
-$Categories['Crime_Mystery']  = array('Misdaad_Crimi',      '\\b(?:[ck]rim|myster|misdaad)');
-$Categories['Documentary']    = array('Documentaire',       '\\b(?:informatief|docu)');
-$Categories['Drama']          = array('Drama',              '\\b(?:drama)');
-$Categories['Educational']    = array('Educatie',           '\\b(?:edu|interes)');
-$Categories['Food']           = array('Eten',               '\\b(?:food|cook|[dt]rink|kook|eten|kok)');
-$Categories['Game']           = array('Spel',               '\\b(?:game|spel|quiz)');
-$Categories['Health_Medical'] = array('Gezondheid_Medisch', '\\b(?:medisch|gezond)');
-$Categories['History']        = array('Geschiedenis',       '\\b(?:hist|geschied)');
-$Categories['Horror']         = array('Horror',             '\\b(?:horror)');
-$Categories['HowTo']          = array('Hulp',               '\\b(?:how|home|house|garden|huis|tuin|woning)');
-$Categories['Misc']           = array('Divers',             '\\b(?:special|variety|info|collect)');
-$Categories['News']           = array('Nieuws',             '\\b(?:news|current|nieuws|duiding|actua)');
-$Categories['Reality']        = array('Reality',            '\\b(?:reality|leven)');
-$Categories['Romance']        = array('Romantiek',          '\\b(?:romance|lief)');
-$Categories['SciFi_Fantasy']  = array('Wetenschap_Natuur',  '\\b(?:fantasy|sci\\w*\\W*fi|natuur|wetenschap)');
-$Categories['Science_Nature'] = array('SciFi_Fantasy',      '\\b(?:science|natuur|environment|wetenschap)');
-$Categories['Shopping']       = array('Shopping',           '\\b(?:shop|koop)');
-$Categories['Soaps']          = array('Soaps',              '\\b(?:soap)');
-$Categories['Spiritual']      = array('Religie',            '\\b(?:spirit|relig)');
-$Categories['Sports']         = array('Sport',              '\\b(?:sport|deportes|voetbal|tennis)');
-$Categories['Talk']           = array('Praat',              '\\b(?:talk|praat)');
-$Categories['Travel']         = array('Reis',               '\\b(?:travel|reis)');
-$Categories['War']            = array('Oorlog',             '\\b(?:war|oorlog)');
-$Categories['Western']        = array('Films',              '\\b(?:west|film)');
-
-// These are some other classes that we might want to have show up in the
-//   category legend (they don't need regular expressions)
-$Categories['Unknown']        = array('Onbekend');
-$Categories['movie']          = array('Films'  );
-
-?>
+/*
+    Show Categories:
+    $Categories is a hash of keys corresponding to the css style used for each
+    show category.  Each entry is an array containing the name of that category
+    in the language this file defines (it will not be translated separately),
+    and a regular expression pattern used to match the category against those
+    provided in the listings.
+*/
+$Categories = array();
+$Categories['Action']         = array('Actie',              '\\b(?:action|avon|actie)');
+$Categories['Adult']          = array('Erotisch',           '\\b(?:adult|erot|sex)');
+$Categories['Animals']        = array('Dieren',             '\\b(?:animal|dier)');
+$Categories['Art_Music']      = array('Kunst_Muziek',       '\\b(?:art|kunst|dans|musi[ck]|muziek|kunst|[ck]ultur)');
+$Categories['Business']       = array('Zakelijk',           '\\b(?:biz|busine|zake)');
+$Categories['Children']       = array('Kinderen',           '\\b(?:child|jeugd|animatie|kin?d|infan)');
+$Categories['Comedy']         = array('Komisch',            '\\b(?:comed|entertain|sitcom|serie)');
+$Categories['Crime_Mystery']  = array('Misdaad_Crimi',      '\\b(?:[ck]rim|myster|misdaad)');
+$Categories['Documentary']    = array('Documentaire',       '\\b(?:informatief|docu)');
+$Categories['Drama']          = array('Drama',              '\\b(?:drama)');
+$Categories['Educational']    = array('Educatie',           '\\b(?:edu|interes)');
+$Categories['Food']           = array('Eten',               '\\b(?:food|cook|[dt]rink|kook|eten|kok)');
+$Categories['Game']           = array('Spel',               '\\b(?:game|spel|quiz)');
+$Categories['Health_Medical'] = array('Gezondheid_Medisch', '\\b(?:medisch|gezond)');
+$Categories['History']        = array('Geschiedenis',       '\\b(?:hist|geschied)');
+$Categories['Horror']         = array('Horror',             '\\b(?:horror)');
+$Categories['HowTo']          = array('Hulp',               '\\b(?:how|home|house|garden|huis|tuin|woning)');
+$Categories['Misc']           = array('Divers',             '\\b(?:special|variety|info|collect)');
+$Categories['News']           = array('Nieuws',             '\\b(?:news|current|nieuws|duiding|actua)');
+$Categories['Reality']        = array('Reality',            '\\b(?:reality|leven)');
+$Categories['Romance']        = array('Romantiek',          '\\b(?:romance|lief)');
+$Categories['SciFi_Fantasy']  = array('Wetenschap_Natuur',  '\\b(?:fantasy|sci\\w*\\W*fi|natuur|wetenschap)');
+$Categories['Science_Nature'] = array('SciFi_Fantasy',      '\\b(?:science|natuur|environment|wetenschap)');
+$Categories['Shopping']       = array('Shopping',           '\\b(?:shop|koop)');
+$Categories['Soaps']          = array('Soaps',              '\\b(?:soap)');
+$Categories['Spiritual']      = array('Religie',            '\\b(?:spirit|relig)');
+$Categories['Sports']         = array('Sport',              '\\b(?:sport|deportes|voetbal|tennis)');
+$Categories['Talk']           = array('Praat',              '\\b(?:talk|praat)');
+$Categories['Travel']         = array('Reis',               '\\b(?:travel|reis)');
+$Categories['War']            = array('Oorlog',             '\\b(?:war|oorlog)');
+$Categories['Western']        = array('Films',              '\\b(?:west|film)');
+
+// These are some other classes that we might want to have show up in the
+//   category legend (they don't need regular expressions)
+$Categories['Unknown']        = array('Onbekend');
+$Categories['movie']          = array('Films'  );
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/log.php mythplugins-0.18.1-new/mythweb/log.php
--- mythplugins-0.18.1-old/mythweb/log.php	2005-04-02 23:16:48.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/log.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,33 +1,33 @@
-<?php
-/*
- * Created on Mar 18, 2005
- *
- * To change the template for this generated file go to
- * Window - Preferences - PHPeclipse - PHP - Code Templates
- */
- 
-// Initialize the script, database, etc.
-    require_once "includes/init.php";
- 
- // Load all of the channel data from the database
-    $result = mysql_query('SELECT * FROM mythlog ORDER BY logid desc limit 100')
-        or trigger_error('SQL Error: '.mysql_error(), FATAL);
-    $Logs = array();
-    while ($row = mysql_fetch_assoc($result))
-        $Logs[] = $row;
-    mysql_free_result($result);
-    
-// Load the class for this page
-    require_once theme_dir.'log.php';
-
-// Create an instance of this page from its theme object
-    $Page = new Theme_Logs();
-
-// Display the page
-    $Page->print_page();
-
-// Exit
-    exit;
-    
- 
-?>
+<?php
+/*
+ * Created on Mar 18, 2005
+ *
+ * To change the template for this generated file go to
+ * Window - Preferences - PHPeclipse - PHP - Code Templates
+ */
+ 
+// Initialize the script, database, etc.
+    require_once "includes/init.php";
+ 
+ // Load all of the channel data from the database
+    $result = mysql_query('SELECT * FROM mythlog ORDER BY logid desc limit 100')
+        or trigger_error('SQL Error: '.mysql_error(), FATAL);
+    $Logs = array();
+    while ($row = mysql_fetch_assoc($result))
+        $Logs[] = $row;
+    mysql_free_result($result);
+    
+// Load the class for this page
+    require_once theme_dir.'log.php';
+
+// Create an instance of this page from its theme object
+    $Page = new Theme_Logs();
+
+// Display the page
+    $Page->print_page();
+
+// Exit
+    exit;
+    
+ 
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/vxml/recorded_programs.php mythplugins-0.18.1-new/mythweb/themes/vxml/recorded_programs.php
--- mythplugins-0.18.1-old/mythweb/themes/vxml/recorded_programs.php	2005-02-27 14:35:07.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/vxml/recorded_programs.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,72 +1,72 @@
-<?php
-/***                                                                        ***\
-    recorded_programs.php                    Last Updated: 2003.08.20 (xris)
-
-    This file defines a theme class for the recorded programs section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-#class theme_program_detail extends Theme {
-class Theme_recorded_programs extends Theme {
-
-    function print_page() {
-    // Print the main page header
-        parent::print_header("MythWeb - Recorded Programs");
-    // Print the page contents
-        global $All_Shows;
-?>
-
-<p>
-<form class="form" id="program_titles" action="recorded_programs.php" method="get">
-<center>
-    Recordings<br>
-    <select name="title">
-        <option value="">All recordings</option><?php
-        global $Program_Titles;
-        foreach($Program_Titles as $title => $count) {
-            echo '<option value="'.$title.'"';
-            if ($_GET['title'] == $title)
-                echo ' SELECTED';
-            echo '>'.$title.($count > 1 ? " ($count episodes)" : "").'</option>';
-        }
-        ?>
-    </select><br>
-    <input type="submit" value="Go"><br><br>
-</center>
-</form>
-</p>
-
-<?php
-    $row = 0;
-    foreach ($All_Shows as $show) {
-        echo $show->title."<br>";
-        echo $show->channame."<br>";
-        if(strlen($show->subtitle)>1)
-            echo "<b>".$show->subtitle."</b><br>";
-        if(strlen($show->description)>1)
-            echo $show->description."<br>";
-        echo date('D, M j,Y (g:i A)', $show->starttime)."<br>";
-        echo nice_length($show->length)." ".nice_filesize($show->filesize)."<br>";
-
-        if ($show->endtime > time()) { ?>
-            <font color="#FF0000">currently recording</font><br>
-<?php   } else { ?>
-            <b></b><a id="delete_<?php echo $row?>" href="recorded_programs.php?delete=yes&file=<?php echo urlencode($show->filename)?>">Delete</a></b><br>
-<?php   }
-        echo "<br>";
-
-        $row++;
-    }
-?>
-
-<?php
-    echo $GLOBALS['Total_Programs'].' programs, using '.nice_filesize(disk_used).' out of '.nice_filesize(disk_size);
-
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-}
-
+<?php
+/***                                                                        ***\
+    recorded_programs.php                    Last Updated: 2003.08.20 (xris)
+
+    This file defines a theme class for the recorded programs section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+#class theme_program_detail extends Theme {
+class Theme_recorded_programs extends Theme {
+
+    function print_page() {
+    // Print the main page header
+        parent::print_header("MythWeb - Recorded Programs");
+    // Print the page contents
+        global $All_Shows;
+?>
+
+<p>
+<form class="form" id="program_titles" action="recorded_programs.php" method="get">
+<center>
+    Recordings<br>
+    <select name="title">
+        <option value="">All recordings</option><?php
+        global $Program_Titles;
+        foreach($Program_Titles as $title => $count) {
+            echo '<option value="'.$title.'"';
+            if ($_GET['title'] == $title)
+                echo ' SELECTED';
+            echo '>'.$title.($count > 1 ? " ($count episodes)" : "").'</option>';
+        }
+        ?>
+    </select><br>
+    <input type="submit" value="Go"><br><br>
+</center>
+</form>
+</p>
+
+<?php
+    $row = 0;
+    foreach ($All_Shows as $show) {
+        echo $show->title."<br>";
+        echo $show->channame."<br>";
+        if(strlen($show->subtitle)>1)
+            echo "<b>".$show->subtitle."</b><br>";
+        if(strlen($show->description)>1)
+            echo $show->description."<br>";
+        echo date('D, M j,Y (g:i A)', $show->starttime)."<br>";
+        echo nice_length($show->length)." ".nice_filesize($show->filesize)."<br>";
+
+        if ($show->endtime > time()) { ?>
+            <font color="#FF0000">currently recording</font><br>
+<?php   } else { ?>
+            <b></b><a id="delete_<?php echo $row?>" href="recorded_programs.php?delete=yes&file=<?php echo urlencode($show->filename)?>">Delete</a></b><br>
+<?php   }
+        echo "<br>";
+
+        $row++;
+    }
+?>
+
+<?php
+    echo $GLOBALS['Total_Programs'].' programs, using '.nice_filesize(disk_used).' out of '.nice_filesize(disk_size);
+
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+}
+
 ?>
\ No newline at end of file
diff -Naur mythplugins-0.18.1-old/mythweb/themes/vxml/scheduled_recordings.php mythplugins-0.18.1-new/mythweb/themes/vxml/scheduled_recordings.php
--- mythplugins-0.18.1-old/mythweb/themes/vxml/scheduled_recordings.php	2005-02-27 14:35:07.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/vxml/scheduled_recordings.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,80 +1,80 @@
-<?
-/***                                                                        ***\
-    scheduled_recordings.php                    Last Updated: 2003.08.05 (xris)
-
-    This file defines a theme class for the scheduled recordings section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-#class theme_program_detail extends Theme {
-class Theme_scheduled_recordings extends Theme {
-
-    function print_page() {
-    // Print the main page header
-        parent::print_header('MythWeb - Scheduled Recordings');
-    // Print the page contents
-        global $All_Shows;
-
-
-/*  <a href="scheduled_recordings.php?sortby=title">show</a><br>
-    <a href="scheduled_recordings.php?sortby=channum">station</a><br>
-    <a href="scheduled_recordings.php?sortby=airdate">air&nbsp;date</a><br>
-    <a href="scheduled_recordings.php?sortby=length">length</a><br>
-*/
-
-    $row = 0;
-    foreach ($All_Shows as $show) {
-    // Reset the command variable
-        $command = '';
-    // Which class does this show fall into?
-        if ($show->duplicate == 1) {
-            $class = 'duplicate';
-            $command = '<a href="scheduled_recordings.php?rerecord=yes&title='.urlencode($show->title).'&subtitle='.urlencode($show->subtitle).'&description='.urlencode($show->description).'">Rerecord</a>';
-        }
-        elseif ($show->conflicting == 1) {
-            $class   = 'conflict';
-            $command = '<a href="scheduled_recordings.php?record=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Record</a>';
-        }
-        elseif ($show->recording == 0) {
-            $class   = 'deactivated';
-            $command = '<a href="scheduled_recordings.php?activate=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Activate</a>';
-        }
-        else {
-            $class   = 'scheduled';
-            #$command = 'Don\'t&nbsp;Record';
-            $command = '';
-        }
-
-    // Print the content
-//  <tr class="<?=$class>">
-//  <td class="<?=$show->class>">
-
-        // Print a link to record this show
-        echo '<a id="program_'.$program_id_counter.'_anchor" href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'"'
-             .'>'.$show->title
-             .(preg_match('/\\w/', $show->subtitle) ? ":  $show->subtitle" : '')
-             .'</a><br>';
-        ?>
-    <?=$show->channel->name?><br>
-    <?=date('D, M j', $show->starttime)?><br>
-    <?=date('(g:i A)', $show->starttime)?> <?=nice_length($show->length)?><br>
-<?  if ($command) { ?>
-    <b><?=$command?></b><br>
-<?  } ?>
-    <br>
-    <?
-        $row++;
-    }
-?>
-
-</table>
-<?
-
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-}
-
+<?
+/***                                                                        ***\
+    scheduled_recordings.php                    Last Updated: 2003.08.05 (xris)
+
+    This file defines a theme class for the scheduled recordings section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+#class theme_program_detail extends Theme {
+class Theme_scheduled_recordings extends Theme {
+
+    function print_page() {
+    // Print the main page header
+        parent::print_header('MythWeb - Scheduled Recordings');
+    // Print the page contents
+        global $All_Shows;
+
+
+/*  <a href="scheduled_recordings.php?sortby=title">show</a><br>
+    <a href="scheduled_recordings.php?sortby=channum">station</a><br>
+    <a href="scheduled_recordings.php?sortby=airdate">air&nbsp;date</a><br>
+    <a href="scheduled_recordings.php?sortby=length">length</a><br>
+*/
+
+    $row = 0;
+    foreach ($All_Shows as $show) {
+    // Reset the command variable
+        $command = '';
+    // Which class does this show fall into?
+        if ($show->duplicate == 1) {
+            $class = 'duplicate';
+            $command = '<a href="scheduled_recordings.php?rerecord=yes&title='.urlencode($show->title).'&subtitle='.urlencode($show->subtitle).'&description='.urlencode($show->description).'">Rerecord</a>';
+        }
+        elseif ($show->conflicting == 1) {
+            $class   = 'conflict';
+            $command = '<a href="scheduled_recordings.php?record=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Record</a>';
+        }
+        elseif ($show->recording == 0) {
+            $class   = 'deactivated';
+            $command = '<a href="scheduled_recordings.php?activate=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Activate</a>';
+        }
+        else {
+            $class   = 'scheduled';
+            #$command = 'Don\'t&nbsp;Record';
+            $command = '';
+        }
+
+    // Print the content
+//  <tr class="<?=$class>">
+//  <td class="<?=$show->class>">
+
+        // Print a link to record this show
+        echo '<a id="program_'.$program_id_counter.'_anchor" href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'"'
+             .'>'.$show->title
+             .(preg_match('/\\w/', $show->subtitle) ? ":  $show->subtitle" : '')
+             .'</a><br>';
+        ?>
+    <?=$show->channel->name?><br>
+    <?=date('D, M j', $show->starttime)?><br>
+    <?=date('(g:i A)', $show->starttime)?> <?=nice_length($show->length)?><br>
+<?  if ($command) { ?>
+    <b><?=$command?></b><br>
+<?  } ?>
+    <br>
+    <?
+        $row++;
+    }
+?>
+
+</table>
+<?
+
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+}
+
 ?>
\ No newline at end of file
diff -Naur mythplugins-0.18.1-old/mythweb/themes/vxml/search.php mythplugins-0.18.1-new/mythweb/themes/vxml/search.php
--- mythplugins-0.18.1-old/mythweb/themes/vxml/search.php	2005-02-27 14:35:07.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/vxml/search.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,58 +1,58 @@
-<?php
-/***                                                                        ***\
-    search.php                    Last Updated: 2003.08.05 (xris)
-
-    This file defines a theme class for the search section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-class Theme_search extends Theme {
-
-    function print_page() {
-    // Print the main page header
-        parent::print_header('MythWeb - Search');
-    // Print the advanced search header
-
-    // Print any search results
-        $this->print_results();
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-    function print_results() {
-        global $Results;
-    // No search was performed, just return
-        if (!is_array($Results))
-            return;
-    // Search, but nothing found - notify the user
-        if (!count($Results)) {
-            echo '<p class="huge" align="center">No matches found</p>';
-            return;
-        }
-    // Get the url search string so we don't have to recreate it for each sort type
-        $search_str = '&searchstr='.urlencode($_GET['searchstr']);
-        if ($_GET['search_title'])         $search_str .= '&search_title=yes';
-        if ($_GET['search_subtitle'])      $search_str .= '&search_subtitle=yes';
-        if ($_GET['search_description'])   $search_str .= '&search_description=yes';
-        if ($_GET['search_category'])      $search_str .= '&search_category=yes';
-        if ($_GET['search_category_type']) $search_str .= '&search_category_type=yes';
-    // Display the results
-
-        $row = 0;
-        foreach ($Results as $show) {
-    // Print the content
-        echo $show->channel->name.'<br>';
-        echo '<a href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'">'.$show->title.'</a><br>';
-        if(strlen($show->subtitle))
-            echo $show->subtitle.'<br>';
-    //  echo $show->description.'<br>';
-        echo date('D m/d/y', $show->starttime).'<br>';
-        echo date('(g:i A)', $show->starttime).' '.nice_length($show->length).'<br><br>';
-
-            $row++;
-        }
-    }
-}
-
-?>
+<?php
+/***                                                                        ***\
+    search.php                    Last Updated: 2003.08.05 (xris)
+
+    This file defines a theme class for the search section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+class Theme_search extends Theme {
+
+    function print_page() {
+    // Print the main page header
+        parent::print_header('MythWeb - Search');
+    // Print the advanced search header
+
+    // Print any search results
+        $this->print_results();
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+    function print_results() {
+        global $Results;
+    // No search was performed, just return
+        if (!is_array($Results))
+            return;
+    // Search, but nothing found - notify the user
+        if (!count($Results)) {
+            echo '<p class="huge" align="center">No matches found</p>';
+            return;
+        }
+    // Get the url search string so we don't have to recreate it for each sort type
+        $search_str = '&searchstr='.urlencode($_GET['searchstr']);
+        if ($_GET['search_title'])         $search_str .= '&search_title=yes';
+        if ($_GET['search_subtitle'])      $search_str .= '&search_subtitle=yes';
+        if ($_GET['search_description'])   $search_str .= '&search_description=yes';
+        if ($_GET['search_category'])      $search_str .= '&search_category=yes';
+        if ($_GET['search_category_type']) $search_str .= '&search_category_type=yes';
+    // Display the results
+
+        $row = 0;
+        foreach ($Results as $show) {
+    // Print the content
+        echo $show->channel->name.'<br>';
+        echo '<a href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'">'.$show->title.'</a><br>';
+        if(strlen($show->subtitle))
+            echo $show->subtitle.'<br>';
+    //  echo $show->description.'<br>';
+        echo date('D m/d/y', $show->starttime).'<br>';
+        echo date('(g:i A)', $show->starttime).' '.nice_length($show->length).'<br><br>';
+
+            $row++;
+        }
+    }
+}
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/vxml/theme.php mythplugins-0.18.1-new/mythweb/themes/vxml/theme.php
--- mythplugins-0.18.1-old/mythweb/themes/vxml/theme.php	2005-02-27 14:35:07.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/vxml/theme.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,70 +1,70 @@
-<?
-/***                                                                        ***\
-    theme.php                             Last Updated: 2003.08.19 (xris)
-
-    This is the main theme class for the Default MythWeb theme.  It should
-    not be instantiated directly, but will most likely contain methods
-    called from its child classes via the parent:: construct.
-\***                                                                        ***/
-
-class Theme {
-
-    function print_header($page_title = 'MythWeb') {
-// Print the appropriate header information
-    header("Content-Type: text/html; charset=utf-8");
-?>
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
-<html>
-
-<head>
-    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
-
-    <Link Rel="stylesheet" HRef="<?=theme_dir?>style.css" Type="text/css" Media="screen">
-</head>
-
-<body bgcolor="#003060" text="#DEDEDE" link="#3181B4" alink="#CC0000" vlink="#3181B4">
-
-<center><img src="<?=theme_dir?>img/mythtv-logo.gif" border="0" alt="MythTV" style="behavior: url('<?=theme_dir?>pngbehavior.htc');"><br>
-    <?=$this->print_menu_content()?>
-</center><br>
-<form action="search.php" method="post">
-        <center><input type="text" name="searchstr" value="<?php echo $_GET['searchstr']?>"><br>
-        <input type="submit" class="submit" value="search"></center><br>
-        <!--a href="search.php">[advanced]</a><br-->
-    </form>
-<?
-    }
-
-    function print_menu_content() {
-        ?>
-                <a href="program_listing.php">Listings</a><br>
-                <a href="scheduled_recordings.php">Scheduled</a><br>
-                <a href="recorded_programs.php">Recorded</a><br>
-<?php
-    }
-
-    function print_footer() {
-/*?>
-<p align="center">
-<font size="-1">MythWAP is part of the <a href="http://www.mythtv.org">MythTV</a> Project</font>
-</p>
-
-<?*/
-// Display footnotes
-    global $Footnotes;
-    if (is_array($Footnotes)) {
-        foreach ($Footnotes as $note) {
-            echo $note;
-        }
-    }
-?>
-
-
-</body>
-</html>
-<?
-    }
-}
-
-
-?>
+<?
+/***                                                                        ***\
+    theme.php                             Last Updated: 2003.08.19 (xris)
+
+    This is the main theme class for the Default MythWeb theme.  It should
+    not be instantiated directly, but will most likely contain methods
+    called from its child classes via the parent:: construct.
+\***                                                                        ***/
+
+class Theme {
+
+    function print_header($page_title = 'MythWeb') {
+// Print the appropriate header information
+    header("Content-Type: text/html; charset=utf-8");
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+
+<head>
+    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
+
+    <Link Rel="stylesheet" HRef="<?=theme_dir?>style.css" Type="text/css" Media="screen">
+</head>
+
+<body bgcolor="#003060" text="#DEDEDE" link="#3181B4" alink="#CC0000" vlink="#3181B4">
+
+<center><img src="<?=theme_dir?>img/mythtv-logo.gif" border="0" alt="MythTV" style="behavior: url('<?=theme_dir?>pngbehavior.htc');"><br>
+    <?=$this->print_menu_content()?>
+</center><br>
+<form action="search.php" method="post">
+        <center><input type="text" name="searchstr" value="<?php echo $_GET['searchstr']?>"><br>
+        <input type="submit" class="submit" value="search"></center><br>
+        <!--a href="search.php">[advanced]</a><br-->
+    </form>
+<?
+    }
+
+    function print_menu_content() {
+        ?>
+                <a href="program_listing.php">Listings</a><br>
+                <a href="scheduled_recordings.php">Scheduled</a><br>
+                <a href="recorded_programs.php">Recorded</a><br>
+<?php
+    }
+
+    function print_footer() {
+/*?>
+<p align="center">
+<font size="-1">MythWAP is part of the <a href="http://www.mythtv.org">MythTV</a> Project</font>
+</p>
+
+<?*/
+// Display footnotes
+    global $Footnotes;
+    if (is_array($Footnotes)) {
+        foreach ($Footnotes as $note) {
+            echo $note;
+        }
+    }
+?>
+
+
+</body>
+</html>
+<?
+    }
+}
+
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wap/channel_detail.php mythplugins-0.18.1-new/mythweb/themes/wap/channel_detail.php
--- mythplugins-0.18.1-old/mythweb/themes/wap/channel_detail.php	2004-05-10 23:18:23.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/themes/wap/channel_detail.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,76 +1,76 @@
-<?php
-/***                                                                        ***\
-    channel_detail.php                        Last Updated: 2003.07.23 (xris)
-
-    This file defines a theme class for the channel detail section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-class Theme_channel_detail extends Theme {
-
-    function print_page() {
-    // Print the main page header
-        parent::print_header('MythWeb - Channel Detail');
-    // Print out some header info about this channel and time
-        global $this_channel;
-?>
-<p>
-            <form id="form" action="channel_detail.php?chanid=<?php echo $_GET['chanid']?>" method="post">
-            <center>
-            Channel <?=$this_channel->channum?> <?=$this_channel->callsign?><br>
-            <?=date('D m/d/y', $_SESSION['list_time'])?><br>
-
-            Jump to<br>
-            <select name="time""><?
-            // Find out how many days into the future we should bother checking
-                $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
-                    or trigger_error('SQL Error: '.mysql_error(), FATAL);
-                list($max_days) = mysql_fetch_row($result);
-                mysql_free_result($result);
-            // Print out the list
-                for ($i=-1;$i<=$max_days;$i++) {
-                    $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
-                    $date = date("Ymd", $time);
-                    echo "<option value=\"$time\"";
-                    if ($date == date("Ymd", $_SESSION['list_time'])) echo " selected";
-                    echo ">".date("D m/d/y" , $time)."</option>";
-                }
-                ?></select><br>
-                <input type="submit" class="submit" value="Jump"><br><br>
-            </center>
-            </form>
-</p>
-<?php
-    // Print the shows for today
-        $this->print_shows();
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-    function print_shows() {
-        global $this_channel;
-    // No search was performed, just return
-        if (!is_array($this_channel->programs))
-            return;
-    // Display the results
-        $row = 0;
-        foreach ($this_channel->programs as $show) {
-    // Print the content
-    ?>
-    <?php echo date('g:i A', $show->starttime)?> - <?php echo date('g:i A', $show->endtime)?><br>
-<?php
-        echo '<a href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'">'.$show->title.'</a><br>';
-        if(strlen($show->subtitle))
-            echo '<b>'.$show->subtitle.'</b><br>';
-//      if(strlen($show->description))
-//          echo $show->description.'<br>';
-        echo nice_length($show->length).'<br><br>';
-            $row++;
-        }
-
-    }
-
-}
-
-?>
+<?php
+/***                                                                        ***\
+    channel_detail.php                        Last Updated: 2003.07.23 (xris)
+
+    This file defines a theme class for the channel detail section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+class Theme_channel_detail extends Theme {
+
+    function print_page() {
+    // Print the main page header
+        parent::print_header('MythWeb - Channel Detail');
+    // Print out some header info about this channel and time
+        global $this_channel;
+?>
+<p>
+            <form id="form" action="channel_detail.php?chanid=<?php echo $_GET['chanid']?>" method="post">
+            <center>
+            Channel <?=$this_channel->channum?> <?=$this_channel->callsign?><br>
+            <?=date('D m/d/y', $_SESSION['list_time'])?><br>
+
+            Jump to<br>
+            <select name="time""><?
+            // Find out how many days into the future we should bother checking
+                $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
+                    or trigger_error('SQL Error: '.mysql_error(), FATAL);
+                list($max_days) = mysql_fetch_row($result);
+                mysql_free_result($result);
+            // Print out the list
+                for ($i=-1;$i<=$max_days;$i++) {
+                    $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
+                    $date = date("Ymd", $time);
+                    echo "<option value=\"$time\"";
+                    if ($date == date("Ymd", $_SESSION['list_time'])) echo " selected";
+                    echo ">".date("D m/d/y" , $time)."</option>";
+                }
+                ?></select><br>
+                <input type="submit" class="submit" value="Jump"><br><br>
+            </center>
+            </form>
+</p>
+<?php
+    // Print the shows for today
+        $this->print_shows();
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+    function print_shows() {
+        global $this_channel;
+    // No search was performed, just return
+        if (!is_array($this_channel->programs))
+            return;
+    // Display the results
+        $row = 0;
+        foreach ($this_channel->programs as $show) {
+    // Print the content
+    ?>
+    <?php echo date('g:i A', $show->starttime)?> - <?php echo date('g:i A', $show->endtime)?><br>
+<?php
+        echo '<a href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'">'.$show->title.'</a><br>';
+        if(strlen($show->subtitle))
+            echo '<b>'.$show->subtitle.'</b><br>';
+//      if(strlen($show->description))
+//          echo $show->description.'<br>';
+        echo nice_length($show->length).'<br><br>';
+            $row++;
+        }
+
+    }
+
+}
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wap/program_detail.php mythplugins-0.18.1-new/mythweb/themes/wap/program_detail.php
--- mythplugins-0.18.1-old/mythweb/themes/wap/program_detail.php	2004-05-10 23:18:23.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/themes/wap/program_detail.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,120 +1,120 @@
-<?php
-/***                                                                        ***\
-    program_detail.php                       Last Updated: 2003.08.22 (xris)
-
-    This file defines a theme class for the program details section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-#class theme_program_detail extends Theme {
-class Theme_program_detail extends Theme {
-
-    function print_page() {
-        global $this_channel, $this_program;
-    // Print the main page header
-        parent::print_header("MythWeb - Program Detail:  $this_program->title");
-    // Print the page contents
-?>
-<a href="channel_detail.php?chanid=<?=$this_channel->chanid?>" >
-<?=prefer_channum ? $this_channel->channum : $this_channel->callsign?> &nbsp;
-<?=prefer_channum ? $this_channel->callsign : $this_channel->channum?></a><br>
-
-<?=$this_program->title?><BR>
-<?=date('D m/d/y', $$this_program->starttime)?><br>
-<?=date('g:i A', $this_program->starttime)?> to <?=date('g:i A', $this_program->endtime)?> (<?=(int)($this_program->length/60)?> minutes)<BR>
-                <?
-                if ($this_program->previouslyshown)
-                    echo '(Rerun) ';
-//              if ($this_program->category_type == 'movie')
-//                  echo " (<a href=\"http://www.imdb.com/Find?select=Titles&for=" . urlencode($this_program->title) . "\">Search IMDB</a>)";
-//              else
-//                  echo " (<a href=\"http://www.google.com/search?q=" . urlencode($this_program->title) . "\">Search Google</a>)";
-                ?>
-        <? if (strlen($this_program->subtitle)) { ?>
-            Episode: <b><?=$this_program->subtitle?></b><br>
-        <? }
-           if (strlen($this_program->description)) {?>
-                Description: <?=$this_program->description?><br>
-        <? } ?>
-        <? if (strlen($this_program->category)) {?>
-                Category: <?=$this_program->category?><br>
-        <? }
-           if (strlen($this_program->airdate)) {?>
-                Orig. Airdate: <?=$this_program->airdate?><br>
-        <? }
-           if (strlen($this_program->rating)) {?>
-                <?=strlen($this_program->rater) > 0 ? "$this_program->rater " : ''?>Rating: <?=$this_program->rating?><br>
-        <?
-           if (strlen($this_program->starstring) > 0)
-                    echo ", $this_program->starstring";
-                ?><br>
-        <? } ?>
-
-        <form action="program_detail.php" method="get" name="record_settings">
-        <input type="hidden" name="chanid" value="<?=$_GET['chanid']?>">
-        <input type="hidden" name="starttime" value="<?=$_GET['starttime']?>">
-<br>
-        <center>Recording Options:</center>
-                    <input type="radio" class="radio" name="record" value="never" id="record_never"<?=
-                    $this_program->will_record ? '' : ' CHECKED'?>></input>
-  <a>Don't record</a><br>
-                    <input type="radio" class="radio" name="record" value="once" id="record_once"<?=
-                    $this_program->record_once ? ' CHECKED' : ''?>></input>
-  <a>Record showing</a><br>
-                    <input type="radio" class="radio" name="record" value="daily" id="record_daily"<?=
-                    $this_program->record_daily ? ' CHECKED' : ''?>></input>
-  <a>Record every day</a> at this time<br>
-                    <input type="radio" class="radio" name="record" value="weekly" id="record_weekly"<?=
-                    $this_program->record_weekly ? ' CHECKED' : ''?>></input>
-  <a>Record every week</a> at this time<br>
-                    <input type="radio" class="radio" name="record" value="channel" id="record_channel"<?=
-                    $this_program->record_channel ? ' CHECKED' : ''?>></input>
-  <a>Always record on this channel</a><br>
-                    <input type="radio" class="radio" name="record" value="always" id="record_always"<?=
-                    $this_program->record_always ? ' CHECKED' : ''?>></input>
-  <a>Always record on any channel</a><br>
-                <br>
-  Recording Profile<br>
-  <select name="profile">
-                    <?php
-
-                        global $Profiles;
-                        foreach($Profiles as $profile) {
-                            echo '<option value="'.htmlentities($profile['id']).'"';
-                            if ($this_program->profile == $profile['id'])
-                                echo ' SELECTED';
-                            echo '>'.htmlentities($profile['name']).'</option>';
-                        }
-                        ?></select><br>
-  Rank<br>
-  <select name="rank">
-                    <?php
-                        for($rankcount=-10;$rankcount<=10;++$rankcount) {
-                            echo '<option value="'.htmlentities($rankcount).'"';
-                            if ($this_program->rank == $rankcount)
-                                echo ' SELECTED';
-                            echo '>'.htmlentities($rankcount).'</option>';
-                        }
-                        ?></select><br>
-  <input type="checkbox" class="radio" name="recorddups"<?php if ($this_program->recorddups) echo ' CHECKED' ?>>
-  Record Dupes?&nbsp;<br>
-  <input type="checkbox" class="radio" name="autoexpire" <?php if ($this_program->autoexpire) echo "CHECKED" ?>>
-  Auto-expire?&nbsp;<br>
-                    No of recordings to keep?<br><input type="input" name="maxepisodes" size="1" value="<?php echo htmlentities($this_program->maxepisodes) ?>"><br>
-  <input type="checkbox" class="radio" name="maxnewest" <?php if ($this_program->maxnewest) echo "CHECKED" ?>>
-  Record new and expire old?&nbsp;<br>
-
-                    <center><input type="submit" class="submit" name="save" value="Update Settings"></center>
-                <br>
-
-        </form>
-
-<?
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-}
-
+<?php
+/***                                                                        ***\
+    program_detail.php                       Last Updated: 2003.08.22 (xris)
+
+    This file defines a theme class for the program details section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+#class theme_program_detail extends Theme {
+class Theme_program_detail extends Theme {
+
+    function print_page() {
+        global $this_channel, $this_program;
+    // Print the main page header
+        parent::print_header("MythWeb - Program Detail:  $this_program->title");
+    // Print the page contents
+?>
+<a href="channel_detail.php?chanid=<?=$this_channel->chanid?>" >
+<?=prefer_channum ? $this_channel->channum : $this_channel->callsign?> &nbsp;
+<?=prefer_channum ? $this_channel->callsign : $this_channel->channum?></a><br>
+
+<?=$this_program->title?><BR>
+<?=date('D m/d/y', $$this_program->starttime)?><br>
+<?=date('g:i A', $this_program->starttime)?> to <?=date('g:i A', $this_program->endtime)?> (<?=(int)($this_program->length/60)?> minutes)<BR>
+                <?
+                if ($this_program->previouslyshown)
+                    echo '(Rerun) ';
+//              if ($this_program->category_type == 'movie')
+//                  echo " (<a href=\"http://www.imdb.com/Find?select=Titles&for=" . urlencode($this_program->title) . "\">Search IMDB</a>)";
+//              else
+//                  echo " (<a href=\"http://www.google.com/search?q=" . urlencode($this_program->title) . "\">Search Google</a>)";
+                ?>
+        <? if (strlen($this_program->subtitle)) { ?>
+            Episode: <b><?=$this_program->subtitle?></b><br>
+        <? }
+           if (strlen($this_program->description)) {?>
+                Description: <?=$this_program->description?><br>
+        <? } ?>
+        <? if (strlen($this_program->category)) {?>
+                Category: <?=$this_program->category?><br>
+        <? }
+           if (strlen($this_program->airdate)) {?>
+                Orig. Airdate: <?=$this_program->airdate?><br>
+        <? }
+           if (strlen($this_program->rating)) {?>
+                <?=strlen($this_program->rater) > 0 ? "$this_program->rater " : ''?>Rating: <?=$this_program->rating?><br>
+        <?
+           if (strlen($this_program->starstring) > 0)
+                    echo ", $this_program->starstring";
+                ?><br>
+        <? } ?>
+
+        <form action="program_detail.php" method="get" name="record_settings">
+        <input type="hidden" name="chanid" value="<?=$_GET['chanid']?>">
+        <input type="hidden" name="starttime" value="<?=$_GET['starttime']?>">
+<br>
+        <center>Recording Options:</center>
+                    <input type="radio" class="radio" name="record" value="never" id="record_never"<?=
+                    $this_program->will_record ? '' : ' CHECKED'?>></input>
+  <a>Don't record</a><br>
+                    <input type="radio" class="radio" name="record" value="once" id="record_once"<?=
+                    $this_program->record_once ? ' CHECKED' : ''?>></input>
+  <a>Record showing</a><br>
+                    <input type="radio" class="radio" name="record" value="daily" id="record_daily"<?=
+                    $this_program->record_daily ? ' CHECKED' : ''?>></input>
+  <a>Record every day</a> at this time<br>
+                    <input type="radio" class="radio" name="record" value="weekly" id="record_weekly"<?=
+                    $this_program->record_weekly ? ' CHECKED' : ''?>></input>
+  <a>Record every week</a> at this time<br>
+                    <input type="radio" class="radio" name="record" value="channel" id="record_channel"<?=
+                    $this_program->record_channel ? ' CHECKED' : ''?>></input>
+  <a>Always record on this channel</a><br>
+                    <input type="radio" class="radio" name="record" value="always" id="record_always"<?=
+                    $this_program->record_always ? ' CHECKED' : ''?>></input>
+  <a>Always record on any channel</a><br>
+                <br>
+  Recording Profile<br>
+  <select name="profile">
+                    <?php
+
+                        global $Profiles;
+                        foreach($Profiles as $profile) {
+                            echo '<option value="'.htmlentities($profile['id']).'"';
+                            if ($this_program->profile == $profile['id'])
+                                echo ' SELECTED';
+                            echo '>'.htmlentities($profile['name']).'</option>';
+                        }
+                        ?></select><br>
+  Rank<br>
+  <select name="rank">
+                    <?php
+                        for($rankcount=-10;$rankcount<=10;++$rankcount) {
+                            echo '<option value="'.htmlentities($rankcount).'"';
+                            if ($this_program->rank == $rankcount)
+                                echo ' SELECTED';
+                            echo '>'.htmlentities($rankcount).'</option>';
+                        }
+                        ?></select><br>
+  <input type="checkbox" class="radio" name="recorddups"<?php if ($this_program->recorddups) echo ' CHECKED' ?>>
+  Record Dupes?&nbsp;<br>
+  <input type="checkbox" class="radio" name="autoexpire" <?php if ($this_program->autoexpire) echo "CHECKED" ?>>
+  Auto-expire?&nbsp;<br>
+                    No of recordings to keep?<br><input type="input" name="maxepisodes" size="1" value="<?php echo htmlentities($this_program->maxepisodes) ?>"><br>
+  <input type="checkbox" class="radio" name="maxnewest" <?php if ($this_program->maxnewest) echo "CHECKED" ?>>
+  Record new and expire old?&nbsp;<br>
+
+                    <center><input type="submit" class="submit" name="save" value="Update Settings"></center>
+                <br>
+
+        </form>
+
+<?
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+}
+
 ?>
\ No newline at end of file
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wap/program_listing.php mythplugins-0.18.1-new/mythweb/themes/wap/program_listing.php
--- mythplugins-0.18.1-old/mythweb/themes/wap/program_listing.php	2004-05-10 23:18:24.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/themes/wap/program_listing.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,114 +1,114 @@
-<?php
-/***                                                                        ***\
-    program_listing.php                      Last Updated: 2003.08.19 (xris)
-
-    This file defines a theme class for the program listing section.
-    It must define several methods, some of which have specific
-    parameters.   documentation will be added someday.
-\***                                                                        ***/
-
-
-#class theme_program_listing extends Theme {
-class Theme_program_listing extends Theme {
-
-    /*
-        print_header:
-        This function prints the header portion of the page specific to the program listing
-    */
-    function print_header($start_time, $end_time) {
-    // Print the main page header
-        parent::print_header('MythWeb - Program Listing:  '.strftime('%B %e, %Y, %I:%M %p', $start_time));
-    // Print the header info specific to the program listing
-?>
-<p>
-    <form class="form" action="program_listing.php" method="get">
-    <center>
-    Currently Browsing<br><?=date('D m/d/y', $start_time)?><br>
-    <?=date('g:i A', $start_time)?><br>
-            Jump to<br>
-            <select name="hour"><?
-                for ($h=0;$h<24;$h++) {
-                    echo "<option value=\"$h\"";
-                    if ($h == date('H', $start_time))
-                        echo ' SELECTED';
-                    echo ">$h:00</option>";
-                }
-                ?></select><br>
-            <select name="date"><?
-            // Find out how many days into the future we should bother checking
-                $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
-                    or trigger_error('SQL Error: '.mysql_error(), FATAL);
-                list($max_days) = mysql_fetch_row($result);
-                mysql_free_result($result);
-            // Print out the list
-                for ($i=-1;$i<=$max_days;$i++) {
-                    $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
-                    $date = date("Ymd", $time);
-                    echo "<option value=\"$date\"";
-                    if ($date == date("Ymd", $start_time)) echo " selected";
-                    echo ">".date("D m/d/y" , $time)."</option>";
-                }
-                ?></select><br>
-            <input type="submit" class="submit" value="Jump">
-            </center>
-        </form>
-        <br><br>
-<?
-    }
-
-
-    function print_page(&$Channels, &$Timeslots, $list_starttime, $list_endtime) {
-    // Display the listing page header
-        $this->print_header($list_starttime, $list_endtime);
-
-//      $this->print_timeslots($Timeslots, $list_starttime, $list_endtime, 'first');
-
-        // Go through each channel and load/print its info - use references to avoid "copy" overhead
-        $channel_count = 0;
-        foreach (array_keys($Channels) as $key) {
-        // Ignore channels with no number
-            if (strlen($Channels[$key]->channum) < 1)
-                continue;
-        // Count this channel
-            $channel_count++;
-        // Grab the reference
-            $channel = &$Channels[$key];
-        // Print the data
-            $this->print_channel(&$channel, $list_starttime, $list_endtime);
-        // Cleanup is a good thing
-            unset($channel);
-        // Display the timeslot bar?
-//          if ($channel_count % timeslotbar_skip == 0)
-//              $this->print_timeslots($Timeslots, $list_starttime, $list_endtime, $channel_count);
-        }
-
-    // Display the listing page footer
-        $this->print_footer();
-    }
-
-
-    /*
-        print_footer:
-        This function prints the footer portion of the page specific to the program listing
-    */
-    function print_footer() {
-    // Print the main page's footer
-        parent::print_footer();
-    }
-
-
-    /*
-        print_channel:
-
-    */
-    function print_channel($channel, $start_time, $end_time) {
-        ?>
-        <a href="channel_detail.php?chanid=<?=$channel->chanid?>&time=<?=$start_time?>">
-        <?=prefer_channum ? $channel->channum : $channel->callsign?>&nbsp;
-        <?=prefer_channum ? $channel->callsign : $channel->channum?></a><br>
-        <?
-    }
-
-}
-
-?>
+<?php
+/***                                                                        ***\
+    program_listing.php                      Last Updated: 2003.08.19 (xris)
+
+    This file defines a theme class for the program listing section.
+    It must define several methods, some of which have specific
+    parameters.   documentation will be added someday.
+\***                                                                        ***/
+
+
+#class theme_program_listing extends Theme {
+class Theme_program_listing extends Theme {
+
+    /*
+        print_header:
+        This function prints the header portion of the page specific to the program listing
+    */
+    function print_header($start_time, $end_time) {
+    // Print the main page header
+        parent::print_header('MythWeb - Program Listing:  '.strftime('%B %e, %Y, %I:%M %p', $start_time));
+    // Print the header info specific to the program listing
+?>
+<p>
+    <form class="form" action="program_listing.php" method="get">
+    <center>
+    Currently Browsing<br><?=date('D m/d/y', $start_time)?><br>
+    <?=date('g:i A', $start_time)?><br>
+            Jump to<br>
+            <select name="hour"><?
+                for ($h=0;$h<24;$h++) {
+                    echo "<option value=\"$h\"";
+                    if ($h == date('H', $start_time))
+                        echo ' SELECTED';
+                    echo ">$h:00</option>";
+                }
+                ?></select><br>
+            <select name="date"><?
+            // Find out how many days into the future we should bother checking
+                $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
+                    or trigger_error('SQL Error: '.mysql_error(), FATAL);
+                list($max_days) = mysql_fetch_row($result);
+                mysql_free_result($result);
+            // Print out the list
+                for ($i=-1;$i<=$max_days;$i++) {
+                    $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
+                    $date = date("Ymd", $time);
+                    echo "<option value=\"$date\"";
+                    if ($date == date("Ymd", $start_time)) echo " selected";
+                    echo ">".date("D m/d/y" , $time)."</option>";
+                }
+                ?></select><br>
+            <input type="submit" class="submit" value="Jump">
+            </center>
+        </form>
+        <br><br>
+<?
+    }
+
+
+    function print_page(&$Channels, &$Timeslots, $list_starttime, $list_endtime) {
+    // Display the listing page header
+        $this->print_header($list_starttime, $list_endtime);
+
+//      $this->print_timeslots($Timeslots, $list_starttime, $list_endtime, 'first');
+
+        // Go through each channel and load/print its info - use references to avoid "copy" overhead
+        $channel_count = 0;
+        foreach (array_keys($Channels) as $key) {
+        // Ignore channels with no number
+            if (strlen($Channels[$key]->channum) < 1)
+                continue;
+        // Count this channel
+            $channel_count++;
+        // Grab the reference
+            $channel = &$Channels[$key];
+        // Print the data
+            $this->print_channel(&$channel, $list_starttime, $list_endtime);
+        // Cleanup is a good thing
+            unset($channel);
+        // Display the timeslot bar?
+//          if ($channel_count % timeslotbar_skip == 0)
+//              $this->print_timeslots($Timeslots, $list_starttime, $list_endtime, $channel_count);
+        }
+
+    // Display the listing page footer
+        $this->print_footer();
+    }
+
+
+    /*
+        print_footer:
+        This function prints the footer portion of the page specific to the program listing
+    */
+    function print_footer() {
+    // Print the main page's footer
+        parent::print_footer();
+    }
+
+
+    /*
+        print_channel:
+
+    */
+    function print_channel($channel, $start_time, $end_time) {
+        ?>
+        <a href="channel_detail.php?chanid=<?=$channel->chanid?>&time=<?=$start_time?>">
+        <?=prefer_channum ? $channel->channum : $channel->callsign?>&nbsp;
+        <?=prefer_channum ? $channel->callsign : $channel->channum?></a><br>
+        <?
+    }
+
+}
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wap/scheduled_recordings.php mythplugins-0.18.1-new/mythweb/themes/wap/scheduled_recordings.php
--- mythplugins-0.18.1-old/mythweb/themes/wap/scheduled_recordings.php	2004-05-10 23:18:24.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/themes/wap/scheduled_recordings.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,80 +1,80 @@
-<?php
-/***                                                                        ***\
-    scheduled_recordings.php                    Last Updated: 2003.08.05 (xris)
-
-    This file defines a theme class for the scheduled recordings section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-#class theme_program_detail extends Theme {
-class Theme_scheduled_recordings extends Theme {
-
-    function print_page() {
-    // Print the main page header
-        parent::print_header('MythWeb - Scheduled Recordings');
-    // Print the page contents
-        global $All_Shows;
-
-
-/*  <a href="scheduled_recordings.php?sortby=title">show</a><br>
-    <a href="scheduled_recordings.php?sortby=channum">station</a><br>
-    <a href="scheduled_recordings.php?sortby=airdate">air&nbsp;date</a><br>
-    <a href="scheduled_recordings.php?sortby=length">length</a><br>
-*/
-
-    $row = 0;
-    foreach ($All_Shows as $show) {
-    // Reset the command variable
-        $command = '';
-    // Which class does this show fall into?
-        if ($show->duplicate == 1) {
-            $class = 'duplicate';
-            $command = '<a href="scheduled_recordings.php?rerecord=yes&title='.urlencode($show->title).'&subtitle='.urlencode($show->subtitle).'&description='.urlencode($show->description).'">Rerecord</a>';
-        }
-        elseif ($show->conflicting == 1) {
-            $class   = 'conflict';
-            $command = '<a href="scheduled_recordings.php?record=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Record</a>';
-        }
-        elseif ($show->recording == 0) {
-            $class   = 'deactivated';
-            $command = '<a href="scheduled_recordings.php?activate=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Activate</a>';
-        }
-        else {
-            $class   = 'scheduled';
-            #$command = 'Don\'t&nbsp;Record';
-            $command = '';
-        }
-
-    // Print the content
-//  <tr class="<?=$class>">
-//  <td class="<?=$show->class>">
-
-        // Print a link to record this show
-        echo '<a id="program_'.$program_id_counter.'_anchor" href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'"'
-             .'>'.$show->title
-             .(preg_match('/\\w/', $show->subtitle) ? ":  $show->subtitle" : '')
-             .'</a><br>';
-        ?>
-    <?=$show->channel->name?><br>
-    <?=date('D, M j', $show->starttime)?><br>
-    <?=date('(g:i A)', $show->starttime)?> <?=nice_length($show->length)?><br>
-<?  if ($command) { ?>
-    <b><?=$command?></b><br>
-<?  } ?>
-    <br>
-    <?
-        $row++;
-    }
-?>
-
-</table>
-<?
-
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-}
-
+<?php
+/***                                                                        ***\
+    scheduled_recordings.php                    Last Updated: 2003.08.05 (xris)
+
+    This file defines a theme class for the scheduled recordings section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+#class theme_program_detail extends Theme {
+class Theme_scheduled_recordings extends Theme {
+
+    function print_page() {
+    // Print the main page header
+        parent::print_header('MythWeb - Scheduled Recordings');
+    // Print the page contents
+        global $All_Shows;
+
+
+/*  <a href="scheduled_recordings.php?sortby=title">show</a><br>
+    <a href="scheduled_recordings.php?sortby=channum">station</a><br>
+    <a href="scheduled_recordings.php?sortby=airdate">air&nbsp;date</a><br>
+    <a href="scheduled_recordings.php?sortby=length">length</a><br>
+*/
+
+    $row = 0;
+    foreach ($All_Shows as $show) {
+    // Reset the command variable
+        $command = '';
+    // Which class does this show fall into?
+        if ($show->duplicate == 1) {
+            $class = 'duplicate';
+            $command = '<a href="scheduled_recordings.php?rerecord=yes&title='.urlencode($show->title).'&subtitle='.urlencode($show->subtitle).'&description='.urlencode($show->description).'">Rerecord</a>';
+        }
+        elseif ($show->conflicting == 1) {
+            $class   = 'conflict';
+            $command = '<a href="scheduled_recordings.php?record=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Record</a>';
+        }
+        elseif ($show->recording == 0) {
+            $class   = 'deactivated';
+            $command = '<a href="scheduled_recordings.php?activate=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Activate</a>';
+        }
+        else {
+            $class   = 'scheduled';
+            #$command = 'Don\'t&nbsp;Record';
+            $command = '';
+        }
+
+    // Print the content
+//  <tr class="<?=$class>">
+//  <td class="<?=$show->class>">
+
+        // Print a link to record this show
+        echo '<a id="program_'.$program_id_counter.'_anchor" href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'"'
+             .'>'.$show->title
+             .(preg_match('/\\w/', $show->subtitle) ? ":  $show->subtitle" : '')
+             .'</a><br>';
+        ?>
+    <?=$show->channel->name?><br>
+    <?=date('D, M j', $show->starttime)?><br>
+    <?=date('(g:i A)', $show->starttime)?> <?=nice_length($show->length)?><br>
+<?  if ($command) { ?>
+    <b><?=$command?></b><br>
+<?  } ?>
+    <br>
+    <?
+        $row++;
+    }
+?>
+
+</table>
+<?
+
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+}
+
 ?>
\ No newline at end of file
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wap/search.php mythplugins-0.18.1-new/mythweb/themes/wap/search.php
--- mythplugins-0.18.1-old/mythweb/themes/wap/search.php	2004-05-10 23:18:24.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/themes/wap/search.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,58 +1,58 @@
-<?php
-/***                                                                        ***\
-    search.php                    Last Updated: 2003.08.05 (xris)
-
-    This file defines a theme class for the search section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-class Theme_search extends Theme {
-
-    function print_page() {
-    // Print the main page header
-        parent::print_header('MythWeb - Search');
-    // Print the advanced search header
-
-    // Print any search results
-        $this->print_results();
-    // Print the main page footer
-        parent::print_footer();
-    }
-
-    function print_results() {
-        global $Results;
-    // No search was performed, just return
-        if (!is_array($Results))
-            return;
-    // Search, but nothing found - notify the user
-        if (!count($Results)) {
-            echo '<p class="huge" align="center">No matches found</p>';
-            return;
-        }
-    // Get the url search string so we don't have to recreate it for each sort type
-        $search_str = '&searchstr='.urlencode($_GET['searchstr']);
-        if ($_GET['search_title'])         $search_str .= '&search_title=yes';
-        if ($_GET['search_subtitle'])      $search_str .= '&search_subtitle=yes';
-        if ($_GET['search_description'])   $search_str .= '&search_description=yes';
-        if ($_GET['search_category'])      $search_str .= '&search_category=yes';
-        if ($_GET['search_category_type']) $search_str .= '&search_category_type=yes';
-    // Display the results
-
-        $row = 0;
-        foreach ($Results as $show) {
-    // Print the content
-        echo $show->channel->name.'<br>';
-        echo '<a href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'">'.$show->title.'</a><br>';
-        if(strlen($show->subtitle))
-            echo $show->subtitle.'<br>';
-    //  echo $show->description.'<br>';
-        echo date('D m/d/y', $show->starttime).'<br>';
-        echo date('(g:i A)', $show->starttime).' '.nice_length($show->length).'<br><br>';
-
-            $row++;
-        }
-    }
-}
-
-?>
+<?php
+/***                                                                        ***\
+    search.php                    Last Updated: 2003.08.05 (xris)
+
+    This file defines a theme class for the search section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+class Theme_search extends Theme {
+
+    function print_page() {
+    // Print the main page header
+        parent::print_header('MythWeb - Search');
+    // Print the advanced search header
+
+    // Print any search results
+        $this->print_results();
+    // Print the main page footer
+        parent::print_footer();
+    }
+
+    function print_results() {
+        global $Results;
+    // No search was performed, just return
+        if (!is_array($Results))
+            return;
+    // Search, but nothing found - notify the user
+        if (!count($Results)) {
+            echo '<p class="huge" align="center">No matches found</p>';
+            return;
+        }
+    // Get the url search string so we don't have to recreate it for each sort type
+        $search_str = '&searchstr='.urlencode($_GET['searchstr']);
+        if ($_GET['search_title'])         $search_str .= '&search_title=yes';
+        if ($_GET['search_subtitle'])      $search_str .= '&search_subtitle=yes';
+        if ($_GET['search_description'])   $search_str .= '&search_description=yes';
+        if ($_GET['search_category'])      $search_str .= '&search_category=yes';
+        if ($_GET['search_category_type']) $search_str .= '&search_category_type=yes';
+    // Display the results
+
+        $row = 0;
+        foreach ($Results as $show) {
+    // Print the content
+        echo $show->channel->name.'<br>';
+        echo '<a href="program_detail.php?chanid='.$show->chanid.'&starttime='.$show->starttime.'">'.$show->title.'</a><br>';
+        if(strlen($show->subtitle))
+            echo $show->subtitle.'<br>';
+    //  echo $show->description.'<br>';
+        echo date('D m/d/y', $show->starttime).'<br>';
+        echo date('(g:i A)', $show->starttime).' '.nice_length($show->length).'<br><br>';
+
+            $row++;
+        }
+    }
+}
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wap/theme.php mythplugins-0.18.1-new/mythweb/themes/wap/theme.php
--- mythplugins-0.18.1-old/mythweb/themes/wap/theme.php	2004-05-10 23:18:24.000000000 -0700
+++ mythplugins-0.18.1-new/mythweb/themes/wap/theme.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,70 +1,70 @@
-<?php
-/***                                                                        ***\
-    theme.php                             Last Updated: 2003.08.19 (xris)
-
-    This is the main theme class for the Default MythWeb theme.  It should
-    not be instantiated directly, but will most likely contain methods
-    called from its child classes via the parent:: construct.
-\***                                                                        ***/
-
-class Theme {
-
-    function print_header($page_title = 'MythWeb') {
-// Print the appropriate header information
-    header("Content-Type: text/html; charset=utf-8");
-?>
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
-<html>
-
-<head>
-    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
-
-    <Link Rel="stylesheet" HRef="<?=theme_dir?>style.css" Type="text/css" Media="screen">
-</head>
-
-<body bgcolor="#003060" text="#DEDEDE" link="#3181B4" alink="#CC0000" vlink="#3181B4">
-
-<center><img src="<?=theme_dir?>img/mythtv-logo.gif" border="0" alt="MythTV" style="behavior: url('<?=theme_dir?>pngbehavior.htc');"><br>
-    <?=$this->print_menu_content()?>
-</center><br>
-<form action="search.php" method="post">
-        <center><input type="text" name="searchstr" value="<?php echo $_GET['searchstr']?>"><br>
-        <input type="submit" class="submit" value="search"></center><br>
-        <!--a href="search.php">[advanced]</a><br-->
-    </form>
-<?
-    }
-
-    function print_menu_content() {
-        ?>
-                <a href="program_listing.php">Listings</a><br>
-                <a href="scheduled_recordings.php">Scheduled</a><br>
-                <a href="recorded_programs.php">Recorded</a><br>
-<?php
-    }
-
-    function print_footer() {
-/*?>
-<p align="center">
-<font size="-1">MythWAP is part of the <a href="http://www.mythtv.org">MythTV</a> Project</font>
-</p>
-
-<?*/
-// Display footnotes
-    global $Footnotes;
-    if (is_array($Footnotes)) {
-        foreach ($Footnotes as $note) {
-            echo $note;
-        }
-    }
-?>
-
-
-</body>
-</html>
-<?
-    }
-}
-
-
-?>
+<?php
+/***                                                                        ***\
+    theme.php                             Last Updated: 2003.08.19 (xris)
+
+    This is the main theme class for the Default MythWeb theme.  It should
+    not be instantiated directly, but will most likely contain methods
+    called from its child classes via the parent:: construct.
+\***                                                                        ***/
+
+class Theme {
+
+    function print_header($page_title = 'MythWeb') {
+// Print the appropriate header information
+    header("Content-Type: text/html; charset=utf-8");
+?>
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
+<html>
+
+<head>
+    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">
+
+    <Link Rel="stylesheet" HRef="<?=theme_dir?>style.css" Type="text/css" Media="screen">
+</head>
+
+<body bgcolor="#003060" text="#DEDEDE" link="#3181B4" alink="#CC0000" vlink="#3181B4">
+
+<center><img src="<?=theme_dir?>img/mythtv-logo.gif" border="0" alt="MythTV" style="behavior: url('<?=theme_dir?>pngbehavior.htc');"><br>
+    <?=$this->print_menu_content()?>
+</center><br>
+<form action="search.php" method="post">
+        <center><input type="text" name="searchstr" value="<?php echo $_GET['searchstr']?>"><br>
+        <input type="submit" class="submit" value="search"></center><br>
+        <!--a href="search.php">[advanced]</a><br-->
+    </form>
+<?
+    }
+
+    function print_menu_content() {
+        ?>
+                <a href="program_listing.php">Listings</a><br>
+                <a href="scheduled_recordings.php">Scheduled</a><br>
+                <a href="recorded_programs.php">Recorded</a><br>
+<?php
+    }
+
+    function print_footer() {
+/*?>
+<p align="center">
+<font size="-1">MythWAP is part of the <a href="http://www.mythtv.org">MythTV</a> Project</font>
+</p>
+
+<?*/
+// Display footnotes
+    global $Footnotes;
+    if (is_array($Footnotes)) {
+        foreach ($Footnotes as $note) {
+            echo $note;
+        }
+    }
+?>
+
+
+</body>
+</html>
+<?
+    }
+}
+
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wml/channel_detail.php mythplugins-0.18.1-new/mythweb/themes/wml/channel_detail.php
--- mythplugins-0.18.1-old/mythweb/themes/wml/channel_detail.php	2004-12-05 11:52:58.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/wml/channel_detail.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,90 +1,90 @@
-<?php
-/***                                                                        ***\
-    channel_detail.php                        Last Updated: 2004.10.25 (jbuckshin)
-
-    This file defines a theme class for the channel detail section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-class Theme_channel_detail extends Theme {
-
-    function print_page() {
-
-        // Print the main page header
-        parent::print_header('MythWeb - Channel Detail');
-        parent::print_menu_content();
-
-        // Print out some header info about this channel and time
-        global $this_channel;
-?>
-<p><br/>
-<?php 
-        if (! isset($_GET['jump'])) {
-            echo '<a href="channel_detail.php?chanid='.$_GET['chanid'].'&amp;jump=y">'.t('Jump to')." ".t('Date').'</a><br/>';
-        }
-        echo "<b>Channel ".$this_channel->channum." ".$this_channel->callsign."</b></p>";
-        echo "<p>";
-
-        if (isset($_SESSION['list_time'])) {
-            echo strftime(t('generic_date'), $_SESSION['list_time']);
-        }
-?>
-</p>
-<p>
-<?php
-        $carddata="";
-        // Find out how many days into the future we should bother checking
-        $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
-            or trigger_error('SQL Error: '.mysql_error(), FATAL);
-        list($max_days) = mysql_fetch_row($result);
-        mysql_free_result($result);
-        // Print out the list
-        for ($i=-1;$i<=$max_days;$i++) {
-            $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
-            $date = date("Ymd", $time);
-            $carddata.="<a href=\"channel_detail.php?chanid=".$_GET['chanid']."&amp;time=".$time."\">".strftime(t('generic_date'), $time)."</a><br/>\n";
-        }
-
-        // Print the shows for today
-        $this->print_shows($carddata);
-
-        // Print the main page footer
-        parent::print_footer();
-    }
-
-    function print_shows($carddata) {
-
-        global $this_channel;
-        // No search was performed, just return
-        if (!is_array($this_channel->programs)) {
-            return;
-        }
-
-        if (isset($_GET['jump'])) {
-            echo '<br/>';
-            echo $carddata;
-            echo '</p></card>';
-        } else {
-?>
-<do type="accept">
-<go href="program_detail.php" method="get">
-<postfield name="chanid" value="<?php echo $_GET['chanid']?>"/>
-<postfield name="starttime" value="$(starttime)"/>
-</go>
-</do>
-<select name="starttime">
-<?php
-
-            // Display the results
-            $row = 0;
-
-            foreach ($this_channel->programs as $show) {
-                // Print the content
-                echo '<option value="'.$show->starttime.'">'.htmlspecialchars($show->title)." (".strftime(t('generic_time'), $show->starttime).")</option>\n";
-            }
-            echo '</select></p></card>';
-        }
-    }
-}
-?>
+<?php
+/***                                                                        ***\
+    channel_detail.php                        Last Updated: 2004.10.25 (jbuckshin)
+
+    This file defines a theme class for the channel detail section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+class Theme_channel_detail extends Theme {
+
+    function print_page() {
+
+        // Print the main page header
+        parent::print_header('MythWeb - Channel Detail');
+        parent::print_menu_content();
+
+        // Print out some header info about this channel and time
+        global $this_channel;
+?>
+<p><br/>
+<?php 
+        if (! isset($_GET['jump'])) {
+            echo '<a href="channel_detail.php?chanid='.$_GET['chanid'].'&amp;jump=y">'.t('Jump to')." ".t('Date').'</a><br/>';
+        }
+        echo "<b>Channel ".$this_channel->channum." ".$this_channel->callsign."</b></p>";
+        echo "<p>";
+
+        if (isset($_SESSION['list_time'])) {
+            echo strftime(t('generic_date'), $_SESSION['list_time']);
+        }
+?>
+</p>
+<p>
+<?php
+        $carddata="";
+        // Find out how many days into the future we should bother checking
+        $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
+            or trigger_error('SQL Error: '.mysql_error(), FATAL);
+        list($max_days) = mysql_fetch_row($result);
+        mysql_free_result($result);
+        // Print out the list
+        for ($i=-1;$i<=$max_days;$i++) {
+            $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
+            $date = date("Ymd", $time);
+            $carddata.="<a href=\"channel_detail.php?chanid=".$_GET['chanid']."&amp;time=".$time."\">".strftime(t('generic_date'), $time)."</a><br/>\n";
+        }
+
+        // Print the shows for today
+        $this->print_shows($carddata);
+
+        // Print the main page footer
+        parent::print_footer();
+    }
+
+    function print_shows($carddata) {
+
+        global $this_channel;
+        // No search was performed, just return
+        if (!is_array($this_channel->programs)) {
+            return;
+        }
+
+        if (isset($_GET['jump'])) {
+            echo '<br/>';
+            echo $carddata;
+            echo '</p></card>';
+        } else {
+?>
+<do type="accept">
+<go href="program_detail.php" method="get">
+<postfield name="chanid" value="<?php echo $_GET['chanid']?>"/>
+<postfield name="starttime" value="$(starttime)"/>
+</go>
+</do>
+<select name="starttime">
+<?php
+
+            // Display the results
+            $row = 0;
+
+            foreach ($this_channel->programs as $show) {
+                // Print the content
+                echo '<option value="'.$show->starttime.'">'.htmlspecialchars($show->title)." (".strftime(t('generic_time'), $show->starttime).")</option>\n";
+            }
+            echo '</select></p></card>';
+        }
+    }
+}
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wml/program_detail.php mythplugins-0.18.1-new/mythweb/themes/wml/program_detail.php
--- mythplugins-0.18.1-old/mythweb/themes/wml/program_detail.php	2005-02-11 10:02:48.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/wml/program_detail.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,131 +1,131 @@
-<?php
-/***                                                                        ***\
-    program_detail.php                       Last Updated: 2004.10.25 (jbuckshin)
-
-    This file defines a theme class for the program details section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-#class theme_program_detail extends Theme {
-class Theme_program_detail extends Theme {
-
-    function print_page(&$program, &$schedule, &$channel) {
-
-        parent::print_header("Prog Detail");
-        parent::print_menu_content();
-        // Print the page contents
-?>
-<p>
-<br/>
-<a href="channel_detail.php?chanid=<?php echo $channel->chanid?>" ><?php echo $channel->channum." ".$channel->callsign; ?></a><br/>
-<b><?php echo htmlspecialchars($program->title)?></b><br/>
-<a href="#cardmodify" ><?php echo t('Recording Options') ?></a><br/>
-<?php echo strftime(t('generic_date'), $program->starttime)?><br/>
-<?php echo t('$1 to $2', strftime('%r', $program->starttime), strftime('%r', $program->endtime)).' ('.tn('$1 min', '$1 mins', (int)($program->length/60)).')' ?> <br/>
-<?php
-        if ($program->previouslyshown) {
-            echo t('Rerun').' ';
-        }
-        if (strlen($program->subtitle)) { 
-?>
-<?php echo t('Subtitle') ?>: <b><?php echo htmlspecialchars($program->subtitle)?></b><br/>
-<?php }
-        if (strlen($program->description)) {?>
-<?php echo t('Description') ?>: <?php echo htmlspecialchars(str_replace('$', '', $program->description))?><br/>
-<?php         }
-         if (strlen($program->category)) {
-            echo t('Category') ?>: <?php echo $program->category?><br/>
-<?php         }
-        if (strlen($program->airdate)) {
-            echo t('Original Airdate') ?>: <?php echo $program->airdate?><br/>
-<?php         }
-        if (strlen($program->rating)) {?>
-<?php echo strlen($program->rater) > 0 ? "$program->rater " : ''?><?php echo t('Rating') ?>: <?php echo $program->rating?><br/>
-<?php
-                ?><br/>
-<?php     } 
-?>
-</p>
-</card>
-<card id="cardmodify" title="<?php echo t('Update Recording Settings') ?>">
-<?php
-    $HREFUrl = "";
-    if ($_GET['recordid']) {
-        $HREFUrl = 'program_detail.php?recordid='.urlencode($_GET['recordid']);
-    } else {
-        $HREFUrl = 'program_detail.php?chanid='.urlencode($_GET['chanid']).'&amp;starttime='.urlencode($_GET['starttime']);
-    }
-?>
-<do type="accept">
-<go href="<?php echo $HREFUrl ?>" method="post">
-<postfield name="save" value="submit"/>
-<postfield name="record" value="$(record)"/>
-<postfield name="profile" value="$(profile)"/>
-<postfield name="recpriority" value="$(recpriority)"/>
-<postfield name="maxepisodes" value="$(maxepisodes)"/>
-<postfield name="startoffset" value="$(startoffset)"/>
-<postfield name="endoffset" value="$(endoffset)"/>
-<postfield name="dupmethod" value="$(dupmethod)"/>
-<postfield name="autoexpire" value="$(autoexpire)"/>
-<postfield name="maxnewest" value="$(maxnewest)"/>
-</go>
-</do>
-<p>
-<?php echo t('Recording Options') ?>:
-<select name="record" value="<?php echo $schedule->type ?>">
-<option value="<?php echo rectype_dontrec ?>" id="<?php echo rectype_dontrec ?>"><?php if (!$schedule->recordid) echo "(*)"; ?><?php echo t('rectype: dontrec') ?></option>
-<option value="<?php echo rectype_once ?>" id="<?php echo rectype_once ?>"><?php if ($schedule->type == rectype_once) echo "(*)"; ?><?php echo t('rectype: once') ?></option>
-<option value="<?php echo rectype_daily ?>" id="<?php echo rectype_daily ?>"><?php if ($schedule->type == retype_daily) echo "(*)"; ?>Record <?php echo t('rectype: daily') ?></option>
-<option value="<?php echo rectype_weekly ?>" id="<?php echo rectype_weekly ?>"><?php if ($schedule->type ==rectype_weekly) echo "(*)"; ?>Record <?php echo t('rectype: weekly') ?></option>
-<option value="<?php echo rectype_channel ?>" id="<?php echo rectype_channel ?>"><?php if ($schedule->type == rectype_channel) echo "(*)"; ?><?php echo t('rectype: channel') ?></option>
-<option value="<?php echo rectype_always ?>" id="<?php echo rectype_always ?>"><?php if ($schedule->type == rectype_always) echo "(*)"; ?><?php echo t('rectype: always') ?></option>
-<option value="<?php echo rectype_findone ?>" id="<?php echo rectype_findone ?>"><?php if ($schedule->type == rectype_findone) echo "(*)"; ?><?php echo t('rectype: findone') ?></option>
-<option value="<?php echo rectype_finddaily ?>" id="<?php echo rectype_finddaily ?>"><?php if ($schedule->type == rectype_finddaily) echo "(*)"; ?><?php echo t('rectype-long: finddaily') ?></option>
-<option value="<?php echo rectype_findweekly ?>" id="<?php echo rectype_findweekly ?>"><?php if ($schedule->type == rectype_findweekly) echo "(*)"; ?><?php echo t('rectype-long: findweekly') ?></option>
-<option value="<?php echo rectype_override ?>" id="<?php echo rectype_override ?>"><?php if ($schedule->type == rectype_override) echo "(*)"; ?><?php echo t('rectype: override') ?></option>
-</select>
-<?php echo t('Recording Profile') ?>:
-<select name="profile" value="<?php echo $program->profile ?>">
-<?php
-
-    foreach(array('Default', 'Live TV', 'High Quality', 'Low Quality') as $profile) {
-        echo '<option value="'.htmlentities($profile).'">';
-        echo htmlentities($profile).'</option>';
-    }
-?>
-</select>
-<?php echo t('Recording Priority') ?>: <input name="recpriority" type="text" value="<?php echo $program->recpriority ?>" format="N*" size="2"/>
-<br/>
-<?php echo t('No. of recordings to keep') ?>:<input type="text" name="maxepisodes" emptyok="true" size="1" format="N" value="<?php echo htmlentities($program->maxepisodes) ?>"/>
-<br/>
-<?php echo t('Start Early') ?>:<input type="text" name="startoffset" emptyok="true" size="2" format="NN" value="<?php echo htmlentities($program->startoffset) ?>"/>
-<br/>
-<?php echo t('End Late') ?>:<input type="text" name="endoffset" emptyok="true" size="2" format="NN" value="<?php echo htmlentities($program->endoffset) ?>"/>
-<br/>
-<?php echo t('Duplicate Check method') ?>
-<?php 
-if ($program->dupmethod == 0 || $program->dupmethod == 6)
-    $local_dupmethod = 6;
-else
-    $local_dupmethod = $program->dupmethod;
-?>
-<select name="dupmethod" value="<?php $local_dupmethod ?>">
-<option value="1"><?php echo t('None') ?></option>
-<option value="2"><?php echo t('Subtitle') ?></option>
-<option value="4"><?php echo t('Description') ?></option>
-<option value="6"><?php echo t('Subtitle and Description') ?></option>
-</select>
-<select name="autoexpire" multiple="true" value="<?php if ($program->autoexpire) echo "checked" ?>">
-<option value="checked" id="o2"><?php echo t('Auto-expire recordings') ?></option>
-</select>
-<select name="maxnewest" multiple="true" value="<?php if ($program->maxnewest) echo "checked" ?>">
-<option value="checked"><?php echo t('Record new and expire old') ?></option>
-</select>
-</p></card>
-<?php
-    // Print the main page footer
-    parent::print_footer();
-    }
-}
-?>
+<?php
+/***                                                                        ***\
+    program_detail.php                       Last Updated: 2004.10.25 (jbuckshin)
+
+    This file defines a theme class for the program details section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+#class theme_program_detail extends Theme {
+class Theme_program_detail extends Theme {
+
+    function print_page(&$program, &$schedule, &$channel) {
+
+        parent::print_header("Prog Detail");
+        parent::print_menu_content();
+        // Print the page contents
+?>
+<p>
+<br/>
+<a href="channel_detail.php?chanid=<?php echo $channel->chanid?>" ><?php echo $channel->channum." ".$channel->callsign; ?></a><br/>
+<b><?php echo htmlspecialchars($program->title)?></b><br/>
+<a href="#cardmodify" ><?php echo t('Recording Options') ?></a><br/>
+<?php echo strftime(t('generic_date'), $program->starttime)?><br/>
+<?php echo t('$1 to $2', strftime('%r', $program->starttime), strftime('%r', $program->endtime)).' ('.tn('$1 min', '$1 mins', (int)($program->length/60)).')' ?> <br/>
+<?php
+        if ($program->previouslyshown) {
+            echo t('Rerun').' ';
+        }
+        if (strlen($program->subtitle)) { 
+?>
+<?php echo t('Subtitle') ?>: <b><?php echo htmlspecialchars($program->subtitle)?></b><br/>
+<?php }
+        if (strlen($program->description)) {?>
+<?php echo t('Description') ?>: <?php echo htmlspecialchars(str_replace('$', '', $program->description))?><br/>
+<?php         }
+         if (strlen($program->category)) {
+            echo t('Category') ?>: <?php echo $program->category?><br/>
+<?php         }
+        if (strlen($program->airdate)) {
+            echo t('Original Airdate') ?>: <?php echo $program->airdate?><br/>
+<?php         }
+        if (strlen($program->rating)) {?>
+<?php echo strlen($program->rater) > 0 ? "$program->rater " : ''?><?php echo t('Rating') ?>: <?php echo $program->rating?><br/>
+<?php
+                ?><br/>
+<?php     } 
+?>
+</p>
+</card>
+<card id="cardmodify" title="<?php echo t('Update Recording Settings') ?>">
+<?php
+    $HREFUrl = "";
+    if ($_GET['recordid']) {
+        $HREFUrl = 'program_detail.php?recordid='.urlencode($_GET['recordid']);
+    } else {
+        $HREFUrl = 'program_detail.php?chanid='.urlencode($_GET['chanid']).'&amp;starttime='.urlencode($_GET['starttime']);
+    }
+?>
+<do type="accept">
+<go href="<?php echo $HREFUrl ?>" method="post">
+<postfield name="save" value="submit"/>
+<postfield name="record" value="$(record)"/>
+<postfield name="profile" value="$(profile)"/>
+<postfield name="recpriority" value="$(recpriority)"/>
+<postfield name="maxepisodes" value="$(maxepisodes)"/>
+<postfield name="startoffset" value="$(startoffset)"/>
+<postfield name="endoffset" value="$(endoffset)"/>
+<postfield name="dupmethod" value="$(dupmethod)"/>
+<postfield name="autoexpire" value="$(autoexpire)"/>
+<postfield name="maxnewest" value="$(maxnewest)"/>
+</go>
+</do>
+<p>
+<?php echo t('Recording Options') ?>:
+<select name="record" value="<?php echo $schedule->type ?>">
+<option value="<?php echo rectype_dontrec ?>" id="<?php echo rectype_dontrec ?>"><?php if (!$schedule->recordid) echo "(*)"; ?><?php echo t('rectype: dontrec') ?></option>
+<option value="<?php echo rectype_once ?>" id="<?php echo rectype_once ?>"><?php if ($schedule->type == rectype_once) echo "(*)"; ?><?php echo t('rectype: once') ?></option>
+<option value="<?php echo rectype_daily ?>" id="<?php echo rectype_daily ?>"><?php if ($schedule->type == retype_daily) echo "(*)"; ?>Record <?php echo t('rectype: daily') ?></option>
+<option value="<?php echo rectype_weekly ?>" id="<?php echo rectype_weekly ?>"><?php if ($schedule->type ==rectype_weekly) echo "(*)"; ?>Record <?php echo t('rectype: weekly') ?></option>
+<option value="<?php echo rectype_channel ?>" id="<?php echo rectype_channel ?>"><?php if ($schedule->type == rectype_channel) echo "(*)"; ?><?php echo t('rectype: channel') ?></option>
+<option value="<?php echo rectype_always ?>" id="<?php echo rectype_always ?>"><?php if ($schedule->type == rectype_always) echo "(*)"; ?><?php echo t('rectype: always') ?></option>
+<option value="<?php echo rectype_findone ?>" id="<?php echo rectype_findone ?>"><?php if ($schedule->type == rectype_findone) echo "(*)"; ?><?php echo t('rectype: findone') ?></option>
+<option value="<?php echo rectype_finddaily ?>" id="<?php echo rectype_finddaily ?>"><?php if ($schedule->type == rectype_finddaily) echo "(*)"; ?><?php echo t('rectype-long: finddaily') ?></option>
+<option value="<?php echo rectype_findweekly ?>" id="<?php echo rectype_findweekly ?>"><?php if ($schedule->type == rectype_findweekly) echo "(*)"; ?><?php echo t('rectype-long: findweekly') ?></option>
+<option value="<?php echo rectype_override ?>" id="<?php echo rectype_override ?>"><?php if ($schedule->type == rectype_override) echo "(*)"; ?><?php echo t('rectype: override') ?></option>
+</select>
+<?php echo t('Recording Profile') ?>:
+<select name="profile" value="<?php echo $program->profile ?>">
+<?php
+
+    foreach(array('Default', 'Live TV', 'High Quality', 'Low Quality') as $profile) {
+        echo '<option value="'.htmlentities($profile).'">';
+        echo htmlentities($profile).'</option>';
+    }
+?>
+</select>
+<?php echo t('Recording Priority') ?>: <input name="recpriority" type="text" value="<?php echo $program->recpriority ?>" format="N*" size="2"/>
+<br/>
+<?php echo t('No. of recordings to keep') ?>:<input type="text" name="maxepisodes" emptyok="true" size="1" format="N" value="<?php echo htmlentities($program->maxepisodes) ?>"/>
+<br/>
+<?php echo t('Start Early') ?>:<input type="text" name="startoffset" emptyok="true" size="2" format="NN" value="<?php echo htmlentities($program->startoffset) ?>"/>
+<br/>
+<?php echo t('End Late') ?>:<input type="text" name="endoffset" emptyok="true" size="2" format="NN" value="<?php echo htmlentities($program->endoffset) ?>"/>
+<br/>
+<?php echo t('Duplicate Check method') ?>
+<?php 
+if ($program->dupmethod == 0 || $program->dupmethod == 6)
+    $local_dupmethod = 6;
+else
+    $local_dupmethod = $program->dupmethod;
+?>
+<select name="dupmethod" value="<?php $local_dupmethod ?>">
+<option value="1"><?php echo t('None') ?></option>
+<option value="2"><?php echo t('Subtitle') ?></option>
+<option value="4"><?php echo t('Description') ?></option>
+<option value="6"><?php echo t('Subtitle and Description') ?></option>
+</select>
+<select name="autoexpire" multiple="true" value="<?php if ($program->autoexpire) echo "checked" ?>">
+<option value="checked" id="o2"><?php echo t('Auto-expire recordings') ?></option>
+</select>
+<select name="maxnewest" multiple="true" value="<?php if ($program->maxnewest) echo "checked" ?>">
+<option value="checked"><?php echo t('Record new and expire old') ?></option>
+</select>
+</p></card>
+<?php
+    // Print the main page footer
+    parent::print_footer();
+    }
+}
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wml/program_listing.php mythplugins-0.18.1-new/mythweb/themes/wml/program_listing.php
--- mythplugins-0.18.1-old/mythweb/themes/wml/program_listing.php	2004-12-05 11:52:58.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/wml/program_listing.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,259 +1,259 @@
-<?php
-/***                                                                        ***\
-    program_listing.php                      Last Updated: 2004.10.25 (jbuckshin)
-
-    This file defines a theme class for the program listing section.
-    It must define several methods, some of which have specific
-    parameters.   documentation will be added someday.
-\***                                                                        ***/
-
-
-class Theme_program_listing extends Theme {
-
-    function print_header($start_time, $end_time) {
-
-        // Print the main page header
-        parent::print_header('MythWeb - '.t('Listings'));
-        parent::print_menu_content();
-    }
-
-    function print_page(&$Channels, &$Timeslots, $list_starttime, $list_endtime) {
-
-        // Display the listing page header
-        $this->print_header($list_starttime, $list_endtime);
-
-        if ((! isset($_GET['listbytime'])) && (! isset($_GET['listbychannum'])) && (! isset($_GET['listbycallsign']))) {
-?>
-<p>
-View listings by<br/>
-<a href="#card2">Time</a> or <br/><a href="program_listing.php?listbychannum=y">Channel Number</a> or <br/><a href="program_listing.php?listbycallsign">Call Sign</a>
-</p>
-</card>
-<card id="card2" title="By Time">
-<p>
-<a href="program_listing.php?listbytime=y">Listings Now</a><br/>
-<?php
-            $seconds_in_day = 60 * 60 * 24;
-
-            // Find out how many days into the future we should bother checking
-            $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
-            or trigger_error('SQL Error: '.mysql_error(), FATAL);
-
-            list($max_days) = mysql_fetch_row($result);
-            mysql_free_result($result);
-
-            // Print out the list
-            for ($i=-1;$i<=$max_days;$i++) {
-                $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
-                $date = date("Ymd", $time);
-                echo '<a href="program_listing.php?listbytime=y&amp;date='.$date.'">'.date("D n/j", $time)."</a><br/>\n";
-            }
-?>
-</p>
-</card>
-<card id="card3" title="By Channel">
-<p>
-<do type="accept" label="Go">
-<go href="channel_detail.php" method="get">
-<postfield name="chanid" value="$(chanid)"/>
-<postfield name="time" value="<?php echo $start_time; ?>"/>
-</go>
-</do>
-Enter Channel:<br/>
-(use chanid)
-<input name="chanid" type="text" format="N*" size="4"/>
-
-<?php
-
-        }
-        // Go through each channel and load/print its info - use references to avoid "copy" overhead
-
-        $bytime = $_GET['listbytime'];
-        $bynum = $_GET['listbychannum'];
-        $bycall = $_GET['listbycallsign'];
-
-        if (isset($bynum)) {
-            echo '<p>';
-            $row=0;
-            $page_size=20;
-            $page = $_GET['page'];
-
-            if (! isset($page)) $page=1;
-            $page_start = ($page - 1) * $page_size + 1;
-            $page_end = $page_start + $page_size;
-
-            if ($page != 1) echo '<a href="program_listing.php?listbychannum=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
-            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbychannum=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
-
-            foreach (array_keys($Channels) as $key) {
-
-                $row++;
-
-                // pager code
-                if (($row < $page_start) || ($row >= $page_end)) {
-                    continue;
-                }
-
-                // Ignore channels with no number
-                if (strlen($Channels[$key]->channum) < 1) {
-                    continue;
-                }
-
-                echo "<a href='channel_detail.php?chanid=".$Channels[$key]->chanid."'>".$Channels[$key]->channum."</a> ";
-                // Count this channel
-                $channel_count++;
-            }
-        } elseif (isset($bycall)) {
-
-            echo '<p>';
-
-            $row=0;
-            $page_size=20;
-            $page = $_GET['page'];
-
-            if (! isset($page)) $page=1;
-            $page_start = ($page - 1) * $page_size + 1;
-            $page_end = $page_start + $page_size;
-
-            if ($page != 1) echo '<a href="program_listing.php?listbycallsign=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
-            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbycallsign=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
-            echo "<br/>";
-
-            foreach (array_keys($Channels) as $key) {
-
-                $row++;
-
-                // pager code
-                if (($row < $page_start) || ($row >= $page_end)) {
-                    continue;
-                }
-
-                // Ignore channels with no number
-                if (strlen($Channels[$key]->channum) < 1) {
-                    continue;
-                }
-
-                echo "<a href='channel_detail.php?chanid=".$Channels[$key]->chanid."'>".$Channels[$key]->callsign."</a><br/> ";
-
-                // Count this channel
-                $channel_count++;
-            }
-            
-        }
-        if (isset($bytime)) {
-?>
-<do type="accept" label="Go">
-<go href="program_listing.php" method="get">
-<postfield name="listbytime" value="y"/>
-<postfield name="hour" value="$(hour)"/>
-<postfield name="date" value="<?php echo date("Ymd", $list_starttime); ?>"/>
-</go>
-</do>
-<?php
-            echo "<p>\n";
-            if (is_numeric($bytime)) {
-                $list_starttime = mktime($bytime,0,0, date('g', $list_starttime), date('j', $list_starttime), date('Y', $list_starttime));
-            }
-
-            $row=0;
-            $page_size=15;
-            $page = $_GET['page'];
-
-            if (! isset($page)) $page=1;
-            $page_start = ($page - 1) * $page_size + 1;
-            $page_end = $page_start + $page_size;
-
-            $prev_time = $_GET['time'];
-            $prev_date = $_GET['date'];
-            $prev_hour = $_GET['hour'];
-            $prev_query = "";
-            if (isset($prev_time)) {
-                $prev_query = "&amp;time=".$prev_time;
-            } elseif (isset($prev_date)) {
-                $prev_query = "&amp;date=".$prev_date;
-                if (isset($prev_hour)) {
-                    $prev_query.="&amp;hour=".$prev_hour;
-                }
-            }
-
-            if ($page != 1) echo '<a href="program_listing.php?listbytime=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
-            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbytime=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
-            echo "<br/>";
-
-            foreach (array_keys($Channels) as $key) {
-
-                $row++;
-
-                // pager code
-                if (($row < $page_start) || ($row >= $page_end)) {
-                    continue;
-                }
-
-                // Ignore channels with no number
-                if (strlen($Channels[$key]->channum) < 1) {
-                    continue;
-                }
-
-                // Count this channel
-                $channel_count++;
-
-                // Grab the reference
-                $channel = &$Channels[$key];
-
-                // modify the end time so we are only looking at a 1 hour slice,
-                // this is critical to insure minimal data returned.
-                $channel->display_programs($list_starttime, $list_endtime);
-
-                // Cleanup is a good thing
-                unset($channel);
-            }
-
-            if ($page != 1) echo '<a href="program_listing.php?listbytime=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
-            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbytime=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
-
-            echo '<br/>'.t('Jump to').' '.t('Hour').':';
-            echo '<input type="text" name="hour" format="N*" size="2" emptyok="true"/>';
-        }
-
-        echo '</p></card>';
-
-        // Display the listing page footer
-        $this->print_footer();
-    }
-
-    /*
-        print_footer:
-        This function prints the footer portion of the page specific to the program listing
-    */
-    function print_footer() {
-        // Print the main page's footer
-        parent::print_footer();
-    }
-
-    /*
-        print_channel:
-
-    */
-    function print_channel($channel, $start_time, $end_time) {
-?>
-<a href="channel_detail.php?chanid=<?php echo $channel->chanid?>&amp;time=<?php echo $start_time?>">
-<?php echo prefer_channum ? $channel->channum : $channel->callsign?>&nbsp;
-<?php echo prefer_channum ? $channel->callsign : $channel->channum?></a><br/>
-<?php
-    }
-
-    function print_program($program, $timeslots_used, $starttime) {
-
-        echo $program->channel->callsign."  "; //chanid." ";
-        echo strftime($_SESSION['time_format'], $program->starttime);
-        echo ' - <a href="program_detail.php?chanid='.$program->chanid.'&amp;starttime='.$program->starttime.'">';
-        echo htmlspecialchars($program->title);
-        echo "</a><br/>\n";
-
-    }
-
-    function print_nodata($timeslots_left) {
-    }
-}
-
-?>
+<?php
+/***                                                                        ***\
+    program_listing.php                      Last Updated: 2004.10.25 (jbuckshin)
+
+    This file defines a theme class for the program listing section.
+    It must define several methods, some of which have specific
+    parameters.   documentation will be added someday.
+\***                                                                        ***/
+
+
+class Theme_program_listing extends Theme {
+
+    function print_header($start_time, $end_time) {
+
+        // Print the main page header
+        parent::print_header('MythWeb - '.t('Listings'));
+        parent::print_menu_content();
+    }
+
+    function print_page(&$Channels, &$Timeslots, $list_starttime, $list_endtime) {
+
+        // Display the listing page header
+        $this->print_header($list_starttime, $list_endtime);
+
+        if ((! isset($_GET['listbytime'])) && (! isset($_GET['listbychannum'])) && (! isset($_GET['listbycallsign']))) {
+?>
+<p>
+View listings by<br/>
+<a href="#card2">Time</a> or <br/><a href="program_listing.php?listbychannum=y">Channel Number</a> or <br/><a href="program_listing.php?listbycallsign">Call Sign</a>
+</p>
+</card>
+<card id="card2" title="By Time">
+<p>
+<a href="program_listing.php?listbytime=y">Listings Now</a><br/>
+<?php
+            $seconds_in_day = 60 * 60 * 24;
+
+            // Find out how many days into the future we should bother checking
+            $result = mysql_query('SELECT TO_DAYS(max(starttime)) - TO_DAYS(NOW()) FROM program')
+            or trigger_error('SQL Error: '.mysql_error(), FATAL);
+
+            list($max_days) = mysql_fetch_row($result);
+            mysql_free_result($result);
+
+            // Print out the list
+            for ($i=-1;$i<=$max_days;$i++) {
+                $time = mktime(0,0,0, date('m'), date('d') + $i, date('Y'));
+                $date = date("Ymd", $time);
+                echo '<a href="program_listing.php?listbytime=y&amp;date='.$date.'">'.date("D n/j", $time)."</a><br/>\n";
+            }
+?>
+</p>
+</card>
+<card id="card3" title="By Channel">
+<p>
+<do type="accept" label="Go">
+<go href="channel_detail.php" method="get">
+<postfield name="chanid" value="$(chanid)"/>
+<postfield name="time" value="<?php echo $start_time; ?>"/>
+</go>
+</do>
+Enter Channel:<br/>
+(use chanid)
+<input name="chanid" type="text" format="N*" size="4"/>
+
+<?php
+
+        }
+        // Go through each channel and load/print its info - use references to avoid "copy" overhead
+
+        $bytime = $_GET['listbytime'];
+        $bynum = $_GET['listbychannum'];
+        $bycall = $_GET['listbycallsign'];
+
+        if (isset($bynum)) {
+            echo '<p>';
+            $row=0;
+            $page_size=20;
+            $page = $_GET['page'];
+
+            if (! isset($page)) $page=1;
+            $page_start = ($page - 1) * $page_size + 1;
+            $page_end = $page_start + $page_size;
+
+            if ($page != 1) echo '<a href="program_listing.php?listbychannum=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
+            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbychannum=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
+
+            foreach (array_keys($Channels) as $key) {
+
+                $row++;
+
+                // pager code
+                if (($row < $page_start) || ($row >= $page_end)) {
+                    continue;
+                }
+
+                // Ignore channels with no number
+                if (strlen($Channels[$key]->channum) < 1) {
+                    continue;
+                }
+
+                echo "<a href='channel_detail.php?chanid=".$Channels[$key]->chanid."'>".$Channels[$key]->channum."</a> ";
+                // Count this channel
+                $channel_count++;
+            }
+        } elseif (isset($bycall)) {
+
+            echo '<p>';
+
+            $row=0;
+            $page_size=20;
+            $page = $_GET['page'];
+
+            if (! isset($page)) $page=1;
+            $page_start = ($page - 1) * $page_size + 1;
+            $page_end = $page_start + $page_size;
+
+            if ($page != 1) echo '<a href="program_listing.php?listbycallsign=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
+            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbycallsign=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
+            echo "<br/>";
+
+            foreach (array_keys($Channels) as $key) {
+
+                $row++;
+
+                // pager code
+                if (($row < $page_start) || ($row >= $page_end)) {
+                    continue;
+                }
+
+                // Ignore channels with no number
+                if (strlen($Channels[$key]->channum) < 1) {
+                    continue;
+                }
+
+                echo "<a href='channel_detail.php?chanid=".$Channels[$key]->chanid."'>".$Channels[$key]->callsign."</a><br/> ";
+
+                // Count this channel
+                $channel_count++;
+            }
+            
+        }
+        if (isset($bytime)) {
+?>
+<do type="accept" label="Go">
+<go href="program_listing.php" method="get">
+<postfield name="listbytime" value="y"/>
+<postfield name="hour" value="$(hour)"/>
+<postfield name="date" value="<?php echo date("Ymd", $list_starttime); ?>"/>
+</go>
+</do>
+<?php
+            echo "<p>\n";
+            if (is_numeric($bytime)) {
+                $list_starttime = mktime($bytime,0,0, date('g', $list_starttime), date('j', $list_starttime), date('Y', $list_starttime));
+            }
+
+            $row=0;
+            $page_size=15;
+            $page = $_GET['page'];
+
+            if (! isset($page)) $page=1;
+            $page_start = ($page - 1) * $page_size + 1;
+            $page_end = $page_start + $page_size;
+
+            $prev_time = $_GET['time'];
+            $prev_date = $_GET['date'];
+            $prev_hour = $_GET['hour'];
+            $prev_query = "";
+            if (isset($prev_time)) {
+                $prev_query = "&amp;time=".$prev_time;
+            } elseif (isset($prev_date)) {
+                $prev_query = "&amp;date=".$prev_date;
+                if (isset($prev_hour)) {
+                    $prev_query.="&amp;hour=".$prev_hour;
+                }
+            }
+
+            if ($page != 1) echo '<a href="program_listing.php?listbytime=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
+            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbytime=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
+            echo "<br/>";
+
+            foreach (array_keys($Channels) as $key) {
+
+                $row++;
+
+                // pager code
+                if (($row < $page_start) || ($row >= $page_end)) {
+                    continue;
+                }
+
+                // Ignore channels with no number
+                if (strlen($Channels[$key]->channum) < 1) {
+                    continue;
+                }
+
+                // Count this channel
+                $channel_count++;
+
+                // Grab the reference
+                $channel = &$Channels[$key];
+
+                // modify the end time so we are only looking at a 1 hour slice,
+                // this is critical to insure minimal data returned.
+                $channel->display_programs($list_starttime, $list_endtime);
+
+                // Cleanup is a good thing
+                unset($channel);
+            }
+
+            if ($page != 1) echo '<a href="program_listing.php?listbytime=y&amp;page='.($page - 1).$prev_query.'">&lt; prev</a>';
+            if (($page * $page_size) < count($Channels)) echo ' <a href="program_listing.php?listbytime=y&amp;page='.($page + 1).$prev_query.'">next &gt;</a>';
+
+            echo '<br/>'.t('Jump to').' '.t('Hour').':';
+            echo '<input type="text" name="hour" format="N*" size="2" emptyok="true"/>';
+        }
+
+        echo '</p></card>';
+
+        // Display the listing page footer
+        $this->print_footer();
+    }
+
+    /*
+        print_footer:
+        This function prints the footer portion of the page specific to the program listing
+    */
+    function print_footer() {
+        // Print the main page's footer
+        parent::print_footer();
+    }
+
+    /*
+        print_channel:
+
+    */
+    function print_channel($channel, $start_time, $end_time) {
+?>
+<a href="channel_detail.php?chanid=<?php echo $channel->chanid?>&amp;time=<?php echo $start_time?>">
+<?php echo prefer_channum ? $channel->channum : $channel->callsign?>&nbsp;
+<?php echo prefer_channum ? $channel->callsign : $channel->channum?></a><br/>
+<?php
+    }
+
+    function print_program($program, $timeslots_used, $starttime) {
+
+        echo $program->channel->callsign."  "; //chanid." ";
+        echo strftime($_SESSION['time_format'], $program->starttime);
+        echo ' - <a href="program_detail.php?chanid='.$program->chanid.'&amp;starttime='.$program->starttime.'">';
+        echo htmlspecialchars($program->title);
+        echo "</a><br/>\n";
+
+    }
+
+    function print_nodata($timeslots_left) {
+    }
+}
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wml/scheduled_recordings.php mythplugins-0.18.1-new/mythweb/themes/wml/scheduled_recordings.php
--- mythplugins-0.18.1-old/mythweb/themes/wml/scheduled_recordings.php	2005-03-08 22:24:14.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/wml/scheduled_recordings.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,136 +1,136 @@
-<?php
-/***                                                                        ***\
-    scheduled_recordings.php                    Last Updated: 2004.10.25 (jbuckshin)
-
-    This file defines a theme class for the scheduled recordings section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-class Theme_scheduled_recordings extends Theme {
-
-    function print_page(&$shows) {
-
-        // Print the main page header
-        parent::print_header('MythWeb - '.t('Scheduled Recordings'));
-        parent::print_menu_content();
-
-        // Print the page contents
-
-// exclude the sorting for this theme, not needed
-/*  <a href="scheduled_recordings.php?sortby=title">show</a><br>
-    <a href="scheduled_recordings.php?sortby=channum">station</a><br>
-    <a href="scheduled_recordings.php?sortby=airdate">air&nbsp;date</a><br>
-    <a href="scheduled_recordings.php?sortby=length">length</a><br>
-*/
-        $page_size=15;
-        $page = $_GET['page'];
-
-        if (! isset($page)) $page=1;
-        $page_start = ($page - 1) * $page_size + 1;
-        $page_end = $page_start + $page_size;
-
-        $group_field = $_GET['sortby'];
-        if ($group_field == "") {
-            $group_field = "airdate";
-        } elseif ( ! (($group_field == "title") || ($group_field == "channum") || ($group_field == "airdate")) ) {
-            $group_field = "";
-        }
-
-        $row = 0;
-        $card_count = 0;
-        $group_no = 0;
-        $first_group_has_been_shown = 0;
-        $has_output = 0;
-
-        foreach ($shows as $show) {
-
-            $row++;
-
-            // Reset the command variable
-            $command = '';
-
-            // Which class does this show fall into?
-            if ($show->duplicate == 1) {
-                $class = 'duplicate';
-                $command = '<a href="scheduled_recordings.php?rerecord=yes&title='.urlencode($show->title).'&subtitle='.urlencode($show->subtitle).'&description='.urlencode($show->description).'">Rerecord</a>';
-            }
-            elseif ($show->conflicting == 1) {
-                $class   = 'conflict';
-                $command = '<a href="scheduled_recordings.php?record=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Record</a>';
-            }
-            elseif ($show->recording == 0) {
-                $class   = 'deactivated';
-                $command = '<a href="scheduled_recordings.php?activate=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Activate</a>';
-            }
-            else {
-                $class   = 'scheduled';
-                #$command = 'Don\'t&nbsp;Record';
-                $command = '';
-            }
-
-            // Print a dividing row if grouping changes
-            if ($group_field == "airdate")
-            {
-                $cur_group = strftime(t('generic_date'), $show->starttime); 
-                $cur_group_detail = date('D', $show->starttime)." ";
-            }
-            elseif ($group_field == "channum")
-            {
-                $cur_group = $show->channel->name;
-                $cur_group_detail = "";
-            }
-            elseif ($group_field == "title")
-            {
-                $cur_group = $show->title;
-                $cur_group_detail = "";
-            }
-
-            if ( $cur_group != $prev_group && $group_field != '' ) {
-                if (!(($row < $page_start) || ($row >= $page_end))) {
-                    if (($first_group_has_been_shown == 0) && ($has_ouput == 1)) {
-                        echo $last_group_txt;
-                        $first_group_has_been_shown = 1;
-                    }
-                    echo "<p><a href=\"#subcard".$card_count."\">".$cur_group."</a></p>\n";
-                    $card_count++;
-                    //echo "<p><a href=\"#subcard".$group_no."\">".$cur_group_detail.$cur_group."</a></p>\n";
-                       } else {
-                    $last_group_txt = "<p><a href=\"#subcard".$group_no."\">".$cur_group_detail.$cur_group."</a></p>\n";
-                }
-                $group_no++;
-            }
-            $prev_group = $cur_group;
-
-            if (!(($row < $page_start) || ($row >= $page_end))) {
-                $has_output = 1;
-                $card_data[$group_no].="<p><b>".htmlspecialchars($show->title)."</b> ".htmlspecialchars($show->subtitle)."<br/>".$show->recstatus."<br/> ".strftime(t('generic_time'), $show->starttime)."<br/><a href=\"program_detail.php?chanid=".$show->chanid."&amp;starttime=".$show->starttime."\">Details</a><br/></p>\n";
-            }
-        }
-
-        echo "<p>";
-        if ($page != 1) echo '<a href="scheduled_recordings.php?page='.($page - 1).$prev_query.'">&lt; prev</a>';
-        if (($page * $page_size) < count($shows)) echo '<a href="scheduled_recordings.php?page='.($page + 1).$prev_query.'">next &gt;</a>';
-
-        // end the main card
-        echo "</p></card>";
-
-        $group_no=0;
-        $row=0;
-
-        foreach ($card_data as $card) {
-            if (! isset($card)) {
-                next;
-            }
-            echo "<card id=\"subcard".$group_no."\" title=\"Details\">";
-            echo $card;
-            echo "</card>\n";
-            $group_no++;
-        }
-
-        // Print the main page footer
-        parent::print_footer();
-    }
-}
-
-?>
+<?php
+/***                                                                        ***\
+    scheduled_recordings.php                    Last Updated: 2004.10.25 (jbuckshin)
+
+    This file defines a theme class for the scheduled recordings section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+class Theme_scheduled_recordings extends Theme {
+
+    function print_page(&$shows) {
+
+        // Print the main page header
+        parent::print_header('MythWeb - '.t('Scheduled Recordings'));
+        parent::print_menu_content();
+
+        // Print the page contents
+
+// exclude the sorting for this theme, not needed
+/*  <a href="scheduled_recordings.php?sortby=title">show</a><br>
+    <a href="scheduled_recordings.php?sortby=channum">station</a><br>
+    <a href="scheduled_recordings.php?sortby=airdate">air&nbsp;date</a><br>
+    <a href="scheduled_recordings.php?sortby=length">length</a><br>
+*/
+        $page_size=15;
+        $page = $_GET['page'];
+
+        if (! isset($page)) $page=1;
+        $page_start = ($page - 1) * $page_size + 1;
+        $page_end = $page_start + $page_size;
+
+        $group_field = $_GET['sortby'];
+        if ($group_field == "") {
+            $group_field = "airdate";
+        } elseif ( ! (($group_field == "title") || ($group_field == "channum") || ($group_field == "airdate")) ) {
+            $group_field = "";
+        }
+
+        $row = 0;
+        $card_count = 0;
+        $group_no = 0;
+        $first_group_has_been_shown = 0;
+        $has_output = 0;
+
+        foreach ($shows as $show) {
+
+            $row++;
+
+            // Reset the command variable
+            $command = '';
+
+            // Which class does this show fall into?
+            if ($show->duplicate == 1) {
+                $class = 'duplicate';
+                $command = '<a href="scheduled_recordings.php?rerecord=yes&title='.urlencode($show->title).'&subtitle='.urlencode($show->subtitle).'&description='.urlencode($show->description).'">Rerecord</a>';
+            }
+            elseif ($show->conflicting == 1) {
+                $class   = 'conflict';
+                $command = '<a href="scheduled_recordings.php?record=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Record</a>';
+            }
+            elseif ($show->recording == 0) {
+                $class   = 'deactivated';
+                $command = '<a href="scheduled_recordings.php?activate=yes&chanid='.$show->chanid.'&starttime='.$show->starttime.'&endtime='.$show->endtime.'">Activate</a>';
+            }
+            else {
+                $class   = 'scheduled';
+                #$command = 'Don\'t&nbsp;Record';
+                $command = '';
+            }
+
+            // Print a dividing row if grouping changes
+            if ($group_field == "airdate")
+            {
+                $cur_group = strftime(t('generic_date'), $show->starttime); 
+                $cur_group_detail = date('D', $show->starttime)." ";
+            }
+            elseif ($group_field == "channum")
+            {
+                $cur_group = $show->channel->name;
+                $cur_group_detail = "";
+            }
+            elseif ($group_field == "title")
+            {
+                $cur_group = $show->title;
+                $cur_group_detail = "";
+            }
+
+            if ( $cur_group != $prev_group && $group_field != '' ) {
+                if (!(($row < $page_start) || ($row >= $page_end))) {
+                    if (($first_group_has_been_shown == 0) && ($has_ouput == 1)) {
+                        echo $last_group_txt;
+                        $first_group_has_been_shown = 1;
+                    }
+                    echo "<p><a href=\"#subcard".$card_count."\">".$cur_group."</a></p>\n";
+                    $card_count++;
+                    //echo "<p><a href=\"#subcard".$group_no."\">".$cur_group_detail.$cur_group."</a></p>\n";
+                       } else {
+                    $last_group_txt = "<p><a href=\"#subcard".$group_no."\">".$cur_group_detail.$cur_group."</a></p>\n";
+                }
+                $group_no++;
+            }
+            $prev_group = $cur_group;
+
+            if (!(($row < $page_start) || ($row >= $page_end))) {
+                $has_output = 1;
+                $card_data[$group_no].="<p><b>".htmlspecialchars($show->title)."</b> ".htmlspecialchars($show->subtitle)."<br/>".$show->recstatus."<br/> ".strftime(t('generic_time'), $show->starttime)."<br/><a href=\"program_detail.php?chanid=".$show->chanid."&amp;starttime=".$show->starttime."\">Details</a><br/></p>\n";
+            }
+        }
+
+        echo "<p>";
+        if ($page != 1) echo '<a href="scheduled_recordings.php?page='.($page - 1).$prev_query.'">&lt; prev</a>';
+        if (($page * $page_size) < count($shows)) echo '<a href="scheduled_recordings.php?page='.($page + 1).$prev_query.'">next &gt;</a>';
+
+        // end the main card
+        echo "</p></card>";
+
+        $group_no=0;
+        $row=0;
+
+        foreach ($card_data as $card) {
+            if (! isset($card)) {
+                next;
+            }
+            echo "<card id=\"subcard".$group_no."\" title=\"Details\">";
+            echo $card;
+            echo "</card>\n";
+            $group_no++;
+        }
+
+        // Print the main page footer
+        parent::print_footer();
+    }
+}
+
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wml/search.php mythplugins-0.18.1-new/mythweb/themes/wml/search.php
--- mythplugins-0.18.1-old/mythweb/themes/wml/search.php	2004-12-05 11:52:58.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/wml/search.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,142 +1,142 @@
-<?php
-/***                                                                        ***\
-    search.php                    Last Updated: 2004.10.25 (jbuckshin)
-
-    This file defines a theme class for the search section.
-    It must define one method.   documentation will be added someday.
-
-\***                                                                        ***/
-
-class Theme_search extends Theme {
-
-    function print_page() {
-
-        // Print the main page header
-        parent::print_header('MythWeb - '.t('Search'));
-        parent::print_menu_content();
-
-        // Print any search results
-        $this->print_results();
-
-        // Print the main page footer
-        parent::print_footer();
-    }
-
-    function print_results() {
-
-        global $Results;
-
-        $page_size=10; // start out with page size of 10
-
-        // No search was performed, just return
-        if (!is_array($Results))
-        {
-?>
-<do type="accept" label="Go">
-<go href="search.php" method="get">
-<postfield name="searchstr" value="$(searchstr)"/>
-</go>
-</do>
-<p><?php echo t('Search') ?>:<input type="text" name="searchstr"/></p>
-</card>
-<?php
-            return;
-        }
-
-        // Search, but nothing found - notify the user
-        if (!count($Results)) {
-?>
-<do type="accept" label="Go">
-<go href="search.php" method="get">
-<postfield name="searchstr" value="$(searchstr)"/>
-</go>
-</do>
-<p><?php echo "0 Results" ?></p>
-<p><?php echo t('Search') ?>:<input type="text" name="searchstr"/></p>
-</card>
-<?php
-            return;
-        }
-
-        // Get the url search string so we don't have to recreate it for each sort type
-        $search_str = '&amp;searchstr='.urlencode($_GET['searchstr']);
-        $page = $_GET['page'];
-        if ($_GET['search_title'])         $search_str .= '&amp;search_title=yes';
-        if ($_GET['search_subtitle'])      $search_str .= '&amp;search_subtitle=yes';
-        if ($_GET['search_description'])   $search_str .= '&amp;search_description=yes';
-        if ($_GET['search_category'])      $search_str .= '&amp;search_category=yes';
-        if ($_GET['search_category_type']) $search_str .= '&amp;search_category_type=yes';
-        // Display the results
-?>
-<do type="accept" label="Go">
-<go href="search.php" method="get">
-<postfield name="searchstr" value="$(searchstr)"/>
-</go>
-</do>
-<p>
-<?php echo count($Results); ?> Result(s) for "<?php echo urlencode($_SESSION['search']['searchstr']); ?>"<br/>
-<?php
-    if (!isset($page)) {
-?>
-<a href="#cardresults"><?php echo t('Search Results') ?></a><br/>
-<?php
-    } else {
-?>
-<a href="#cardresults">Page <?php echo $page; ?> of <?php echo ceil(count($Results) / $page_size); ?></a><br/>
-<?php
-    } 
-?>
-<?php echo t('Search') ?>:<input type="text" name="searchstr"/>
-</p>
-</card>
-<card id="cardresults" title="results">
-
-<do type="options" label="Back">
-<prev/>
-</do>
-<p>
-<?php
-        $row = 0;
-        if (! isset($page)) $page = 1;
-        $page_start = ($page - 1) * $page_size + 1;
-        $page_end = $page_start + $page_size; 
-
-        if ($page != 1) echo '<a href="search.php?'.$search_str.'&amp;page='.($page - 1).'">&lt; prev</a>';
-        echo " (".$page.") ";
-        if (($page * $page_size) < count($Results)) {
-            echo ' <a href="search.php?'.$search_str.'&amp;page='.($page + 1).'">next &gt;</a><br/>';
-        } else {
-            echo '<br/>';
-        }
-
-
-        // I'd really like to cache the results in the session
-        // but that requires changes to the underlying search code
-        // and cannot be coded only in the theme.  Maybe this will 
-        // change at some later date.
-        foreach ($Results as $show) {
-
-            $row++;
-
-            // pager code
-            if (($row < $page_start) || ($row >= $page_end)) {
-                continue;
-            }
-
-            // Print the content
-            echo '<a href="program_detail.php?chanid='.$show->chanid.'&amp;starttime='.$show->starttime.'">'.htmlspecialchars($show->title).'</a><br/>';
-
-            if(strlen($show->subtitle)) echo htmlspecialchars($show->subtitle).'<br/>';
-
-            //  echo $show->description.'<br/>';
-            echo strftime(t('generic_date')." ".t('generic_time'), $show->starttime).'<br/>';
-            echo $show->channel->callsign.' '.$show->channel->channum.' - '.nice_length($show->length)."<br/><br/>\n";
-        }
-
-        if ($page != 1) echo '<a href="search.php?'.$search_str.'&amp;page='.($page - 1).'">&lt; prev</a>';
-        echo " (".$page.") ";
-        if (($page * $page_size) < count($Results)) echo ' <a href="search.php?'.$search_str.'&amp;page='.($page + 1).'">next &gt;</a><br/>';
-        echo '</p></card>';
-    }
-}
-?>
+<?php
+/***                                                                        ***\
+    search.php                    Last Updated: 2004.10.25 (jbuckshin)
+
+    This file defines a theme class for the search section.
+    It must define one method.   documentation will be added someday.
+
+\***                                                                        ***/
+
+class Theme_search extends Theme {
+
+    function print_page() {
+
+        // Print the main page header
+        parent::print_header('MythWeb - '.t('Search'));
+        parent::print_menu_content();
+
+        // Print any search results
+        $this->print_results();
+
+        // Print the main page footer
+        parent::print_footer();
+    }
+
+    function print_results() {
+
+        global $Results;
+
+        $page_size=10; // start out with page size of 10
+
+        // No search was performed, just return
+        if (!is_array($Results))
+        {
+?>
+<do type="accept" label="Go">
+<go href="search.php" method="get">
+<postfield name="searchstr" value="$(searchstr)"/>
+</go>
+</do>
+<p><?php echo t('Search') ?>:<input type="text" name="searchstr"/></p>
+</card>
+<?php
+            return;
+        }
+
+        // Search, but nothing found - notify the user
+        if (!count($Results)) {
+?>
+<do type="accept" label="Go">
+<go href="search.php" method="get">
+<postfield name="searchstr" value="$(searchstr)"/>
+</go>
+</do>
+<p><?php echo "0 Results" ?></p>
+<p><?php echo t('Search') ?>:<input type="text" name="searchstr"/></p>
+</card>
+<?php
+            return;
+        }
+
+        // Get the url search string so we don't have to recreate it for each sort type
+        $search_str = '&amp;searchstr='.urlencode($_GET['searchstr']);
+        $page = $_GET['page'];
+        if ($_GET['search_title'])         $search_str .= '&amp;search_title=yes';
+        if ($_GET['search_subtitle'])      $search_str .= '&amp;search_subtitle=yes';
+        if ($_GET['search_description'])   $search_str .= '&amp;search_description=yes';
+        if ($_GET['search_category'])      $search_str .= '&amp;search_category=yes';
+        if ($_GET['search_category_type']) $search_str .= '&amp;search_category_type=yes';
+        // Display the results
+?>
+<do type="accept" label="Go">
+<go href="search.php" method="get">
+<postfield name="searchstr" value="$(searchstr)"/>
+</go>
+</do>
+<p>
+<?php echo count($Results); ?> Result(s) for "<?php echo urlencode($_SESSION['search']['searchstr']); ?>"<br/>
+<?php
+    if (!isset($page)) {
+?>
+<a href="#cardresults"><?php echo t('Search Results') ?></a><br/>
+<?php
+    } else {
+?>
+<a href="#cardresults">Page <?php echo $page; ?> of <?php echo ceil(count($Results) / $page_size); ?></a><br/>
+<?php
+    } 
+?>
+<?php echo t('Search') ?>:<input type="text" name="searchstr"/>
+</p>
+</card>
+<card id="cardresults" title="results">
+
+<do type="options" label="Back">
+<prev/>
+</do>
+<p>
+<?php
+        $row = 0;
+        if (! isset($page)) $page = 1;
+        $page_start = ($page - 1) * $page_size + 1;
+        $page_end = $page_start + $page_size; 
+
+        if ($page != 1) echo '<a href="search.php?'.$search_str.'&amp;page='.($page - 1).'">&lt; prev</a>';
+        echo " (".$page.") ";
+        if (($page * $page_size) < count($Results)) {
+            echo ' <a href="search.php?'.$search_str.'&amp;page='.($page + 1).'">next &gt;</a><br/>';
+        } else {
+            echo '<br/>';
+        }
+
+
+        // I'd really like to cache the results in the session
+        // but that requires changes to the underlying search code
+        // and cannot be coded only in the theme.  Maybe this will 
+        // change at some later date.
+        foreach ($Results as $show) {
+
+            $row++;
+
+            // pager code
+            if (($row < $page_start) || ($row >= $page_end)) {
+                continue;
+            }
+
+            // Print the content
+            echo '<a href="program_detail.php?chanid='.$show->chanid.'&amp;starttime='.$show->starttime.'">'.htmlspecialchars($show->title).'</a><br/>';
+
+            if(strlen($show->subtitle)) echo htmlspecialchars($show->subtitle).'<br/>';
+
+            //  echo $show->description.'<br/>';
+            echo strftime(t('generic_date')." ".t('generic_time'), $show->starttime).'<br/>';
+            echo $show->channel->callsign.' '.$show->channel->channum.' - '.nice_length($show->length)."<br/><br/>\n";
+        }
+
+        if ($page != 1) echo '<a href="search.php?'.$search_str.'&amp;page='.($page - 1).'">&lt; prev</a>';
+        echo " (".$page.") ";
+        if (($page * $page_size) < count($Results)) echo ' <a href="search.php?'.$search_str.'&amp;page='.($page + 1).'">next &gt;</a><br/>';
+        echo '</p></card>';
+    }
+}
+?>
diff -Naur mythplugins-0.18.1-old/mythweb/themes/wml/theme.php mythplugins-0.18.1-new/mythweb/themes/wml/theme.php
--- mythplugins-0.18.1-old/mythweb/themes/wml/theme.php	2004-12-05 11:52:58.000000000 -0800
+++ mythplugins-0.18.1-new/mythweb/themes/wml/theme.php	2005-10-22 07:44:15.000000000 -0700
@@ -1,47 +1,47 @@
-<?php
-/***                                                                        ***\
-    theme.php                             Last Updated: 2004.10.25 (jbuckshin)
-
-    This is the main theme class for the Default MythWeb theme.  It should
-    not be instantiated directly, but will most likely contain methods
-    called from its child classes via the parent:: construct.
-\***                                                                        ***/
-
-class Theme {
-
-    function print_header($page_title = 'MythWeb') {
-        // Print the appropriate header information
-        header("Content-Type: text/vnd.wap.wml");
-        //header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
-        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
-        //header("Cache-Control: no-cache, must-revalidate");
-        header("Pragma: no-cache");    
-
-        echo "<?xml version=\"1.0\"?>"
-?>
-<!DOCTYPE wml PUBLIC "-//WAPFORUM//DTD WML 1.1//EN" "http://www.wapforum.org/DTD/wml_1.1.xml">
-
-<wml>
-
-<card id="main" title="MythWeb">
-<p><img src="<?php echo theme_dir?>img/myth.wbmp" alt="mythtv"></img></p> 
-<?php
-    }
-
-    function print_menu_content() {
-?>
-<p><a href="program_listing.php"><?php echo t('Listings') ?></a></p>
-<p><a href="scheduled_recordings.php"><?php echo t('Scheduled Recordings') ?></a></p>
-<p><a href="recorded_programs.php"><?php echo t('Recorded Programs') ?></a></p>
-<p><a href="search.php"><?php echo t('Search')?></a></p>
-<p><a href="<?php echo theme_dir?>status.php"><?php echo t('Backend Status') ?></a></p>
-<?php
-    }
-
-    function print_footer() {
-?>
-</wml>
-<?php
-    }
-}
-?>
+<?php
+/***                                                                        ***\
+    theme.php                             Last Updated: 2004.10.25 (jbuckshin)
+
+    This is the main theme class for the Default MythWeb theme.  It should
+    not be instantiated directly, but will most likely contain methods
+    called from its child classes via the parent:: construct.
+\***                                                                        ***/
+
+class Theme {
+
+    function print_header($page_title = 'MythWeb') {
+        // Print the appropriate header information
+        header("Content-Type: text/vnd.wap.wml");
+        //header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
+        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
+        //header("Cache-Control: no-cache, must-revalidate");
+        header("Pragma: no-cache");    
+
+        echo "<?xml version=\"1.0\"?>"
+?>
+<!DOCTYPE wml PUBLIC "-//WAPFORUM//DTD WML 1.1//EN" "http://www.wapforum.org/DTD/wml_1.1.xml">
+
+<wml>
+
+<card id="main" title="MythWeb">
+<p><img src="<?php echo theme_dir?>img/myth.wbmp" alt="mythtv"></img></p> 
+<?php
+    }
+
+    function print_menu_content() {
+?>
+<p><a href="program_listing.php"><?php echo t('Listings') ?></a></p>
+<p><a href="scheduled_recordings.php"><?php echo t('Scheduled Recordings') ?></a></p>
+<p><a href="recorded_programs.php"><?php echo t('Recorded Programs') ?></a></p>
+<p><a href="search.php"><?php echo t('Search')?></a></p>
+<p><a href="<?php echo theme_dir?>status.php"><?php echo t('Backend Status') ?></a></p>
+<?php
+    }
+
+    function print_footer() {
+?>
+</wml>
+<?php
+    }
+}
+?>
