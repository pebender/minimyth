commit 91e2f2adb69a4eb6c3fb9e68e867564cf3afb7a4
Author: Gwenole Beauchesne <gbeauchesne@splitted-desktop.com>
Date:   Thu Jul 2 12:20:33 2009 +0000

    Drop unused variables.

commit 09c18070897d2ed6fbdba6c7fe32cac4de7d15e4
Author: Gwenole Beauchesne <gbeauchesne@splitted-desktop.com>
Date:   Thu Jul 2 11:57:23 2009 +0000

    Fix driver name retrieval for dri1 and dri2.

diff --git a/src/x11/va_x11.c b/dri/va_x11.c
index 6b3c9d9..5d5c84f 100644
--- a/src/x11/va_x11.c
+++ b/src/x11/va_x11.c
@@ -105,34 +105,10 @@ static VAStatus va_DRI2GetDriverName (
 )
 {
     VADriverContextP ctx = pDisplayContext->pDriverContext;
-    VAStatus vaStatus = VA_STATUS_ERROR_UNKNOWN;
-    int eventBase, errorBase;
-    char *device_name;
-    int driver_major;
-    int driver_minor;
-    int driver_patch;
-    Bool result = True;
 
-    if (!VA_DRI2QueryExtension(ctx->x11_dpy, &eventBase, &errorBase)) {
-        va_infoMessage("DRI2 extension isn't present\n");
+    if (!isDRI2Connected(ctx, driver_name))
         return VA_STATUS_ERROR_UNKNOWN;
-    }
-
-    if (!VA_DRI2QueryVersion(ctx->x11_dpy, &driver_major, &driver_minor)) {
-        va_errorMessage("VA_DRI2QueryVersion failed\n");
-        return VA_STATUS_ERROR_UNKNOWN;
-    }
-    
-    if (!VA_DRI2Connect(ctx->x11_dpy, RootWindow(ctx->x11_dpy, ctx->x11_screen),
-		     driver_name, &device_name)) {
-        va_infoMessage("DRI2 isn't enabled, fallback to DRI1\n");
-        return VA_STATUS_ERROR_UNKNOWN;
-    }
 
-    va_infoMessage("VA_DRI2Connect: %d.%d.%d %s (screen %d)\n",
-                   driver_major, driver_minor, driver_patch, *driver_name, ctx->x11_screen);
-    ctx->dri2 = 1;
-    
     return VA_STATUS_SUCCESS;
 }
 
@@ -142,57 +118,11 @@ static VAStatus va_DRIGetDriverName (
 )
 {
     VADriverContextP ctx = pDisplayContext->pDriverContext;
-    VAStatus vaStatus = VA_STATUS_ERROR_UNKNOWN;
-    int eventBase, errorBase;
-    int direct_capable;
-    int driver_major;
-    int driver_minor;
-    int driver_patch;
-    Bool result = True;
-    char *x_driver_name = NULL;
 
-    if (!VA_DRIQueryExtension(ctx->x11_dpy, &eventBase, &errorBase)) {
-        va_errorMessage("VA_DRIQueryExtension failed\n");
+    if (!isDRI1Connected(ctx, driver_name))
         return VA_STATUS_ERROR_UNKNOWN;
-    }
-    
-    if (result)
-    {
-        result = VA_DRIQueryDirectRenderingCapable(ctx->x11_dpy, ctx->x11_screen, &direct_capable);
-        if (!result)
-        {
-            va_errorMessage("VA_DRIQueryDirectRenderingCapable failed\n");
-        }
-    }
-    if (result)
-    {
-        result = direct_capable;
-        if (!result)
-        {
-            va_errorMessage("VA_DRIQueryDirectRenderingCapable returned false\n");
-        }
-    }
-    if (result)
-    {
-        result = VA_DRIGetClientDriverName(ctx->x11_dpy, ctx->x11_screen, &driver_major, &driver_minor,
-                                            &driver_patch, &x_driver_name);
-        if (!result)
-        {
-            va_errorMessage("VA_DRIGetClientDriverName returned false\n");
-        }
-    }
-    if (result)
-    {
-        vaStatus = VA_STATUS_SUCCESS;
-        va_infoMessage("VA_DRIGetClientDriverName: %d.%d.%d %s (screen %d)\n",
-	     driver_major, driver_minor, driver_patch, x_driver_name, ctx->x11_screen);
-        if (driver_name)
-	    *driver_name = strdup(x_driver_name);
-    }
-    if (x_driver_name)
-        XFree(x_driver_name);
 
-    return vaStatus;
+    return VA_STATUS_SUCCESS;
 }
 
 static VAStatus va_NVCTRL_GetDriverName (
@@ -181,13 +181,7 @@ static VAStatus va_DisplayContextGetDriverName (
     char **driver_name
 )
 {
-    VADriverContextP ctx = pDisplayContext->pDriverContext;
-    VAStatus vaStatus = VA_STATUS_ERROR_UNKNOWN;
-    int direct_capable;
-    int driver_major;
-    int driver_minor;
-    int driver_patch;
-    Bool result = True;
+    VAStatus vaStatus;
     char *driver_name_env;
 
     if (driver_name)
diff --git a/src/va.c b/src/va.c
index 0ec04f9..9300291 100644
--- a/src/va.c
+++ b/src/va.c
@@ -117,21 +117,8 @@ static Bool va_checkString(const char* value, char *variable)
 static VAStatus va_getDriverName(VADisplay dpy, char **driver_name)
 {
     VADisplayContextP pDisplayContext = (VADisplayContextP)dpy;
-    VADriverContextP ctx = CTX(dpy);
 
-    VAStatus ret;
-    ret = pDisplayContext->vaGetDriverName(pDisplayContext, driver_name);
-    if (ret == VA_STATUS_SUCCESS) 
-    {
-	if (isDRI2Connected(ctx, driver_name)) 
-	{
-	    ret = VA_STATUS_SUCCESS;
-	} else if (isDRI1Connected(ctx, driver_name)) 
-	{
-	    ret = VA_STATUS_SUCCESS;
-	}
-    }
-    return ret;
+    return pDisplayContext->vaGetDriverName(pDisplayContext, driver_name);
 }
 
 static VAStatus va_openDriver(VADisplay dpy, char *driver_name)
diff --git a/src/va_backend.h b/src/va_backend.h
index 6bf8703..2b12e1e 100644
--- a/src/va_backend.h
+++ b/src/va_backend.h
@@ -414,7 +414,7 @@ struct VADriverContext
 
     Display *x11_dpy;
     int x11_screen;
-    int dri2;
+    int old_dri2; /* obsolete */
     int version_major;
     int version_minor;
     int max_profiles;
