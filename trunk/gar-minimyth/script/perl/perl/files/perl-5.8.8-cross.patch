diff -Naur perl-5.8.8-old/Configure perl-5.8.8-new/Configure
--- perl-5.8.8-old/Configure	2006-01-08 06:51:03.000000000 -0800
+++ perl-5.8.8-new/Configure	2008-02-15 10:06:38.000000000 -0800
@@ -3888,7 +3888,7 @@
 	return(0);
 }
 EOM
-if $cc -o try $ccflags $ldflags try.c; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	gccversion=`$run ./try`
 	case "$gccversion" in
 	'') echo "You are not using GNU cc." ;;
@@ -3897,15 +3897,20 @@
 	    ;;
 	esac
 else
-	echo " "
-	echo "*** WHOA THERE!!! ***" >&4
-	echo "    Your C compiler \"$cc\" doesn't seem to be working!" >&4
-	case "$knowitall" in
-	'')
-	echo "    You'd better start hunting for one and let me know about it." >&4
-		exit 1
-		;;
-	esac
+	if test "x$gccversion" != "x"; then
+		echo "You are using GNU cc $gccversion."
+		ccname=gcc
+	else
+		echo " "
+		echo "*** WHOA THERE!!! ***" >&4
+		echo "    Your C compiler \"$cc\" doesn't seem to be working!" >&4
+		case "$knowitall" in
+		'')
+		echo "    You'd better start hunting for one and let me know about it." >&4
+			exit 1
+			;;
+		esac
+	fi
 fi
 $rm -f try try.*
 case "$gccversion" in
@@ -4994,9 +4999,9 @@
 
 EOM
 dflt=y
-if $sh -c "$cc -o try $optimize $ccflags $ldflags try.c $libs" >>try.msg 2>&1; then
-	if $sh -c "$run ./try" >>try.msg 2>&1; then
-		xxx=`$run ./try`
+if true; then
+	if true; then
+		xxx='Ok'
 		case "$xxx" in
 		"Ok") dflt=n ;;
 		*)	echo 'The program compiled OK, but produced no output.' >> try.msg
@@ -5251,7 +5256,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		longlongsize=`$run ./try`
 		echo "Your long longs are $longlongsize bytes long."
 	else
@@ -5579,7 +5584,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		doublesize=`$run ./try`
 		echo "Your double is $doublesize bytes long."
 	else
@@ -5623,7 +5628,7 @@
 EOCP
 	set try
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		longdblsize=`$run ./try`
 		echo "Your long doubles are $longdblsize bytes long."
 	else
@@ -6279,7 +6284,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		ptrsize=`$run ./try`
 		echo "Your pointers are $ptrsize bytes long."
 	else
@@ -7049,9 +7054,14 @@
 	gnulibc_version=`$cat glibc.ver`
 	echo "You are using the GNU C Library version $gnulibc_version"
 else
-	val="$undef"
-	gnulibc_version=''
-	echo "You are not using the GNU C Library"
+	if test "x$gnulibc_version" != "x" ; then
+		val="$define"
+		echo "You are using the GNU C Library version $gnulibc_version"
+	else
+		val="$undef"
+		gnulibc_version=''
+		echo "You are not using the GNU C Library"
+	fi
 fi
 $rm -f try try.* glibc.ver
 set d_gnulibc
@@ -8841,7 +8851,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	lseeksize=`$run ./try`
 	echo "Your file offsets are $lseeksize bytes long."
 else
@@ -8878,7 +8888,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	yyy=`$run ./try`
 	case "$yyy" in
 	'')	fpossize=4
@@ -8957,7 +8967,7 @@
 }
 EOCP
 		set try
-		if eval $compile_ok; then
+		if eval $compile_ok && $run ./try > /dev/null; then
 			lseeksize=`$run ./try`
 			$echo "Your file offsets are now $lseeksize bytes long."
 		else
@@ -8986,7 +8996,7 @@
 }
 EOCP
 		set try
-		if eval $compile_ok; then
+		if eval $compile_ok && $run ./try > /dev/null; then
 			yyy=`$run ./try`
 			dflt="$lseeksize"
 			case "$yyy" in
@@ -9205,7 +9215,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		123.456)
@@ -9227,7 +9237,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		123.456)
@@ -9249,7 +9259,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		123.456)
@@ -9271,7 +9281,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		123.456)
@@ -9503,7 +9513,7 @@
 	echo "Trying $xxx_convert..."
 	$rm -f try try$_o
 	set try -DTRY_$xxx_convert
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		echo "$xxx_convert() found." >&4
 		if $run ./try; then
 			echo "I'll use $xxx_convert to convert floats into a string." >&4
@@ -10322,7 +10332,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	$run ./try
 	yyy=$?
 else
@@ -10422,12 +10432,16 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	$run ./try
 	castflags=$?
 else
-	echo "(I can't seem to compile the test program--assuming it can't)"
-	castflags=7
+	if test "x$castflags" != "x"; then
+		castflags=$castflags
+	else
+		echo "(I can't seem to compile the test program--assuming it can't)"
+		castflags=7
+	fi
 fi
 case "$castflags" in
 0)	val="$define"
@@ -11805,7 +11819,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		o_nonblock=`$run ./try`
 		case "$o_nonblock" in
 		'') echo "I can't figure it out, assuming O_NONBLOCK will do.";;
@@ -11909,7 +11923,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		echo "$startsh" >mtry
 		echo "$run ./try >try.out 2>try.ret 4>try.err || exit 4" >>mtry
 		chmod +x mtry
@@ -12307,7 +12321,7 @@
 case "$d_fcntl" in
 "$define")
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		if $run ./try; then
 			echo "Yes, it seems to work."
 			val="$define"
@@ -12570,7 +12584,7 @@
 }
 EOCP
 set try
-if eval $compile; then
+if eval $compile && $run ./try > /dev/null; then
     `$run ./try`
     rc=$?
     case "$rc" in
@@ -14204,7 +14218,7 @@
     } /* main */
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 	    foo=`$run ./try`
 	    echo "Yes, it does ($foo)" >&4
 	    d_libm_lib_version="$define"
@@ -14428,7 +14442,7 @@
 		ccflags="$ccflags -qlongdouble" ;; # to avoid core dump
 	esac
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		foo=`$run ./try`
 		case "$foo" in
 		*" 4294967303.150000 1.150000 4294967302.000000")
@@ -14597,7 +14611,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		dflt=`$run ./try`
 	else
 		dflt='1'
@@ -14713,7 +14727,7 @@
 esac
 case "$i8type" in
 '')	set try -DINT8
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		case "`$run ./try`" in
 		int8_t)	i8type=int8_t
 			u8type=uint8_t
@@ -14746,7 +14760,7 @@
 esac
 case "$i16type" in
 '')	set try -DINT16
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		case "`$run ./try`" in
 		int16_t)
 			i16type=int16_t
@@ -14788,7 +14802,7 @@
 esac
 case "$i32type" in
 '')	set try -DINT32
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		case "`$run ./try`" in
 		int32_t)
 			i32type=int32_t
@@ -14871,7 +14885,7 @@
 set try
 
 d_nv_preserves_uv="$undef"
-if eval $compile; then
+if eval $compile && $run ./try > /dev/null; then
 	nv_preserves_uv_bits="`$run ./try`"
 fi
 case "$nv_preserves_uv_bits" in
@@ -14983,7 +14997,7 @@
 set try
 
 d_nv_zero_is_allbits_zero="$undef"
-if eval $compile; then
+if eval $compile && $run ./try > /dev/null; then
     xxx="`$run ./try`"
     case "$?" in
 	0)
@@ -15484,7 +15498,7 @@
 }
 EOCP
 		set try
-		if eval $compile_ok; then
+		if eval $compile_ok && $run ./try > /dev/null; then
 			if ./try 2>/dev/null; then
 				echo "Yes, it can."
 				val="$define"
@@ -15560,7 +15574,7 @@
 }
 EOCP
 		set try
-		if eval $compile_ok; then
+		if eval $compile_ok && $run ./try > /dev/null; then
 			if ./try 2>/dev/null; then
 				echo "Yes, it can."
 				val="$define"
@@ -15616,7 +15630,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		if $run ./try 2>/dev/null; then
 			echo "Yes, it can."
 			val="$define"
@@ -15786,7 +15800,7 @@
 }
 END
       set try
-      if eval $compile; then
+      if eval $compile && $run ./try > /dev/null; then
 	  xxx=`$run ./try`
           case "$xxx" in
           semun) val="$define" ;;
@@ -15848,7 +15862,7 @@
 }
 END
       set try
-      if eval $compile; then
+      if eval $compile && $run ./try > /dev/null; then
           xxx=`$run ./try`
           case "$xxx" in
           semid_ds) val="$define" ;;
@@ -16503,7 +16517,7 @@
 }
 EOP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		if $run ./try >/dev/null 2>&1; then
 			echo "POSIX sigsetjmp found." >&4
 			val="$define"
@@ -16587,7 +16601,7 @@
 set try
 
 d_sprintf_returns_strlen="$undef"
-if eval $compile; then
+if eval $compile && $run ./try > /dev/null; then
     xxx="`$run ./try`"
     case "$?" in
 	0) cat >&4 <<EOM
@@ -16762,7 +16776,7 @@
 	for s in _iob __iob __sF
 	do
 	        set try -DSTDIO_STREAM_ARRAY=$s
-		if eval $compile; then
+		if eval $compile && $run ./try > /dev/null; then
 		    	case "`$run ./try`" in
 			yes)	stdio_stream_array=$s; break ;;
 			esac
@@ -16965,7 +16979,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		ok) echo "Your strtoll() seems to be working okay." ;;
@@ -17050,7 +17064,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		case "`$run ./try`" in
 		ok) echo "Your strtoul() seems to be working okay." ;;
 		*) cat <<EOM >&4
@@ -17104,7 +17118,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		case "`$run ./try`" in
 		ok) echo "Your strtoull() seems to be working okay." ;;
 		*) cat <<EOM >&4
@@ -17156,7 +17170,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		case "`$run ./try`" in
 		ok) echo "Your strtouq() seems to be working okay." ;;
 		*) cat <<EOM >&4
@@ -17519,7 +17533,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	echo "(Testing for character data alignment may crash the test.  That's okay.)" >&4
 	$run ./try 2>&1 >/dev/null
 	case "$?" in
@@ -17660,7 +17674,7 @@
 int main() { return closedir(opendir(".")); }
 EOM
 	set try
-	if eval $compile_ok; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		if $run ./try > /dev/null 2>&1 ; then
 			echo "Yes, it does."
 			val="$undef"
@@ -17745,7 +17759,7 @@
 }
 EOCP
 		set try
-		if eval $compile_ok; then
+		if eval $compile_ok && $run ./try > /dev/null; then
 			dflt=`$run ./try`
 		else
 			dflt='8'
@@ -17868,7 +17882,7 @@
 }
 EOCP
 	set try
-	if eval $compile_ok && $run ./try; then
+	if eval $compile_ok && $run ./try > /dev/null; then
 		echo 'Looks OK.' >&4
 		set `$run ./try 1`
 		db_version_major=$1
@@ -18075,7 +18089,7 @@
 }
 EOCP
 				set try
-				if eval $compile_ok; then
+				if eval $compile_ok && $run ./try > /dev/null; then
 					dflt=`try`
 				else
 					dflt='?'
@@ -18126,7 +18140,7 @@
 
 val=$undef
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	if $run ./try; then
 		echo "You seem to speak EBCDIC." >&4
 		val="$define"
@@ -18221,7 +18235,7 @@
 if $test "X$fflushNULL" = X -o "X$fflushall" = X; then
     output=''
     set try -DTRY_FPUTC
-    if eval $compile; then
+    if eval $compile && $run ./try > /dev/null; then
  	    $run ./try 2>/dev/null
 	    code="$?"
 	    $from try.out
@@ -18232,7 +18246,7 @@
     case "$output" in
     '')
 	    set try -DTRY_FPRINTF
-	    if eval $compile; then
+	    if eval $compile && $run ./try > /dev/null; then
  		    $run ./try 2>/dev/null
 		    code="$?"
 		    $from try.out
@@ -18246,7 +18260,7 @@
 : check for fflush NULL behaviour
 case "$fflushNULL" in
 '') 	set try -DTRY_FFLUSH_NULL $output
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 	    	$run ./try 2>/dev/null
 		code="$?"
 		$from try.out
@@ -18293,7 +18307,7 @@
 EOCP
                 fflushNULL="$define"
                 set tryp
-                if eval $compile; then
+		if eval $compile && $run ./tryp > /dev/null; then
                     $rm -f tryp.out
                     $cat tryp.c | $run ./tryp 2>/dev/null > tryp.out
                     if cmp tryp.c tryp.out >/dev/null 2>&1; then
@@ -18357,7 +18371,7 @@
 }
 EOCP
 	set tryp
-	if eval $compile; then
+	if eval $compile && $run ./tryp > /dev/null; then
 	    $rm -f tryp.out
 	    $cat tryp.c | $run ./tryp 2>/dev/null > tryp.out
 	    if cmp tryp.c tryp.out >/dev/null 2>&1; then
@@ -18367,7 +18381,7 @@
 		: now check for fflushall behaviour
 		case "$fflushall" in
 		'') 	set try -DTRY_FFLUSH_ALL $output
-			if eval $compile; then
+			if eval $compile && $run ./try > /dev/null; then
 				$cat >&4 <<EOM
 (Now testing the other method--but note that this also may fail.)
 EOM
@@ -18482,7 +18496,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	yyy=`$run ./try`
 	case "$yyy" in
 	'')	gidsize=4
@@ -18516,7 +18530,7 @@
 }
 EOCP
 set try
-if eval $compile; then
+if eval $compile && $run ./try > /dev/null; then
 	yyy=`$run ./try`
 	case "$yyy" in
 	'')	gidsign=1
@@ -18551,7 +18565,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		12345678901)
@@ -18573,7 +18587,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		12345678901)
@@ -18596,7 +18610,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		12345678901)
@@ -18618,7 +18632,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		12345678901)
@@ -18640,7 +18654,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		12345678901)
@@ -18662,7 +18676,7 @@
 }
 EOCP
 	set try
-	if eval $compile; then
+	if eval $compile && $run ./try > /dev/null; then
 		yyy=`$run ./try`
 		case "$yyy" in
 		12345678901)
@@ -19347,7 +19361,7 @@
 }
 EOCP
 		set try
-		if eval $compile_ok; then
+		if eval $compile_ok && $run ./try > /dev/null; then
 			selectminbits=`$run ./try`
 			case "$selectminbits" in
 			'')	cat >&4 <<EOM
@@ -19544,7 +19558,7 @@
 $cat >>signal_cmd <<'EOS'
 
 set signal
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	$run ./signal$_exe | ($sort -n -k 2 2>/dev/null || $sort -n +1) | $uniq | $awk -f signal.awk >signal.lst
 else
 	echo "(I can't seem be able to compile the whole test program)" >&4
@@ -19666,7 +19680,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	yyy=`$run ./try`
 	case "$yyy" in
 	'')	sizesize=4
@@ -19858,7 +19872,7 @@
 }
 EOCP
 set try
-if eval $compile_ok; then
+if eval $compile_ok && $run ./try > /dev/null; then
 	yyy=`$run ./try`
 	case "$yyy" in
 	'')	uidsize=4
@@ -19891,7 +19905,7 @@
 }
 EOCP
 set try
-if eval $compile; then
+if eval $compile && $run ./try > /dev/null; then
 	yyy=`$run ./try`
 	case "$yyy" in
 	'')	uidsign=1
diff -Naur perl-5.8.8-old/hints/linux.sh perl-5.8.8-new/hints/linux.sh
--- perl-5.8.8-old/hints/linux.sh	2005-11-17 17:18:45.000000000 -0800
+++ perl-5.8.8-new/hints/linux.sh	2008-02-15 09:42:46.000000000 -0800
@@ -123,7 +123,7 @@
 	exit(0); /* succeed (yes, it's ELF) */
 }
 EOM
-if ${cc:-gcc} try.c >/dev/null 2>&1 && $run ./a.out; then
+if true; then
     cat <<'EOM' >&4
 
 You appear to have ELF support.  I'll try to use it for dynamic loading.
