diff -Naur NVIDIA-Linux-x86_64-1.0-7185-pkg2-old/usr/src/nv/nv.c NVIDIA-Linux-x86_64-1.0-7185-pkg2-new/usr/src/nv/nv.c
--- NVIDIA-Linux-x86_64-1.0-7185-pkg2-old/usr/src/nv/nv.c	2007-04-02 13:36:42.000000000 -0700
+++ NVIDIA-Linux-x86_64-1.0-7185-pkg2-new/usr/src/nv/nv.c	2007-10-17 19:34:24.000000000 -0700
@@ -90,7 +90,7 @@
 int nv_use_cpa = 1;
 #endif
 
-static kmem_cache_t *nv_pte_t_cache = NULL;
+static struct kmem_cache *nv_pte_t_cache = NULL;	//	kernel 2.6.23
 
 // allow an easy way to convert all debug printfs related to events
 // back and forth between 'info' and 'errors'
@@ -1463,8 +1463,7 @@
         if (apm_nv_dev[i] != NULL) pm_unregister(apm_nv_dev[i]);
 #endif
 
-    if (unregister_chrdev(nv_major, "nvidia") < 0)
-        nv_printf(NV_DBG_ERRORS, "NVRM: unregister nv chrdev failed\n");
+    unregister_chrdev(nv_major, "nvidia") ; // kernel 2.6.23 -- this now returns void (don't ask why)
 
     for (i = 0; i < num_nv_devices; i++)
     {
@@ -1488,9 +1487,8 @@
 
     nv_printf(NV_DBG_INFO, "NVRM: nvidia_exit_module\n");
 
-    if (unregister_chrdev(nv_major, "nvidia") < 0)
-        nv_printf(NV_DBG_ERRORS, "NVRM: unregister nv chrdev failed\n");
-
+//		2.6.23 -- unregister_chrdev now returns void.  Don't ask why.
+    unregister_chrdev(nv_major, "nvidia") ;
     for (i = 0; i < num_nv_devices; i++)
     {
         struct pci_dev *dev;
diff -Naur NVIDIA-Linux-x86_64-1.0-7185-pkg2-old/usr/src/nv/nv-linux.h NVIDIA-Linux-x86_64-1.0-7185-pkg2-new/usr/src/nv/nv-linux.h
--- NVIDIA-Linux-x86_64-1.0-7185-pkg2-old/usr/src/nv/nv-linux.h	2007-04-02 13:36:42.000000000 -0700
+++ NVIDIA-Linux-x86_64-1.0-7185-pkg2-new/usr/src/nv/nv-linux.h	2007-10-17 19:34:24.000000000 -0700
@@ -488,12 +488,12 @@
     {                                                \
         free_pages(ptr, order);                      \
     }
-
+// only 5 args in kernel 2.6.23
 #define NV_KMEM_CACHE_CREATE(kmem_cache, name, type)            \
     {                                                           \
         kmem_cache = kmem_cache_create(name, sizeof(type),      \
-                        0, 0, NULL, NULL);                      \
-    } 
+                        0, 0, NULL);                            \
+    }
 
 #define NV_KMEM_CACHE_DESTROY(kmem_cache)                       \
     {                                                           \
