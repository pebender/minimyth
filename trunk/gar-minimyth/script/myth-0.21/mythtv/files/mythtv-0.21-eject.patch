diff -Naur mythtv-0.21-20390-old/libs/libmyth/mythcdrom-linux.cpp mythtv-0.21-20390-new/libs/libmyth/mythcdrom-linux.cpp
--- mythtv-0.21-20390-old/libs/libmyth/mythcdrom-linux.cpp	2009-04-15 11:41:37.000000000 -0700
+++ mythtv-0.21-20390-new/libs/libmyth/mythcdrom-linux.cpp	2009-04-15 11:41:38.000000000 -0700
@@ -13,9 +13,18 @@
 #include <linux/iso_fs.h>
 #include <unistd.h>
 
+// Qt Headers
+#include <qfile.h>
+#include <qstring.h>
+
+// MythTV headers
+#include "util.h"
+
 #define LOC     QString("MythCDROMLinux:")
 #define LOC_ERR QString("mythcdrom-linux, Error: ")
 
+#define PATHTO_EJECT QString("/usr/bin/eject")
+
 // On a mixed-mode disc (audio+data), set this to 0 to mount the data portion:
 #define ASSUME_WANT_AUDIO 1
 
@@ -290,12 +299,31 @@
 
 MediaError MythCDROMLinux::eject(bool open_close)
 {
+    QString MountCommand;
+
     if (!isDeviceOpen())
         openDevice();
 
     if (open_close)
-        return (ioctl(m_DeviceHandle, CDROMEJECT) == 0) ? MEDIAERR_OK
-                                                        : MEDIAERR_FAILED;
+    {
+        if (QFile(PATHTO_EJECT).exists())
+        {
+            MountCommand = QString("%1 %3")
+                .arg(PATHTO_EJECT)
+                .arg(m_DevicePath);
+            VERBOSE(VB_IMPORTANT,  QString("Executing '%1'").arg(MountCommand));
+            if (0 == myth_system(MountCommand)) 
+                return MEDIAERR_OK;
+            else
+                return (ioctl(m_DeviceHandle, CDROMEJECT) == 0) ? MEDIAERR_OK
+                                                                : MEDIAERR_FAILED;
+        }
+        else
+        {
+            return (ioctl(m_DeviceHandle, CDROMEJECT) == 0) ? MEDIAERR_OK
+                                                            : MEDIAERR_FAILED;
+        }
+    }
     else
     {
         // If the tray is empty, this will fail (Input/Output error)
