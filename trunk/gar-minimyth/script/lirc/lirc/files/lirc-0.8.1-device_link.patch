diff -Naur lirc-0.8.1-old/drivers/lirc_atiusb/lirc_atiusb.c lirc-0.8.1-new/drivers/lirc_atiusb/lirc_atiusb.c
--- lirc-0.8.1-old/drivers/lirc_atiusb/lirc_atiusb.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_atiusb/lirc_atiusb.c	2007-02-10 09:20:30.000000000 -0800
@@ -1129,7 +1129,7 @@
 #endif
 	}
 	if (ir->dev_refcount == 1) {
-		if ((ir->p->minor = lirc_register_plugin(ir->p)) < 0) {
+		if ((ir->p->minor = lirc_register_plugin(ir->p, &dev->dev)) < 0) {
 			free_irctl(ir, FREE_ALL);
 #ifdef KERNEL_2_5
 			return -ENODEV;
diff -Naur lirc-0.8.1-old/drivers/lirc_bt829/lirc_bt829.c lirc-0.8.1-new/drivers/lirc_bt829/lirc_bt829.c
--- lirc-0.8.1-old/drivers/lirc_bt829/lirc_bt829.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_bt829/lirc_bt829.c	2007-02-10 10:07:01.000000000 -0800
@@ -65,6 +65,7 @@
 	}while(0)
 
 static int atir_minor;
+static struct pci_dev *pdev;
 static unsigned long pci_addr_phys;
 static unsigned char *pci_addr_lin;
 
@@ -72,20 +73,19 @@
 
 static int do_pci_probe(void)
 {
-	struct pci_dev *my_dev;
 #ifndef KERNEL_2_5
 	/* unnecessary with recent kernels */
 	if ( !pci_present() ) {
 		printk(KERN_ERR "ATIR: no pci in this kernel\n");
 	}
 #endif
-	my_dev = (struct pci_dev *)pci_find_device(PCI_VENDOR_ID_ATI, PCI_DEVICE_ID_ATI_264VT,NULL);
-	if ( my_dev ) {
+	pdev = (struct pci_dev *)pci_find_device(PCI_VENDOR_ID_ATI, PCI_DEVICE_ID_ATI_264VT,NULL);
+	if ( pdev ) {
 		printk(KERN_ERR "ATIR: Using device: %s\n",
-		       pci_name(my_dev));
+		       pci_name(pdev));
 		pci_addr_phys = 0;
-		if ( my_dev->resource[0].flags & IORESOURCE_MEM ) {
-			pci_addr_phys = my_dev->resource[0].start;
+		if ( pdev->resource[0].flags & IORESOURCE_MEM ) {
+			pci_addr_phys = pdev->resource[0].start;
 			printk(KERN_INFO "ATIR memory at 0x%08X \n",(unsigned int)pci_addr_phys);
 		}
 		if ( pci_addr_phys == 0 ) {
@@ -147,7 +147,7 @@
 	atir_plugin.set_use_dec = atir_set_use_dec;
 	atir_plugin.owner       = THIS_MODULE;
 
-	atir_minor = lirc_register_plugin(&atir_plugin);
+	atir_minor = lirc_register_plugin(&atir_plugin, &pdev->dev);
 	dprintk("ATIR driver is registered on minor %d\n",atir_minor);
 
 	return 0;
diff -Naur lirc-0.8.1-old/drivers/lirc_cmdir/lirc_cmdir.c lirc-0.8.1-new/drivers/lirc_cmdir/lirc_cmdir.c
--- lirc-0.8.1-old/drivers/lirc_cmdir/lirc_cmdir.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_cmdir/lirc_cmdir.c	2007-02-10 09:20:30.000000000 -0800
@@ -590,7 +590,7 @@
 int init_module(void)
 {
 	plugin.features = hardware.features;
-	if ((plugin.minor = lirc_register_plugin(&plugin)) < 0) 
+	if ((plugin.minor = lirc_register_plugin(&plugin, NULL)) < 0) 
 	{
 		printk(KERN_ERR  LIRC_DRIVER_NAME  
 		       ": register_chrdev failed!\n");
diff -Naur lirc-0.8.1-old/drivers/lirc_dev/lirc_dev.c lirc-0.8.1-new/drivers/lirc_dev/lirc_dev.c
--- lirc-0.8.1-old/drivers/lirc_dev/lirc_dev.c	2006-12-29 02:00:07.000000000 -0800
+++ lirc-0.8.1-new/drivers/lirc_dev/lirc_dev.c	2007-02-10 09:20:30.000000000 -0800
@@ -233,7 +233,7 @@
 /*
  *
  */
-int lirc_register_plugin(struct lirc_plugin *p)
+int lirc_register_plugin(struct lirc_plugin *p, struct device *dev)
 {
 	struct irctl *ir;
 	int minor;
@@ -380,7 +380,7 @@
 #endif
 	(void) lirc_class_device_create(lirc_class, NULL, 
 					MKDEV(IRCTL_DEV_MAJOR, ir->p.minor),
-					NULL, "lirc%u", ir->p.minor);
+					dev, "lirc%u", ir->p.minor);
 
 	if(p->sample_rate || p->get_queue) {
 		/* try to fire up polling thread */
diff -Naur lirc-0.8.1-old/drivers/lirc_dev/lirc_dev.h lirc-0.8.1-new/drivers/lirc_dev/lirc_dev.h
--- lirc-0.8.1-old/drivers/lirc_dev/lirc_dev.h	2006-09-21 20:18:22.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_dev/lirc_dev.h	2007-02-10 09:20:30.000000000 -0800
@@ -233,7 +233,7 @@
  * of the registered device if success
  * contens of the structure pointed by p is copied
  */
-extern int lirc_register_plugin(struct lirc_plugin *p);
+extern int lirc_register_plugin(struct lirc_plugin *p, struct device *dev);
 
 /* returns negative value on error or 0 if success
 */
diff -Naur lirc-0.8.1-old/drivers/lirc_gpio/lirc_gpio.c lirc-0.8.1-new/drivers/lirc_gpio/lirc_gpio.c
--- lirc-0.8.1-old/drivers/lirc_gpio/lirc_gpio.c	2006-07-05 23:42:44.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_gpio/lirc_gpio.c	2007-02-10 10:07:25.000000000 -0800
@@ -387,6 +387,16 @@
 {  	
 	int ret;
 	unsigned int mask;
+	struct pci_dev *pdev;
+	struct device *dev;
+
+	/* get device */
+	pdev = bttv_get_pcidev(card);
+	if (pdev == NULL) {
+		dev = NULL;
+        } else {
+		dev = &pdev->dev;
+        }
 
 	/* "normalize" gpio_mask
 	 * this means shift it right until first bit is set
@@ -431,7 +441,7 @@
 	plugin.minor = minor;
 	plugin.sample_rate = sample_rate;
 
-	ret = lirc_register_plugin(&plugin);
+	ret = lirc_register_plugin(&plugin, dev);
 	
 	if (0 > ret) {
 		printk (LOGHEAD "device registration failed with %d\n",
diff -Naur lirc-0.8.1-old/drivers/lirc_i2c/lirc_i2c.c lirc-0.8.1-new/drivers/lirc_i2c/lirc_i2c.c
--- lirc-0.8.1-old/drivers/lirc_i2c/lirc_i2c.c	2006-06-26 16:21:34.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_i2c/lirc_i2c.c	2007-02-10 09:20:30.000000000 -0800
@@ -472,7 +472,7 @@
 	
 	/* register device */
 	i2c_attach_client(&ir->c);
-	ir->l.minor = lirc_register_plugin(&ir->l);
+	ir->l.minor = lirc_register_plugin(&ir->l, &ir->c.adapter->dev);
 	
 	return 0;
 }
diff -Naur lirc-0.8.1-old/drivers/lirc_igorplugusb/lirc_igorplugusb.c lirc-0.8.1-new/drivers/lirc_igorplugusb/lirc_igorplugusb.c
--- lirc-0.8.1-old/drivers/lirc_igorplugusb/lirc_igorplugusb.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_igorplugusb/lirc_igorplugusb.c	2007-02-10 09:20:30.000000000 -0800
@@ -510,7 +510,7 @@
 			init_MUTEX(&ir->lock);
 			init_waitqueue_head(&ir->wait_out);
 
-			if ((minor = lirc_register_plugin(plugin)) < 0) {
+			if ((minor = lirc_register_plugin(plugin, &dev->dev)) < 0) {
 				mem_failure = 9;
 			}
 		}
diff -Naur lirc-0.8.1-old/drivers/lirc_imon/lirc_imon.c lirc-0.8.1-new/drivers/lirc_imon/lirc_imon.c
--- lirc-0.8.1-old/drivers/lirc_imon/lirc_imon.c	2006-12-29 02:00:07.000000000 -0800
+++ lirc-0.8.1-new/drivers/lirc_imon/lirc_imon.c	2007-02-10 09:20:30.000000000 -0800
@@ -1013,7 +1013,7 @@
 
 		LOCK_CONTEXT;
 
-		if ((lirc_minor = lirc_register_plugin (plugin)) < 0) {
+		if ((lirc_minor = lirc_register_plugin (plugin, &dev->dev)) < 0) {
 			err ("%s: lirc_register_plugin failed", __FUNCTION__);
 			alloc_status = 7;
 			UNLOCK_CONTEXT;
diff -Naur lirc-0.8.1-old/drivers/lirc_it87/lirc_it87.c lirc-0.8.1-new/drivers/lirc_it87/lirc_it87.c
--- lirc-0.8.1-old/drivers/lirc_it87/lirc_it87.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_it87/lirc_it87.c	2007-02-10 09:20:30.000000000 -0800
@@ -414,7 +414,7 @@
 #ifdef MODULE
 static int init_chrdev(void)
 {
-	plugin.minor = lirc_register_plugin(&plugin);
+	plugin.minor = lirc_register_plugin(&plugin, NULL);
 	
 	if (plugin.minor < 0) {
 		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");
diff -Naur lirc-0.8.1-old/drivers/lirc_mceusb/lirc_mceusb.c lirc-0.8.1-new/drivers/lirc_mceusb/lirc_mceusb.c
--- lirc-0.8.1-old/drivers/lirc_mceusb/lirc_mceusb.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_mceusb/lirc_mceusb.c	2007-02-10 09:20:30.000000000 -0800
@@ -862,7 +862,7 @@
 	plugin->add_to_buf  = &mceusb_add_to_buf;
 	//    plugin->fops        = &mceusb_fops;
 	plugin->owner       = THIS_MODULE;
-	if( lirc_register_plugin(plugin) < 0 )
+	if( lirc_register_plugin(plugin, &udev->dev) < 0 )
 	{
 		kfree( plugin );
 		lirc_buffer_free( rbuf );
diff -Naur lirc-0.8.1-old/drivers/lirc_mceusb2/lirc_mceusb2.c lirc-0.8.1-new/drivers/lirc_mceusb2/lirc_mceusb2.c
--- lirc-0.8.1-old/drivers/lirc_mceusb2/lirc_mceusb2.c	2006-11-30 20:28:01.000000000 -0800
+++ lirc-0.8.1-new/drivers/lirc_mceusb2/lirc_mceusb2.c	2007-02-10 09:20:30.000000000 -0800
@@ -727,7 +727,7 @@
 			init_MUTEX(&ir->lock);
 			init_waitqueue_head(&ir->wait_out);
 
-			if ((minor = lirc_register_plugin(plugin)) < 0) {
+			if ((minor = lirc_register_plugin(plugin, &dev->dev)) < 0) {
 				mem_failure = 9;
 			}
 		}
diff -Naur lirc-0.8.1-old/drivers/lirc_parallel/lirc_parallel.c lirc-0.8.1-new/drivers/lirc_parallel/lirc_parallel.c
--- lirc-0.8.1-old/drivers/lirc_parallel/lirc_parallel.c	2006-10-19 22:03:38.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_parallel/lirc_parallel.c	2007-02-10 09:20:30.000000000 -0800
@@ -759,7 +759,7 @@
 	is_claimed=0;
 	parport_release(ppdevice);
  skip_init:
-	if ((plugin.minor = lirc_register_plugin(&plugin)) < 0)
+	if ((plugin.minor = lirc_register_plugin(&plugin, NULL)) < 0)
 	{
 		printk(KERN_NOTICE "%s: register_chrdev() failed\n",LIRC_DRIVER_NAME);
 		parport_unregister_device(ppdevice);
diff -Naur lirc-0.8.1-old/drivers/lirc_sasem/lirc_sasem.c lirc-0.8.1-new/drivers/lirc_sasem/lirc_sasem.c
--- lirc-0.8.1-old/drivers/lirc_sasem/lirc_sasem.c	2006-12-29 02:00:07.000000000 -0800
+++ lirc-0.8.1-new/drivers/lirc_sasem/lirc_sasem.c	2007-02-10 09:20:30.000000000 -0800
@@ -898,7 +898,7 @@
 
 		LOCK_CONTEXT;
 
-		if ((lirc_minor = lirc_register_plugin (plugin)) < 0) {
+		if ((lirc_minor = lirc_register_plugin (plugin, &dev->dev)) < 0) {
 			err ("%s: lirc_register_plugin failed", __FUNCTION__);
 			alloc_status = 7;
 			UNLOCK_CONTEXT;
diff -Naur lirc-0.8.1-old/drivers/lirc_serial/lirc_serial.c lirc-0.8.1-new/drivers/lirc_serial/lirc_serial.c
--- lirc-0.8.1-old/drivers/lirc_serial/lirc_serial.c	2006-12-27 12:59:25.000000000 -0800
+++ lirc-0.8.1-new/drivers/lirc_serial/lirc_serial.c	2007-02-10 09:20:30.000000000 -0800
@@ -1182,7 +1182,7 @@
 		return result;
 	}
 	plugin.features = hardware[type].features;
-	if ((plugin.minor = lirc_register_plugin(&plugin)) < 0) {
+	if ((plugin.minor = lirc_register_plugin(&plugin, NULL)) < 0) {
 		printk(KERN_ERR  LIRC_DRIVER_NAME  
 		       ": register_chrdev failed!\n");
 		release_region(io, 8);
diff -Naur lirc-0.8.1-old/drivers/lirc_sir/lirc_sir.c lirc-0.8.1-new/drivers/lirc_sir/lirc_sir.c
--- lirc-0.8.1-old/drivers/lirc_sir/lirc_sir.c	2006-10-19 22:03:39.000000000 -0700
+++ lirc-0.8.1-new/drivers/lirc_sir/lirc_sir.c	2007-02-10 09:20:30.000000000 -0800
@@ -544,7 +544,7 @@
 #ifdef MODULE
 static int init_chrdev(void)
 {
-	plugin.minor = lirc_register_plugin(&plugin);
+	plugin.minor = lirc_register_plugin(&plugin, NULL);
 	if (plugin.minor < 0) {
 		printk(KERN_ERR LIRC_DRIVER_NAME ": init_chrdev() failed.\n");
 		return -EIO;
diff -Naur lirc-0.8.1-old/drivers/lirc_streamzap/lirc_streamzap.c lirc-0.8.1-new/drivers/lirc_streamzap/lirc_streamzap.c
--- lirc-0.8.1-old/drivers/lirc_streamzap/lirc_streamzap.c	2006-11-30 20:11:52.000000000 -0800
+++ lirc-0.8.1-new/drivers/lirc_streamzap/lirc_streamzap.c	2007-02-10 09:20:30.000000000 -0800
@@ -643,7 +643,7 @@
 	usb_set_intfdata( interface , sz );
 #endif
 
-	if(lirc_register_plugin(&sz->plugin) < 0)
+	if(lirc_register_plugin(&sz->plugin, &udev->dev) < 0)
 	{
 		lirc_buffer_free(&sz->delay_buf);
 		lirc_buffer_free(&sz->lirc_buf);
