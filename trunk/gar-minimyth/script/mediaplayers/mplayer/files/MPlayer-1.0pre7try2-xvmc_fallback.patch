diff -Naur MPlayer-1.0pre7try2-old/libmpcodecs/vd_ffmpeg.c MPlayer-1.0pre7try2-new/libmpcodecs/vd_ffmpeg.c
--- MPlayer-1.0pre7try2-old/libmpcodecs/vd_ffmpeg.c	2005-09-09 06:03:53.000000000 -0700
+++ MPlayer-1.0pre7try2-new/libmpcodecs/vd_ffmpeg.c	2005-09-09 06:03:39.000000000 -0700
@@ -12,6 +12,7 @@
 #include "bswap.h"
 
 #include "vd_internal.h"
+#include "libvo/video_out.h"
 
 static vd_info_t info = {
 	"FFmpeg's libavcodec codec family",
@@ -168,6 +169,9 @@
     AVCodecContext *avctx;
     vd_ffmpeg_ctx *ctx;
     AVCodec *lavc_codec;
+#if defined(HAVE_XVMC)||defined(HAVE_XVMC_VLD)
+    char *voname=0;
+#endif
 #if LIBAVCODEC_BUILD >= 4722
     int lowres_w=0;
 #endif
@@ -212,12 +216,25 @@
 #endif
 
 #if defined(HAVE_XVMC)||defined(HAVE_XVMC_VLD)
+    // Try and get the name of the selected vo system
+    // so that if its _not_ xvmc we can fail gracefully
+    // and mplayer can fall back to a sw decoder
+    if (sh->video_out) {
+      vo_info_t *voinfo;
+      vo_functions_t * shvoc=sh->video_out;
+      if (shvoc) {
+        voinfo = shvoc->info;
+        if (voinfo) voname=voinfo->short_name;
+      }
+    }
+
 #ifdef CODEC_CAP_HWACCEL
-    if(lavc_codec->capabilities & CODEC_CAP_HWACCEL){
+    if((lavc_codec->capabilities & CODEC_CAP_HWACCEL) &&
 #else
-    if((lavc_codec->id == CODEC_ID_MPEG2VIDEO_XVMC)||
-	(lavc_codec->id == CODEC_ID_MPEG2VIDEO_XVMC_VLD)){
+    if(((lavc_codec->id == CODEC_ID_MPEG2VIDEO_XVMC)||
+	(lavc_codec->id == CODEC_ID_MPEG2VIDEO_XVMC_VLD)) &&
 #endif
+        voname && !strcmp(voname,"xvmc") ) {
         printf("vd_ffmpeg: XVMC accelerated codec\n");
         assert(ctx->do_dr1);//these are must to!
         assert(ctx->do_slices); //it is (vo_)ffmpeg bug if this fails
diff -Naur MPlayer-1.0pre7try2-old/libvo/vo_xvmc.c MPlayer-1.0pre7try2-new/libvo/vo_xvmc.c
--- MPlayer-1.0pre7try2-old/libvo/vo_xvmc.c	2005-09-09 06:03:53.000000000 -0700
+++ MPlayer-1.0pre7try2-new/libvo/vo_xvmc.c	2005-09-09 06:03:39.000000000 -0700
@@ -49,7 +49,7 @@
 
 #define UNUSED(x) ((void)(x))
 
-
+extern unsigned int video_format; 
 extern int vo_directrendering;
 extern int vo_verbose;
 
@@ -391,6 +391,11 @@
   {  NULL }
 };
 
+   // If the video is not MPEG1 or MPEG2, we can't decode it, so
+   // fail cleanly to allow mplayer to fallback to another vo system
+   if (video_format != 0x10000001 && video_format != 0x10000002) return -1;
+
+
    //Obtain display handler
    if (!vo_init()) return -1;//vo_xv
 
diff -Naur MPlayer-1.0pre7try2-old/mplayer.c MPlayer-1.0pre7try2-new/mplayer.c
--- MPlayer-1.0pre7try2-old/mplayer.c	2005-04-15 05:14:24.000000000 -0700
+++ MPlayer-1.0pre7try2-new/mplayer.c	2005-09-09 06:03:39.000000000 -0700
@@ -88,6 +88,8 @@
 int identify=0;
 int quiet=0;
 
+unsigned int video_format=0;
+
 #ifdef WIN32
 char * proc_priority=NULL;
 #endif
@@ -2007,6 +2009,11 @@
 
 vo_config_count=0;
 //if((video_out->preinit(vo_subdevice))!=0){
+
+// let the video driver know what format the video is in so it can
+// reject it if it wants - lets vo_xvmc fail if ffmpeg12mc codec not used
+video_format=sh_video->format; 
+
 if(!(video_out=init_best_video_out(video_driver_list))){
     mp_msg(MSGT_CPLAYER,MSGL_FATAL,MSGTR_ErrorInitializingVODevice);
     goto goto_next_file; // exit_player(MSGTR_Exit_error);
